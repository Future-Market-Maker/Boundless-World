{"id":"521f741afdf687659ca065ba2b3b5227","_format":"hh-sol-build-info-1","solcVersion":"0.8.15","solcLongVersion":"0.8.15+commit.e14f2714","input":{"language":"Solidity","sources":{"contracts/BEP20/TransferControl.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\";\nimport \"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\";\nimport \"./Administration.sol\";\n\n/**\n * @title control BLB transfers.\n * @notice users may have access to transfer their whole BLB balance or only a \n * certain fraction every monthly(it depends on monthlyLimit).\n * @notice some specific addresses may have restricted access to transfer.\n * @notice owner of the contract can restrict every desired address and also \n * determine a spending limit for all users.\n * @notice if an address is restricted then the public monthlyLimit is diactivated\n * for it\n */\nabstract contract TransferControl is ERC20Capped, Administration {\n    using EnumerableMap for EnumerableMap.AddressToUintMap;\n\n    EnumerableMap.AddressToUintMap restrictedAddresses;\n    \n    struct Period {\n        uint256 spent;\n        uint256 nonce;\n    }\n\n    mapping(address => Period) checkpoints;\n\n    uint256 public monthlyLimit;\n    uint256 immutable startTime;\n    uint256 immutable monthlyTime;\n\n    constructor(uint256 _monthlyTime) {\n        startTime = block.timestamp;\n        monthlyTime = _monthlyTime;\n    }\n\n    /**\n     * @dev emits when the admin sets a new value as the monthlyLimit.\n     */\n    event SetPeriodTransferLimit(uint256 fraction);\n\n    /**\n     * @dev emits when the admin restricts an address.\n     */\n    event Restrict(address addr, uint256 amount);\n\n    /**\n     * @dev emits when the admin districts an address.\n     */\n    event District(address addr);\n\n    /**\n     * @notice set spend limit for monthly transfers.\n     * @notice there is no transfer limit if fraction is 10**6.\n     *\n     * @param fraction the numerator of transfer limit rate which denominator\n     * is 10**6.\n     *\n     * @notice require:\n     *  - only owner of contract can call this function.\n     *  - maximum fraction can be 10**6 (equal to 100%).\n     * \n     * @notice emits a SetPeriodTransferLimit event.\n     */\n    function setPeriodTransferLimit(uint256 fraction) \n        public \n        onlyRole(TRANSFER_LIMIT_SETTER) \n    {\n        require(fraction <= 10 ** 6, \"TransferControl: maximum fraction is 10**6 (equal to 100%)\");\n        monthlyLimit = fraction;\n\n        emit SetPeriodTransferLimit(fraction);\n    }\n\n    /**\n     * @notice restrict an address \n     * @notice the address `addr` will be only able to spend as much as `amount`.\n     *\n     * @param addr the restricted address.\n     * @param amount restricted spendable amount.\n     *\n     * @notice require:\n     *  - only RESTRICTOR_ROLE address can call this function.\n     * \n     * @notice emits a Restrict event.\n     */\n    function restrict(address addr, uint256 amount) public onlyRole(RESTRICTOR_ROLE) {\n        restrictedAddresses.set(addr, amount);\n        emit Restrict(addr, amount);\n    }\n\n    /**\n     * @notice district an address \n     * @notice the address `addr` will be free to spend their BLB like regular\n     * addresses.\n     *\n     * @param addr the address that is going to be districted.\n     *\n     * @notice require:\n     *  - only RESTRICTOR_ROLE address can call this function.\n     * \n     * @notice emits a District event.\n     */\n    function district(address addr) public onlyRole(RESTRICTOR_ROLE) {\n        restrictedAddresses.remove(addr);\n    }\n\n    /**\n     * @return boolean true if the address is restricted.\n     *\n     * @param addr the address that is going to be checked.\n     */\n    function isRestricted(address addr) public view returns(bool) {\n        return restrictedAddresses.contains(addr);\n    }\n\n    /**\n     * @return amount that the address can spend.\n     * \n     * @dev if the address restricted, the amount equals remaining spendable amount for the \n     * address. else if there is a spend limit active for the contract, the amount equals \n     * the address's remaining monthly spendable amount. else the amount equals balance of the\n     * address.\n     * \n     * @dev MINTER_ROLE can also be restricted so\n     * \n     * @param addr the address that is being checked.\n     */\n    function canSpend(address addr) public view returns(uint256 amount) {\n        if (isRestricted(addr)){\n            return restrictedAddresses.get(addr);\n        } else if(hasRole(MINTER_ROLE, addr)) {\n            return cap() - totalSupply();\n        } else {\n            if(monthlyLimit == 10 ** 6){\n                return balanceOf(addr);\n            } else {\n                uint256 spentAmount;\n                if(checkpoints[addr].nonce == (block.timestamp - startTime) / monthlyTime) {\n                    spentAmount = checkpoints[addr].spent;\n                }\n                uint256 monthlyAmount = (balanceOf(addr) + spentAmount) * monthlyLimit / 10 ** 6;\n                return monthlyAmount - spentAmount;\n            }\n        }\n    }\n\n    function _spend(address addr, uint256 amount) internal {\n        if(isRestricted(addr)) {\n            uint256 spendableAmount = restrictedAddresses.get(addr);\n            require(amount <= spendableAmount, \"TransferControl: amount exceeds spend limit\");\n            restrictedAddresses.set(addr, spendableAmount - amount);\n        } else if (monthlyLimit < 10 ** 6 && !hasRole(MINTER_ROLE, _msgSender())) {\n            uint256 currentNonce = (block.timestamp - startTime) / monthlyTime;\n            uint256 spentAmount = checkpoints[addr].spent;\n            uint256 spendingAmount = spentAmount + amount;\n            if(checkpoints[addr].nonce == currentNonce) {\n                spentAmount = checkpoints[addr].spent;\n            }\n            uint256 monthlyAmount = (balanceOf(addr) + spentAmount) * monthlyLimit / 10 ** 6;\n            require(spendingAmount <= monthlyAmount, \"TransferControl: amount exceeds monthly spend limit\");\n            checkpoints[addr] = Period(spendingAmount, currentNonce);\n        }\n    }\n\n    function _beforeTokenTransfer(address from, address to, uint256 amount)\n        internal\n        virtual\n        override\n    {\n        if(from == address(0)){\n            _spend(_msgSender(), amount);\n        } else {\n            _spend(from, amount);\n        }\n\n        super._beforeTokenTransfer(from, to, amount);\n    }\n\n    function _pureTransfer(address from, address to, uint256 amount) \n        internal \n        virtual\n        override \n    {\n        _spend(from, amount);\n        \n        super._pureTransfer(from, to, amount);\n    }\n}"},"contracts/BEP20/Administration.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/access/AccessControlEnumerable.sol\";\n\nabstract contract Administration is AccessControlEnumerable {\n\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\n    bytes32 public constant RESTRICTOR_ROLE = keccak256(\"RESTRICTOR_ROLE\");\n    bytes32 public constant TRANSFER_LIMIT_SETTER = keccak256(\"TRANSFER_LIMIT_SETTER\");\n    bytes32 public constant TRANSACTION_FEE_SETTER = keccak256(\"TRANSACTION_FEE_SETTER\");\n\n}"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n        }\n        _balances[to] += amount;\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n    \n    /**\n     * @dev normal _transfer without of hook functions.(used for transaction fees)\n     */\n    function _pureTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        \n        if(from != address(0)){\n            uint256 fromBalance = _balances[from];\n            require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n            unchecked {\n                _balances[from] = fromBalance - amount;\n            }\n        } else {\n            _totalSupply += amount;\n        }\n\n        if(to != address(0)) {\n            _balances[to] += amount;\n        } else {\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        _balances[account] += amount;\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n        }\n        _totalSupply -= amount;\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"},"@openzeppelin/contracts/utils/structs/EnumerableMap.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/structs/EnumerableMap.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./EnumerableSet.sol\";\n\n/**\n * @dev Library for managing an enumerable variant of Solidity's\n * https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`]\n * type.\n *\n * Maps have the following properties:\n *\n * - Entries are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Entries are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableMap for EnumerableMap.UintToAddressMap;\n *\n *     // Declare a set state variable\n *     EnumerableMap.UintToAddressMap private myMap;\n * }\n * ```\n *\n * The following map types are supported:\n *\n * - `uint256 -> address` (`UintToAddressMap`) since v3.0.0\n * - `address -> uint256` (`AddressToUintMap`) since v4.6.0\n * - `bytes32 -> bytes32` (`Bytes32ToBytes32`) since v4.6.0\n * - `uint256 -> uint256` (`UintToUintMap`) since v4.7.0\n * - `bytes32 -> uint256` (`Bytes32ToUintMap`) since v4.7.0\n *\n * [WARNING]\n * ====\n *  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\n *  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n *  In order to clean an EnumerableMap, you can either remove all elements one by one or create a fresh instance using an array of EnumerableMap.\n * ====\n */\nlibrary EnumerableMap {\n    using EnumerableSet for EnumerableSet.Bytes32Set;\n\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Map type with\n    // bytes32 keys and values.\n    // The Map implementation uses private functions, and user-facing\n    // implementations (such as Uint256ToAddressMap) are just wrappers around\n    // the underlying Map.\n    // This means that we can only create new EnumerableMaps for types that fit\n    // in bytes32.\n\n    struct Bytes32ToBytes32Map {\n        // Storage of keys\n        EnumerableSet.Bytes32Set _keys;\n        mapping(bytes32 => bytes32) _values;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(\n        Bytes32ToBytes32Map storage map,\n        bytes32 key,\n        bytes32 value\n    ) internal returns (bool) {\n        map._values[key] = value;\n        return map._keys.add(key);\n    }\n\n    /**\n     * @dev Removes a key-value pair from a map. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(Bytes32ToBytes32Map storage map, bytes32 key) internal returns (bool) {\n        delete map._values[key];\n        return map._keys.remove(key);\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bool) {\n        return map._keys.contains(key);\n    }\n\n    /**\n     * @dev Returns the number of key-value pairs in the map. O(1).\n     */\n    function length(Bytes32ToBytes32Map storage map) internal view returns (uint256) {\n        return map._keys.length();\n    }\n\n    /**\n     * @dev Returns the key-value pair stored at position `index` in the map. O(1).\n     *\n     * Note that there are no guarantees on the ordering of entries inside the\n     * array, and it may change when more entries are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32ToBytes32Map storage map, uint256 index) internal view returns (bytes32, bytes32) {\n        bytes32 key = map._keys.at(index);\n        return (key, map._values[key]);\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`.  O(1).\n     * Does not revert if `key` is not in the map.\n     */\n    function tryGet(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bool, bytes32) {\n        bytes32 value = map._values[key];\n        if (value == bytes32(0)) {\n            return (contains(map, key), bytes32(0));\n        } else {\n            return (true, value);\n        }\n    }\n\n    /**\n     * @dev Returns the value associated with `key`.  O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function get(Bytes32ToBytes32Map storage map, bytes32 key) internal view returns (bytes32) {\n        bytes32 value = map._values[key];\n        require(value != 0 || contains(map, key), \"EnumerableMap: nonexistent key\");\n        return value;\n    }\n\n    /**\n     * @dev Same as {_get}, with a custom error message when `key` is not in the map.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {_tryGet}.\n     */\n    function get(\n        Bytes32ToBytes32Map storage map,\n        bytes32 key,\n        string memory errorMessage\n    ) internal view returns (bytes32) {\n        bytes32 value = map._values[key];\n        require(value != 0 || contains(map, key), errorMessage);\n        return value;\n    }\n\n    // UintToUintMap\n\n    struct UintToUintMap {\n        Bytes32ToBytes32Map _inner;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(\n        UintToUintMap storage map,\n        uint256 key,\n        uint256 value\n    ) internal returns (bool) {\n        return set(map._inner, bytes32(key), bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(UintToUintMap storage map, uint256 key) internal returns (bool) {\n        return remove(map._inner, bytes32(key));\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(UintToUintMap storage map, uint256 key) internal view returns (bool) {\n        return contains(map._inner, bytes32(key));\n    }\n\n    /**\n     * @dev Returns the number of elements in the map. O(1).\n     */\n    function length(UintToUintMap storage map) internal view returns (uint256) {\n        return length(map._inner);\n    }\n\n    /**\n     * @dev Returns the element stored at position `index` in the set. O(1).\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintToUintMap storage map, uint256 index) internal view returns (uint256, uint256) {\n        (bytes32 key, bytes32 value) = at(map._inner, index);\n        return (uint256(key), uint256(value));\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`.  O(1).\n     * Does not revert if `key` is not in the map.\n     */\n    function tryGet(UintToUintMap storage map, uint256 key) internal view returns (bool, uint256) {\n        (bool success, bytes32 value) = tryGet(map._inner, bytes32(key));\n        return (success, uint256(value));\n    }\n\n    /**\n     * @dev Returns the value associated with `key`.  O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function get(UintToUintMap storage map, uint256 key) internal view returns (uint256) {\n        return uint256(get(map._inner, bytes32(key)));\n    }\n\n    /**\n     * @dev Same as {get}, with a custom error message when `key` is not in the map.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryGet}.\n     */\n    function get(\n        UintToUintMap storage map,\n        uint256 key,\n        string memory errorMessage\n    ) internal view returns (uint256) {\n        return uint256(get(map._inner, bytes32(key), errorMessage));\n    }\n\n    // UintToAddressMap\n\n    struct UintToAddressMap {\n        Bytes32ToBytes32Map _inner;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(\n        UintToAddressMap storage map,\n        uint256 key,\n        address value\n    ) internal returns (bool) {\n        return set(map._inner, bytes32(key), bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(UintToAddressMap storage map, uint256 key) internal returns (bool) {\n        return remove(map._inner, bytes32(key));\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(UintToAddressMap storage map, uint256 key) internal view returns (bool) {\n        return contains(map._inner, bytes32(key));\n    }\n\n    /**\n     * @dev Returns the number of elements in the map. O(1).\n     */\n    function length(UintToAddressMap storage map) internal view returns (uint256) {\n        return length(map._inner);\n    }\n\n    /**\n     * @dev Returns the element stored at position `index` in the set. O(1).\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintToAddressMap storage map, uint256 index) internal view returns (uint256, address) {\n        (bytes32 key, bytes32 value) = at(map._inner, index);\n        return (uint256(key), address(uint160(uint256(value))));\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`.  O(1).\n     * Does not revert if `key` is not in the map.\n     *\n     * _Available since v3.4._\n     */\n    function tryGet(UintToAddressMap storage map, uint256 key) internal view returns (bool, address) {\n        (bool success, bytes32 value) = tryGet(map._inner, bytes32(key));\n        return (success, address(uint160(uint256(value))));\n    }\n\n    /**\n     * @dev Returns the value associated with `key`.  O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function get(UintToAddressMap storage map, uint256 key) internal view returns (address) {\n        return address(uint160(uint256(get(map._inner, bytes32(key)))));\n    }\n\n    /**\n     * @dev Same as {get}, with a custom error message when `key` is not in the map.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryGet}.\n     */\n    function get(\n        UintToAddressMap storage map,\n        uint256 key,\n        string memory errorMessage\n    ) internal view returns (address) {\n        return address(uint160(uint256(get(map._inner, bytes32(key), errorMessage))));\n    }\n\n    // AddressToUintMap\n\n    struct AddressToUintMap {\n        Bytes32ToBytes32Map _inner;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(\n        AddressToUintMap storage map,\n        address key,\n        uint256 value\n    ) internal returns (bool) {\n        return set(map._inner, bytes32(uint256(uint160(key))), bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(AddressToUintMap storage map, address key) internal returns (bool) {\n        return remove(map._inner, bytes32(uint256(uint160(key))));\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(AddressToUintMap storage map, address key) internal view returns (bool) {\n        return contains(map._inner, bytes32(uint256(uint160(key))));\n    }\n\n    /**\n     * @dev Returns the number of elements in the map. O(1).\n     */\n    function length(AddressToUintMap storage map) internal view returns (uint256) {\n        return length(map._inner);\n    }\n\n    /**\n     * @dev Returns the element stored at position `index` in the set. O(1).\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressToUintMap storage map, uint256 index) internal view returns (address, uint256) {\n        (bytes32 key, bytes32 value) = at(map._inner, index);\n        return (address(uint160(uint256(key))), uint256(value));\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`.  O(1).\n     * Does not revert if `key` is not in the map.\n     */\n    function tryGet(AddressToUintMap storage map, address key) internal view returns (bool, uint256) {\n        (bool success, bytes32 value) = tryGet(map._inner, bytes32(uint256(uint160(key))));\n        return (success, uint256(value));\n    }\n\n    /**\n     * @dev Returns the value associated with `key`.  O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function get(AddressToUintMap storage map, address key) internal view returns (uint256) {\n        return uint256(get(map._inner, bytes32(uint256(uint160(key)))));\n    }\n\n    /**\n     * @dev Same as {get}, with a custom error message when `key` is not in the map.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryGet}.\n     */\n    function get(\n        AddressToUintMap storage map,\n        address key,\n        string memory errorMessage\n    ) internal view returns (uint256) {\n        return uint256(get(map._inner, bytes32(uint256(uint160(key))), errorMessage));\n    }\n\n    // Bytes32ToUintMap\n\n    struct Bytes32ToUintMap {\n        Bytes32ToBytes32Map _inner;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(\n        Bytes32ToUintMap storage map,\n        bytes32 key,\n        uint256 value\n    ) internal returns (bool) {\n        return set(map._inner, key, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(Bytes32ToUintMap storage map, bytes32 key) internal returns (bool) {\n        return remove(map._inner, key);\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(Bytes32ToUintMap storage map, bytes32 key) internal view returns (bool) {\n        return contains(map._inner, key);\n    }\n\n    /**\n     * @dev Returns the number of elements in the map. O(1).\n     */\n    function length(Bytes32ToUintMap storage map) internal view returns (uint256) {\n        return length(map._inner);\n    }\n\n    /**\n     * @dev Returns the element stored at position `index` in the set. O(1).\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32ToUintMap storage map, uint256 index) internal view returns (bytes32, uint256) {\n        (bytes32 key, bytes32 value) = at(map._inner, index);\n        return (key, uint256(value));\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`.  O(1).\n     * Does not revert if `key` is not in the map.\n     */\n    function tryGet(Bytes32ToUintMap storage map, bytes32 key) internal view returns (bool, uint256) {\n        (bool success, bytes32 value) = tryGet(map._inner, key);\n        return (success, uint256(value));\n    }\n\n    /**\n     * @dev Returns the value associated with `key`.  O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function get(Bytes32ToUintMap storage map, bytes32 key) internal view returns (uint256) {\n        return uint256(get(map._inner, key));\n    }\n\n    /**\n     * @dev Same as {get}, with a custom error message when `key` is not in the map.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryGet}.\n     */\n    function get(\n        Bytes32ToUintMap storage map,\n        bytes32 key,\n        string memory errorMessage\n    ) internal view returns (uint256) {\n        return uint256(get(map._inner, key, errorMessage));\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/ERC20Capped.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20.sol\";\n\n/**\n * @dev Extension of {ERC20} that adds a cap to the supply of tokens.\n */\nabstract contract ERC20Capped is ERC20 {\n    uint256 private immutable _cap;\n\n    /**\n     * @dev Sets the value of the `cap`. This value is immutable, it can only be\n     * set once during construction.\n     */\n    constructor(uint256 cap_) {\n        require(cap_ > 0, \"ERC20Capped: cap is 0\");\n        _cap = cap_;\n    }\n\n    /**\n     * @dev Returns the cap on the token's total supply.\n     */\n    function cap() public view virtual returns (uint256) {\n        return _cap;\n    }\n\n    /**\n     * @dev See {ERC20-_mint}.\n     */\n    function _mint(address account, uint256 amount) internal virtual override {\n        require(ERC20.totalSupply() + amount <= cap(), \"ERC20Capped: cap exceeded\");\n        super._mint(account, amount);\n    }\n}\n"},"@openzeppelin/contracts/access/AccessControlEnumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (access/AccessControlEnumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControlEnumerable.sol\";\nimport \"./AccessControl.sol\";\nimport \"../utils/structs/EnumerableSet.sol\";\n\n/**\n * @dev Extension of {AccessControl} that allows enumerating the members of each role.\n */\nabstract contract AccessControlEnumerable is IAccessControlEnumerable, AccessControl {\n    using EnumerableSet for EnumerableSet.AddressSet;\n\n    mapping(bytes32 => EnumerableSet.AddressSet) private _roleMembers;\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControlEnumerable).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) public view virtual override returns (address) {\n        return _roleMembers[role].at(index);\n    }\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) public view virtual override returns (uint256) {\n        return _roleMembers[role].length();\n    }\n\n    /**\n     * @dev Overload {_grantRole} to track enumerable memberships\n     */\n    function _grantRole(bytes32 role, address account) internal virtual override {\n        super._grantRole(role, account);\n        _roleMembers[role].add(account);\n    }\n\n    /**\n     * @dev Overload {_revokeRole} to track enumerable memberships\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual override {\n        super._revokeRole(role, account);\n        _roleMembers[role].remove(account);\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControlEnumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControlEnumerable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\n\n/**\n * @dev External interface of AccessControlEnumerable declared to support ERC165 detection.\n */\ninterface IAccessControlEnumerable is IAccessControl {\n    /**\n     * @dev Returns one of the accounts that have `role`. `index` must be a\n     * value between 0 and {getRoleMemberCount}, non-inclusive.\n     *\n     * Role bearers are not sorted in any particular way, and their ordering may\n     * change at any point.\n     *\n     * WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n     * you perform all queries on the same block. See the following\n     * https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n     * for more information.\n     */\n    function getRoleMember(bytes32 role, uint256 index) external view returns (address);\n\n    /**\n     * @dev Returns the number of accounts that have `role`. Can be used\n     * together with {getRoleMember} to enumerate all bearers of a role.\n     */\n    function getRoleMemberCount(bytes32 role) external view returns (uint256);\n}\n"},"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(uint160(account), 20),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/structs/EnumerableSet.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n *  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\n *  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n *  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        return _values(set._inner);\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../ERC20.sol\";\nimport \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys `amount` tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 amount) public virtual {\n        _burn(_msgSender(), amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, deducting from the caller's\n     * allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `amount`.\n     */\n    function burnFrom(address account, uint256 amount) public virtual {\n        _spendAllowance(account, _msgSender(), amount);\n        _burn(account, amount);\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.3) (utils/cryptography/ECDSA.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../Strings.sol\";\n\n/**\n * @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n *\n * These functions can be used to verify that a message was signed by the holder\n * of the private keys of a given address.\n */\nlibrary ECDSA {\n    enum RecoverError {\n        NoError,\n        InvalidSignature,\n        InvalidSignatureLength,\n        InvalidSignatureS,\n        InvalidSignatureV\n    }\n\n    function _throwError(RecoverError error) private pure {\n        if (error == RecoverError.NoError) {\n            return; // no error: do nothing\n        } else if (error == RecoverError.InvalidSignature) {\n            revert(\"ECDSA: invalid signature\");\n        } else if (error == RecoverError.InvalidSignatureLength) {\n            revert(\"ECDSA: invalid signature length\");\n        } else if (error == RecoverError.InvalidSignatureS) {\n            revert(\"ECDSA: invalid signature 's' value\");\n        } else if (error == RecoverError.InvalidSignatureV) {\n            revert(\"ECDSA: invalid signature 'v' value\");\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature` or error string. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     *\n     * Documentation for signature generation:\n     * - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n     * - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(bytes32 hash, bytes memory signature) internal pure returns (address, RecoverError) {\n        if (signature.length == 65) {\n            bytes32 r;\n            bytes32 s;\n            uint8 v;\n            // ecrecover takes the signature parameters, and the only way to get them\n            // currently is to use assembly.\n            /// @solidity memory-safe-assembly\n            assembly {\n                r := mload(add(signature, 0x20))\n                s := mload(add(signature, 0x40))\n                v := byte(0, mload(add(signature, 0x60)))\n            }\n            return tryRecover(hash, v, r, s);\n        } else {\n            return (address(0), RecoverError.InvalidSignatureLength);\n        }\n    }\n\n    /**\n     * @dev Returns the address that signed a hashed message (`hash`) with\n     * `signature`. This address can then be used for verification purposes.\n     *\n     * The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n     * this function rejects them by requiring the `s` value to be in the lower\n     * half order, and the `v` value to be either 27 or 28.\n     *\n     * IMPORTANT: `hash` _must_ be the result of a hash operation for the\n     * verification to be secure: it is possible to craft signatures that\n     * recover to arbitrary addresses for non-hashed data. A safe way to ensure\n     * this is by receiving a hash of the original message (which may otherwise\n     * be too long), and then calling {toEthSignedMessageHash} on it.\n     */\n    function recover(bytes32 hash, bytes memory signature) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, signature);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n     *\n     * See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address, RecoverError) {\n        bytes32 s = vs & bytes32(0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);\n        uint8 v = uint8((uint256(vs) >> 255) + 27);\n        return tryRecover(hash, v, r, s);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n     *\n     * _Available since v4.2._\n     */\n    function recover(\n        bytes32 hash,\n        bytes32 r,\n        bytes32 vs\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, r, vs);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     *\n     * _Available since v4.3._\n     */\n    function tryRecover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address, RecoverError) {\n        // EIP-2 still allows signature malleability for ecrecover(). Remove this possibility and make the signature\n        // unique. Appendix F in the Ethereum Yellow paper (https://ethereum.github.io/yellowpaper/paper.pdf), defines\n        // the valid range for s in (301): 0 < s < secp256k1n ÷ 2 + 1, and for v in (302): v ∈ {27, 28}. Most\n        // signatures from current libraries generate a unique signature with an s-value in the lower half order.\n        //\n        // If your library generates malleable signatures, such as s-values in the upper range, calculate a new s-value\n        // with 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEBAAEDCE6AF48A03BBFD25E8CD0364141 - s1 and flip v from 27 to 28 or\n        // vice versa. If your library also generates signatures with 0/1 for v instead 27/28, add 27 to v to accept\n        // these malleable signatures as well.\n        if (uint256(s) > 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0) {\n            return (address(0), RecoverError.InvalidSignatureS);\n        }\n        if (v != 27 && v != 28) {\n            return (address(0), RecoverError.InvalidSignatureV);\n        }\n\n        // If the signature is valid (and not malleable), return the signer address\n        address signer = ecrecover(hash, v, r, s);\n        if (signer == address(0)) {\n            return (address(0), RecoverError.InvalidSignature);\n        }\n\n        return (signer, RecoverError.NoError);\n    }\n\n    /**\n     * @dev Overload of {ECDSA-recover} that receives the `v`,\n     * `r` and `s` signature fields separately.\n     */\n    function recover(\n        bytes32 hash,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) internal pure returns (address) {\n        (address recovered, RecoverError error) = tryRecover(hash, v, r, s);\n        _throwError(error);\n        return recovered;\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from a `hash`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes32 hash) internal pure returns (bytes32) {\n        // 32 is the length in bytes of hash,\n        // enforced by the type signature above\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n32\", hash));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Message, created from `s`. This\n     * produces hash corresponding to the one signed with the\n     * https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n     * JSON-RPC method as part of EIP-191.\n     *\n     * See {recover}.\n     */\n    function toEthSignedMessageHash(bytes memory s) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19Ethereum Signed Message:\\n\", Strings.toString(s.length), s));\n    }\n\n    /**\n     * @dev Returns an Ethereum Signed Typed Data, created from a\n     * `domainSeparator` and a `structHash`. This produces hash corresponding\n     * to the one signed with the\n     * https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n     * JSON-RPC method as part of EIP-712.\n     *\n     * See {recover}.\n     */\n    function toTypedDataHash(bytes32 domainSeparator, bytes32 structHash) internal pure returns (bytes32) {\n        return keccak256(abi.encodePacked(\"\\x19\\x01\", domainSeparator, structHash));\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/cryptography/draft-EIP712.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./ECDSA.sol\";\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n *\n * The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n * thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n * they need in their contracts using a combination of `abi.encode` and `keccak256`.\n *\n * This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n * scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n * ({_hashTypedDataV4}).\n *\n * The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n * the chain id to protect against replay attacks on an eventual fork of the chain.\n *\n * NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n * https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n *\n * _Available since v3.4._\n */\nabstract contract EIP712 {\n    /* solhint-disable var-name-mixedcase */\n    // Cache the domain separator as an immutable value, but also store the chain id that it corresponds to, in order to\n    // invalidate the cached domain separator if the chain id changes.\n    bytes32 private immutable _CACHED_DOMAIN_SEPARATOR;\n    uint256 private immutable _CACHED_CHAIN_ID;\n    address private immutable _CACHED_THIS;\n\n    bytes32 private immutable _HASHED_NAME;\n    bytes32 private immutable _HASHED_VERSION;\n    bytes32 private immutable _TYPE_HASH;\n\n    /* solhint-enable var-name-mixedcase */\n\n    /**\n     * @dev Initializes the domain separator and parameter caches.\n     *\n     * The meaning of `name` and `version` is specified in\n     * https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n     *\n     * - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n     * - `version`: the current major version of the signing domain.\n     *\n     * NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n     * contract upgrade].\n     */\n    constructor(string memory name, string memory version) {\n        bytes32 hashedName = keccak256(bytes(name));\n        bytes32 hashedVersion = keccak256(bytes(version));\n        bytes32 typeHash = keccak256(\n            \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"\n        );\n        _HASHED_NAME = hashedName;\n        _HASHED_VERSION = hashedVersion;\n        _CACHED_CHAIN_ID = block.chainid;\n        _CACHED_DOMAIN_SEPARATOR = _buildDomainSeparator(typeHash, hashedName, hashedVersion);\n        _CACHED_THIS = address(this);\n        _TYPE_HASH = typeHash;\n    }\n\n    /**\n     * @dev Returns the domain separator for the current chain.\n     */\n    function _domainSeparatorV4() internal view returns (bytes32) {\n        if (address(this) == _CACHED_THIS && block.chainid == _CACHED_CHAIN_ID) {\n            return _CACHED_DOMAIN_SEPARATOR;\n        } else {\n            return _buildDomainSeparator(_TYPE_HASH, _HASHED_NAME, _HASHED_VERSION);\n        }\n    }\n\n    function _buildDomainSeparator(\n        bytes32 typeHash,\n        bytes32 nameHash,\n        bytes32 versionHash\n    ) private view returns (bytes32) {\n        return keccak256(abi.encode(typeHash, nameHash, versionHash, block.chainid, address(this)));\n    }\n\n    /**\n     * @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n     * function returns the hash of the fully encoded EIP712 message for this domain.\n     *\n     * This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n     *\n     * ```solidity\n     * bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     *     keccak256(\"Mail(address to,string contents)\"),\n     *     mailTo,\n     *     keccak256(bytes(mailContents))\n     * )));\n     * address signer = ECDSA.recover(digest, signature);\n     * ```\n     */\n    function _hashTypedDataV4(bytes32 structHash) internal view virtual returns (bytes32) {\n        return ECDSA.toTypedDataHash(_domainSeparatorV4(), structHash);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/extensions/draft-ERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./draft-IERC20Permit.sol\";\nimport \"../ERC20.sol\";\nimport \"../../../utils/cryptography/draft-EIP712.sol\";\nimport \"../../../utils/cryptography/ECDSA.sol\";\nimport \"../../../utils/Counters.sol\";\n\n/**\n * @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * _Available since v3.4._\n */\nabstract contract ERC20Permit is ERC20, IERC20Permit, EIP712 {\n    using Counters for Counters.Counter;\n\n    mapping(address => Counters.Counter) private _nonces;\n\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private constant _PERMIT_TYPEHASH =\n        keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    /**\n     * @dev In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`.\n     * However, to ensure consistency with the upgradeable transpiler, we will continue\n     * to reserve a slot.\n     * @custom:oz-renamed-from _PERMIT_TYPEHASH\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 private _PERMIT_TYPEHASH_DEPRECATED_SLOT;\n\n    /**\n     * @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n     *\n     * It's a good idea to use the same `name` that is defined as the ERC20 token name.\n     */\n    constructor(string memory name) EIP712(name, \"1\") {}\n\n    /**\n     * @dev See {IERC20Permit-permit}.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public virtual override {\n        require(block.timestamp <= deadline, \"ERC20Permit: expired deadline\");\n\n        bytes32 structHash = keccak256(abi.encode(_PERMIT_TYPEHASH, owner, spender, value, _useNonce(owner), deadline));\n\n        bytes32 hash = _hashTypedDataV4(structHash);\n\n        address signer = ECDSA.recover(hash, v, r, s);\n        require(signer == owner, \"ERC20Permit: invalid signature\");\n\n        _approve(owner, spender, value);\n    }\n\n    /**\n     * @dev See {IERC20Permit-nonces}.\n     */\n    function nonces(address owner) public view virtual override returns (uint256) {\n        return _nonces[owner].current();\n    }\n\n    /**\n     * @dev See {IERC20Permit-DOMAIN_SEPARATOR}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view override returns (bytes32) {\n        return _domainSeparatorV4();\n    }\n\n    /**\n     * @dev \"Consume a nonce\": return the current value and increment.\n     *\n     * _Available since v4.1._\n     */\n    function _useNonce(address owner) internal virtual returns (uint256 current) {\n        Counters.Counter storage nonce = _nonces[owner];\n        current = nonce.current();\n        nonce.increment();\n    }\n}\n"},"@openzeppelin/contracts/utils/Counters.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Counters.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title Counters\n * @author Matt Condon (@shrugs)\n * @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\n *\n * Include with `using Counters for Counters.Counter;`\n */\nlibrary Counters {\n    struct Counter {\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\n        uint256 _value; // default: 0\n    }\n\n    function current(Counter storage counter) internal view returns (uint256) {\n        return counter._value;\n    }\n\n    function increment(Counter storage counter) internal {\n        unchecked {\n            counter._value += 1;\n        }\n    }\n\n    function decrement(Counter storage counter) internal {\n        uint256 value = counter._value;\n        require(value > 0, \"Counter: decrement overflow\");\n        unchecked {\n            counter._value = value - 1;\n        }\n    }\n\n    function reset(Counter storage counter) internal {\n        counter._value = 0;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"},"contracts/StakePool/LPToken.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract LPToken is ERC20, ERC20Burnable, Ownable {\n    constructor() ERC20(\"BNB_BLB_Token\", \"LP\") {\n        _mint(msg.sender, 100000 * 10 ** decimals());\n    }\n\n    function mint(address to, uint256 amount) public onlyOwner {\n        _mint(to, amount);\n    }\n}"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"contracts/BLBIO/ERC20Test.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\n\ncontract ERC20Test is ERC20, ERC20Burnable, Ownable {\n    constructor() ERC20(\"BUSDTest\", \"BUSD\") {\n        _mint(msg.sender, 100 * 10 ** decimals());\n    }\n\n    function mint(address to, uint256 amount) public onlyOwner {\n        _mint(to, amount);\n    }\n}"},"contracts/BEP20/BLBToken.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\";\nimport \"./TransferControl.sol\";\nimport \"./TransactionFee.sol\";\n\n/**\n * @title Boundless World (BLB) Token\n */\ncontract BLBToken is \n    ERC20, \n    ERC20Capped, \n    ERC20Burnable, \n    ERC20Permit, \n    TransactionFee,\n    TransferControl\n{\n\n    constructor(uint256 _monthlyTime, address initialAdmin) \n        TransferControl(_monthlyTime)\n        ERC20(\"Boundless World\", \"BLB\") \n        ERC20Capped((3.69 * 10 ** 9) * 10 ** decimals())\n        ERC20Permit(\"Boundless World\") \n    {\n        _grantRole(DEFAULT_ADMIN_ROLE, initialAdmin);\n        _grantRole(MINTER_ROLE, initialAdmin);\n        _grantRole(TRANSACTION_FEE_SETTER, initialAdmin);\n        _grantRole(TRANSFER_LIMIT_SETTER, initialAdmin);\n        _grantRole(RESTRICTOR_ROLE, initialAdmin);\n    }\n\n    function mintBatch(\n        address[] calldata accounts, \n        uint256 amount\n    ) public onlyRole(MINTER_ROLE) {\n        for(uint16 i; i < accounts.length; i++){\n            _mint(accounts[i], amount);\n        }\n    }\n\n    /**\n     * Creates amount tokens and assigns them to account, increasing the total supply.\n     * \n     * Emits a transfer event with from set to the zero address.\n     * \n     * Requirements:\n     * \n     * account cannot be the zero address.\n     * only role MINTER_ROLE can call this function.\n     */\n    function mint(address account, uint256 amount) public onlyRole(MINTER_ROLE) {\n        _mint(account, amount);\n    }\n\n\n    // The following functions are overrides required by Solidity.\n\n    function _mint(address to, uint256 amount)\n        internal\n        override(ERC20, ERC20Capped)\n    {\n        super._mint(to, amount);\n    }\n\n    function _beforeTokenTransfer(address from, address to, uint256 amount)\n        internal\n        override(ERC20, TransferControl, TransactionFee)\n    {\n        super._beforeTokenTransfer(from, to, amount);\n    }\n\n    function _pureTransfer(address from, address to, uint256 amount) \n        internal \n        virtual\n        override(ERC20, TransferControl) \n    {\n        super._pureTransfer(from, to, amount);\n    }\n}"},"contracts/BEP20/TransactionFee.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.4;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"./Administration.sol\";\n\n/**\n * @title deduct the transaction fee of every token transfer and send it to a third address.\n */\nabstract contract TransactionFee is ERC20, Administration {\n\n\n    uint256 feeFraction; // numerator of transaction fee which denominator is 1,000,000\n    uint256 feeAmount;   // independent transaction fee for every token transfer\n    address feeReceiver; // address of the fee receiver\n\n    /**\n     * @dev emits when the admin sets a new transaction fee plan.\n     */\n    event SetTransactionFee(\n        uint256 _feeAmount,\n        uint256 _feeFraction, \n        address _feeReceiver\n    );\n\n    /**\n     * @notice set amount or fraction and receiver of BLB transaction fees.\n     *\n     * @notice if transaction receiver is zero address, the transaction fee will be burned.\n     *\n     * @notice requirement:\n     *  - Only the owner of the contract can call this function.\n     *  - one of the feeAmount or feeFraction must be zero.\n     *  - fee fraction can be a maximum of 50,000 which equals 10% of the transactions\n     * \n     * @dev emits a SetTransactionFee event\n     */\n    function setTransactionFee(\n        uint256 _feeAmount,\n        uint256 _feeFraction, \n        address _feeReceiver\n    ) public onlyRole(TRANSACTION_FEE_SETTER) {\n        require(\n            _feeFraction == 0 || _feeAmount == 0,\n            \"TransactionFee: Cannot set feeAmount and feeFraction at the same time\"\n        );\n        require(\n            _feeFraction <= 10 ** 5, \n            \"TransactionFee: Up to 10% transactionFee can be set\"\n        );\n        feeAmount = _feeAmount;\n        feeFraction = _feeFraction;\n        feeReceiver = _feeReceiver;\n\n        emit SetTransactionFee(_feeAmount, _feeFraction, _feeReceiver);\n    }\n    \n    function feeDetails() public view returns(uint256, uint256, address) {\n        return (feeAmount, feeFraction, feeReceiver);\n    }\n\n    /**\n     * @return fee transaction fee corresponding to the transferring amount.\n     * @notice if there is a fee amount, the transaction fee is not proportional to the\n     *  transfering amount.\n     */\n    function transactionFee(uint256 transferingAmount) public view returns(uint256 fee) {\n        if(feeAmount > 0)\n            fee = feeAmount;\n        else if( feeFraction > 0)\n            fee = transferingAmount * feeFraction / 10 ** 6;\n    }\n\n    /**\n     * @notice deducts the transaction fee from the caller.\n     * @notice it will be not deducted if the caller has the minter role.\n     * @notice the transaction fee is sent to the fee receiver.\n     * @notice if the fee receiver is zero address, fee tokens are burned.\n     */\n    function _payTransactionFee(address caller, uint256 amount) internal {\n        if(!hasRole(MINTER_ROLE, caller)) {\n            if(feeFraction > 0 || feeAmount > 0) {\n                uint256 _transactionFee = transactionFee(amount);\n                _pureTransfer(caller, feeReceiver, _transactionFee);\n            }\n        }\n    }\n    \n    function _beforeTokenTransfer(address from, address to, uint256 amount)\n        internal\n        virtual\n        override\n    {\n        _payTransactionFee(_msgSender(), amount);\n\n        super._beforeTokenTransfer(from, to, amount);\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[319],"Context":[1754],"ERC165":[2620],"IAccessControl":[517],"IERC165":[2632],"Strings":[2054]},"id":320,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":320,"sourceUnit":518,"src":"133:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":320,"sourceUnit":1755,"src":"164:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../utils/Strings.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":320,"sourceUnit":2055,"src":"195:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":320,"sourceUnit":2621,"src":"226:43:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1754,"src":"1841:7:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"1841:7:0"},{"baseName":{"id":9,"name":"IAccessControl","nodeType":"IdentifierPath","referencedDeclaration":517,"src":"1850:14:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1850:14:0"},{"baseName":{"id":11,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":2620,"src":"1866:6:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1866:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"271:1534:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."},"fullyImplemented":true,"id":319,"linearizedBaseContracts":[319,2620,2632,517,1754],"name":"AccessControl","nameLocation":"1824:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":19,"members":[{"constant":false,"id":16,"mutability":"mutable","name":"members","nameLocation":"1930:7:0","nodeType":"VariableDeclaration","scope":19,"src":"1905:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":15,"keyType":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"1913:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1905:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":14,"name":"bool","nodeType":"ElementaryTypeName","src":"1924:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":18,"mutability":"mutable","name":"adminRole","nameLocation":"1955:9:0","nodeType":"VariableDeclaration","scope":19,"src":"1947:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1947:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"1886:8:0","nodeType":"StructDefinition","scope":319,"src":"1879:92:0","visibility":"public"},{"constant":false,"id":24,"mutability":"mutable","name":"_roles","nameLocation":"2014:6:0","nodeType":"VariableDeclaration","scope":319,"src":"1977:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":23,"keyType":{"id":20,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1985:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1977:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueType":{"id":22,"nodeType":"UserDefinedTypeName","pathNode":{"id":21,"name":"RoleData","nodeType":"IdentifierPath","referencedDeclaration":19,"src":"1996:8:0"},"referencedDeclaration":19,"src":"1996:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":27,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2051:18:0","nodeType":"VariableDeclaration","scope":319,"src":"2027:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":25,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2027:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":26,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2072:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":37,"nodeType":"Block","src":"2495:44:0","statements":[{"expression":{"arguments":[{"id":33,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2516:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":32,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,135],"referencedDeclaration":92,"src":"2505:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2505:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":35,"nodeType":"ExpressionStatement","src":"2505:16:0"},{"id":36,"nodeType":"PlaceholderStatement","src":"2531:1:0"}]},"documentation":{"id":28,"nodeType":"StructuredDocumentation","src":"2083:375:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"},"id":38,"name":"onlyRole","nameLocation":"2472:8:0","nodeType":"ModifierDefinition","parameters":{"id":31,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"mutability":"mutable","name":"role","nameLocation":"2489:4:0","nodeType":"VariableDeclaration","scope":38,"src":"2481:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":29,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2481:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2480:14:0"},"src":"2463:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[2619],"body":{"id":59,"nodeType":"Block","src":"2697:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":47,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2714:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":49,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"2734:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$517_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$517_$","typeString":"type(contract IAccessControl)"}],"id":48,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2729:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2729:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$517","typeString":"type(contract IAccessControl)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"2729:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2714:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":55,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2789:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":53,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2765:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$319_$","typeString":"type(contract super AccessControl)"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2619,"src":"2765:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2765:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2714:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":46,"id":58,"nodeType":"Return","src":"2707:94:0"}]},"documentation":{"id":39,"nodeType":"StructuredDocumentation","src":"2545:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":60,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2615:17:0","nodeType":"FunctionDefinition","overrides":{"id":43,"nodeType":"OverrideSpecifier","overrides":[],"src":"2673:8:0"},"parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41,"mutability":"mutable","name":"interfaceId","nameLocation":"2640:11:0","nodeType":"VariableDeclaration","scope":60,"src":"2633:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":40,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2633:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2632:20:0"},"returnParameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60,"src":"2691:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":44,"name":"bool","nodeType":"ElementaryTypeName","src":"2691:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2690:6:0"},"scope":319,"src":"2606:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[484],"body":{"id":78,"nodeType":"Block","src":"2987:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":71,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":73,"indexExpression":{"id":72,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"3011:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3004:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":74,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"3004:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":76,"indexExpression":{"id":75,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"3025:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3004:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":70,"id":77,"nodeType":"Return","src":"2997:36:0"}]},"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"2814:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":79,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2904:7:0","nodeType":"FunctionDefinition","overrides":{"id":67,"nodeType":"OverrideSpecifier","overrides":[],"src":"2963:8:0"},"parameters":{"id":66,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"role","nameLocation":"2920:4:0","nodeType":"VariableDeclaration","scope":79,"src":"2912:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2912:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"account","nameLocation":"2934:7:0","nodeType":"VariableDeclaration","scope":79,"src":"2926:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":64,"name":"address","nodeType":"ElementaryTypeName","src":"2926:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2911:31:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":79,"src":"2981:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":68,"name":"bool","nodeType":"ElementaryTypeName","src":"2981:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2980:6:0"},"scope":319,"src":"2895:145:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":91,"nodeType":"Block","src":"3390:47:0","statements":[{"expression":{"arguments":[{"id":86,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"3411:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":87,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"3417:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3417:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":85,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,135],"referencedDeclaration":135,"src":"3400:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3400:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":90,"nodeType":"ExpressionStatement","src":"3400:30:0"}]},"documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"3046:283:0","text":" @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"},"id":92,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3343:10:0","nodeType":"FunctionDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"role","nameLocation":"3362:4:0","nodeType":"VariableDeclaration","scope":92,"src":"3354:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":81,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3354:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3353:14:0"},"returnParameters":{"id":84,"nodeType":"ParameterList","parameters":[],"src":"3390:0:0"},"scope":319,"src":"3334:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":134,"nodeType":"Block","src":"3791:419:0","statements":[{"condition":{"id":104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3805:23:0","subExpression":{"arguments":[{"id":101,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"3814:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":102,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3820:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":100,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"3806:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3806:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":133,"nodeType":"IfStatement","src":"3801:403:0","trueBody":{"id":132,"nodeType":"Block","src":"3830:374:0","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3938:25:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},"value":"AccessControl: account "},{"arguments":[{"arguments":[{"id":115,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"4017:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4009:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":113,"name":"uint160","nodeType":"ElementaryTypeName","src":"4009:7:0","typeDescriptions":{}}},"id":116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4009:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"hexValue":"3230","id":117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4027:2:0","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"}],"expression":{"id":111,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"3989:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2054_$","typeString":"type(library Strings)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":2033,"src":"3989:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":118,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3989:41:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"206973206d697373696e6720726f6c6520","id":119,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4056:19:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},"value":" is missing role "},{"arguments":[{"arguments":[{"id":124,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"4129:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":123,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4121:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":122,"name":"uint256","nodeType":"ElementaryTypeName","src":"4121:7:0","typeDescriptions":{}}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4121:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3332","id":126,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4136:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"expression":{"id":120,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"4101:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2054_$","typeString":"type(library Strings)"}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":2033,"src":"4101:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":127,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4101:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":108,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3896:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"3896:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":128,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3896:265:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3868:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":106,"name":"string","nodeType":"ElementaryTypeName","src":"3868:6:0","typeDescriptions":{}}},"id":129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3868:311:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":105,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3844:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3844:349:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":131,"nodeType":"ExpressionStatement","src":"3844:349:0"}]}}]},"documentation":{"id":93,"nodeType":"StructuredDocumentation","src":"3443:270:0","text":" @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"},"id":135,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3727:10:0","nodeType":"FunctionDefinition","parameters":{"id":98,"nodeType":"ParameterList","parameters":[{"constant":false,"id":95,"mutability":"mutable","name":"role","nameLocation":"3746:4:0","nodeType":"VariableDeclaration","scope":135,"src":"3738:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":94,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3738:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"account","nameLocation":"3760:7:0","nodeType":"VariableDeclaration","scope":135,"src":"3752:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":96,"name":"address","nodeType":"ElementaryTypeName","src":"3752:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3737:31:0"},"returnParameters":{"id":99,"nodeType":"ParameterList","parameters":[],"src":"3791:0:0"},"scope":319,"src":"3718:492:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[492],"body":{"id":149,"nodeType":"Block","src":"4474:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":144,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"4491:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":146,"indexExpression":{"id":145,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":138,"src":"4498:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4491:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":147,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"4491:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":143,"id":148,"nodeType":"Return","src":"4484:29:0"}]},"documentation":{"id":136,"nodeType":"StructuredDocumentation","src":"4216:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":150,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4400:12:0","nodeType":"FunctionDefinition","overrides":{"id":140,"nodeType":"OverrideSpecifier","overrides":[],"src":"4447:8:0"},"parameters":{"id":139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"role","nameLocation":"4421:4:0","nodeType":"VariableDeclaration","scope":150,"src":"4413:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":137,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4413:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4412:14:0"},"returnParameters":{"id":143,"nodeType":"ParameterList","parameters":[{"constant":false,"id":142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":150,"src":"4465:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":141,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4465:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4464:9:0"},"scope":319,"src":"4391:129:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[500],"body":{"id":169,"nodeType":"Block","src":"4919:42:0","statements":[{"expression":{"arguments":[{"id":165,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4940:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":166,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":155,"src":"4946:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":164,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"4929:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4929:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":168,"nodeType":"ExpressionStatement","src":"4929:25:0"}]},"documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"4526:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":170,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":160,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":153,"src":"4912:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":159,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"4899:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4899:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":162,"kind":"modifierInvocation","modifierName":{"id":158,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"4890:8:0"},"nodeType":"ModifierInvocation","src":"4890:28:0"}],"name":"grantRole","nameLocation":"4825:9:0","nodeType":"FunctionDefinition","overrides":{"id":157,"nodeType":"OverrideSpecifier","overrides":[],"src":"4881:8:0"},"parameters":{"id":156,"nodeType":"ParameterList","parameters":[{"constant":false,"id":153,"mutability":"mutable","name":"role","nameLocation":"4843:4:0","nodeType":"VariableDeclaration","scope":170,"src":"4835:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":152,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4835:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":155,"mutability":"mutable","name":"account","nameLocation":"4857:7:0","nodeType":"VariableDeclaration","scope":170,"src":"4849:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":154,"name":"address","nodeType":"ElementaryTypeName","src":"4849:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4834:31:0"},"returnParameters":{"id":163,"nodeType":"ParameterList","parameters":[],"src":"4919:0:0"},"scope":319,"src":"4816:145:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[508],"body":{"id":189,"nodeType":"Block","src":"5345:43:0","statements":[{"expression":{"arguments":[{"id":185,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"5367:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":186,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":175,"src":"5373:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":184,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"5355:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5355:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":188,"nodeType":"ExpressionStatement","src":"5355:26:0"}]},"documentation":{"id":171,"nodeType":"StructuredDocumentation","src":"4967:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":190,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":180,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"5338:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":179,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"5325:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5325:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":182,"kind":"modifierInvocation","modifierName":{"id":178,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"5316:8:0"},"nodeType":"ModifierInvocation","src":"5316:28:0"}],"name":"revokeRole","nameLocation":"5250:10:0","nodeType":"FunctionDefinition","overrides":{"id":177,"nodeType":"OverrideSpecifier","overrides":[],"src":"5307:8:0"},"parameters":{"id":176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":173,"mutability":"mutable","name":"role","nameLocation":"5269:4:0","nodeType":"VariableDeclaration","scope":190,"src":"5261:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":172,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5261:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":175,"mutability":"mutable","name":"account","nameLocation":"5283:7:0","nodeType":"VariableDeclaration","scope":190,"src":"5275:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":174,"name":"address","nodeType":"ElementaryTypeName","src":"5275:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5260:31:0"},"returnParameters":{"id":183,"nodeType":"ParameterList","parameters":[],"src":"5345:0:0"},"scope":319,"src":"5241:147:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[516],"body":{"id":212,"nodeType":"Block","src":"6002:137:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":200,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"6020:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":201,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"6031:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6031:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6020:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66","id":204,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6045:49:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""},"value":"AccessControl: can only renounce roles for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""}],"id":199,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6012:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6012:83:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":206,"nodeType":"ExpressionStatement","src":"6012:83:0"},{"expression":{"arguments":[{"id":208,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":193,"src":"6118:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":209,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":195,"src":"6124:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":207,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"6106:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6106:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":211,"nodeType":"ExpressionStatement","src":"6106:26:0"}]},"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"5394:526:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":213,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5934:12:0","nodeType":"FunctionDefinition","overrides":{"id":197,"nodeType":"OverrideSpecifier","overrides":[],"src":"5993:8:0"},"parameters":{"id":196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"mutability":"mutable","name":"role","nameLocation":"5955:4:0","nodeType":"VariableDeclaration","scope":213,"src":"5947:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":192,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5947:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":195,"mutability":"mutable","name":"account","nameLocation":"5969:7:0","nodeType":"VariableDeclaration","scope":213,"src":"5961:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":194,"name":"address","nodeType":"ElementaryTypeName","src":"5961:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5946:31:0"},"returnParameters":{"id":198,"nodeType":"ParameterList","parameters":[],"src":"6002:0:0"},"scope":319,"src":"5925:214:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":226,"nodeType":"Block","src":"6892:42:0","statements":[{"expression":{"arguments":[{"id":222,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":216,"src":"6913:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":223,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":218,"src":"6919:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":221,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"6902:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":224,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6902:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":225,"nodeType":"ExpressionStatement","src":"6902:25:0"}]},"documentation":{"id":214,"nodeType":"StructuredDocumentation","src":"6145:674:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."},"id":227,"implemented":true,"kind":"function","modifiers":[],"name":"_setupRole","nameLocation":"6833:10:0","nodeType":"FunctionDefinition","parameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":216,"mutability":"mutable","name":"role","nameLocation":"6852:4:0","nodeType":"VariableDeclaration","scope":227,"src":"6844:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":215,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6844:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":218,"mutability":"mutable","name":"account","nameLocation":"6866:7:0","nodeType":"VariableDeclaration","scope":227,"src":"6858:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":217,"name":"address","nodeType":"ElementaryTypeName","src":"6858:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6843:31:0"},"returnParameters":{"id":220,"nodeType":"ParameterList","parameters":[],"src":"6892:0:0"},"scope":319,"src":"6824:110:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":254,"nodeType":"Block","src":"7132:174:0","statements":[{"assignments":[236],"declarations":[{"constant":false,"id":236,"mutability":"mutable","name":"previousAdminRole","nameLocation":"7150:17:0","nodeType":"VariableDeclaration","scope":254,"src":"7142:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":235,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7142:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":240,"initialValue":{"arguments":[{"id":238,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"7183:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":237,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":150,"src":"7170:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7170:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7142:46:0"},{"expression":{"id":246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":241,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7198:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":243,"indexExpression":{"id":242,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"7205:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7198:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":244,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"7198:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":245,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"7223:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7198:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":247,"nodeType":"ExpressionStatement","src":"7198:34:0"},{"eventCall":{"arguments":[{"id":249,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":230,"src":"7264:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":250,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":236,"src":"7270:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":251,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"7289:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":248,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"7247:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7247:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":253,"nodeType":"EmitStatement","src":"7242:57:0"}]},"documentation":{"id":228,"nodeType":"StructuredDocumentation","src":"6940:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":255,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"7068:13:0","nodeType":"FunctionDefinition","parameters":{"id":233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":230,"mutability":"mutable","name":"role","nameLocation":"7090:4:0","nodeType":"VariableDeclaration","scope":255,"src":"7082:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":229,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7082:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":232,"mutability":"mutable","name":"adminRole","nameLocation":"7104:9:0","nodeType":"VariableDeclaration","scope":255,"src":"7096:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7096:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7081:33:0"},"returnParameters":{"id":234,"nodeType":"ParameterList","parameters":[],"src":"7132:0:0"},"scope":319,"src":"7059:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":286,"nodeType":"Block","src":"7542:165:0","statements":[{"condition":{"id":267,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7556:23:0","subExpression":{"arguments":[{"id":264,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"7565:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":265,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"7571:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":263,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"7557:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7557:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":285,"nodeType":"IfStatement","src":"7552:149:0","trueBody":{"id":284,"nodeType":"Block","src":"7581:120:0","statements":[{"expression":{"id":275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":268,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7595:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":270,"indexExpression":{"id":269,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"7602:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7595:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":271,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"7595:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":273,"indexExpression":{"id":272,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"7616:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7595:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7627:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7595:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":276,"nodeType":"ExpressionStatement","src":"7595:36:0"},{"eventCall":{"arguments":[{"id":278,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":258,"src":"7662:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":279,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"7668:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":280,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"7677:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7677:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":277,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":465,"src":"7650:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7650:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":283,"nodeType":"EmitStatement","src":"7645:45:0"}]}}]},"documentation":{"id":256,"nodeType":"StructuredDocumentation","src":"7312:157:0","text":" @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":287,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7483:10:0","nodeType":"FunctionDefinition","parameters":{"id":261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":258,"mutability":"mutable","name":"role","nameLocation":"7502:4:0","nodeType":"VariableDeclaration","scope":287,"src":"7494:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":257,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7494:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":260,"mutability":"mutable","name":"account","nameLocation":"7516:7:0","nodeType":"VariableDeclaration","scope":287,"src":"7508:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":259,"name":"address","nodeType":"ElementaryTypeName","src":"7508:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7493:31:0"},"returnParameters":{"id":262,"nodeType":"ParameterList","parameters":[],"src":"7542:0:0"},"scope":319,"src":"7474:233:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":317,"nodeType":"Block","src":"7947:165:0","statements":[{"condition":{"arguments":[{"id":296,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"7969:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":297,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"7975:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":295,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"7961:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7961:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":316,"nodeType":"IfStatement","src":"7957:149:0","trueBody":{"id":315,"nodeType":"Block","src":"7985:121:0","statements":[{"expression":{"id":306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":299,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7999:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":301,"indexExpression":{"id":300,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"8006:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7999:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":302,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"7999:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":304,"indexExpression":{"id":303,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"8020:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7999:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8031:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"7999:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":307,"nodeType":"ExpressionStatement","src":"7999:37:0"},{"eventCall":{"arguments":[{"id":309,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"8067:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":310,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":292,"src":"8073:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":311,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"8082:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8082:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":308,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":474,"src":"8055:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8055:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":314,"nodeType":"EmitStatement","src":"8050:45:0"}]}}]},"documentation":{"id":288,"nodeType":"StructuredDocumentation","src":"7713:160:0","text":" @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":318,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"7887:11:0","nodeType":"FunctionDefinition","parameters":{"id":293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":290,"mutability":"mutable","name":"role","nameLocation":"7907:4:0","nodeType":"VariableDeclaration","scope":318,"src":"7899:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":289,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7899:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":292,"mutability":"mutable","name":"account","nameLocation":"7921:7:0","nodeType":"VariableDeclaration","scope":318,"src":"7913:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":291,"name":"address","nodeType":"ElementaryTypeName","src":"7913:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7898:31:0"},"returnParameters":{"id":294,"nodeType":"ParameterList","parameters":[],"src":"7947:0:0"},"scope":319,"src":"7878:234:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":320,"src":"1806:6308:0","usedErrors":[]}],"src":"108:8007:0"},"id":0},"@openzeppelin/contracts/access/AccessControlEnumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControlEnumerable.sol","exportedSymbols":{"AccessControl":[319],"AccessControlEnumerable":[444],"Context":[1754],"ERC165":[2620],"EnumerableSet":[4353],"IAccessControl":[517],"IAccessControlEnumerable":[542],"IERC165":[2632],"Strings":[2054]},"id":445,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":321,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:1"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControlEnumerable.sol","file":"./IAccessControlEnumerable.sol","id":322,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":445,"sourceUnit":543,"src":"143:40:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"./AccessControl.sol","id":323,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":445,"sourceUnit":320,"src":"184:29:1","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"../utils/structs/EnumerableSet.sol","id":324,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":445,"sourceUnit":4354,"src":"214:44:1","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":326,"name":"IAccessControlEnumerable","nodeType":"IdentifierPath","referencedDeclaration":542,"src":"400:24:1"},"id":327,"nodeType":"InheritanceSpecifier","src":"400:24:1"},{"baseName":{"id":328,"name":"AccessControl","nodeType":"IdentifierPath","referencedDeclaration":319,"src":"426:13:1"},"id":329,"nodeType":"InheritanceSpecifier","src":"426:13:1"}],"canonicalName":"AccessControlEnumerable","contractDependencies":[],"contractKind":"contract","documentation":{"id":325,"nodeType":"StructuredDocumentation","src":"260:94:1","text":" @dev Extension of {AccessControl} that allows enumerating the members of each role."},"fullyImplemented":true,"id":444,"linearizedBaseContracts":[444,319,2620,2632,542,517,1754],"name":"AccessControlEnumerable","nameLocation":"373:23:1","nodeType":"ContractDefinition","nodes":[{"global":false,"id":333,"libraryName":{"id":330,"name":"EnumerableSet","nodeType":"IdentifierPath","referencedDeclaration":4353,"src":"452:13:1"},"nodeType":"UsingForDirective","src":"446:49:1","typeName":{"id":332,"nodeType":"UserDefinedTypeName","pathNode":{"id":331,"name":"EnumerableSet.AddressSet","nodeType":"IdentifierPath","referencedDeclaration":4066,"src":"470:24:1"},"referencedDeclaration":4066,"src":"470:24:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4066_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},{"constant":false,"id":338,"mutability":"mutable","name":"_roleMembers","nameLocation":"554:12:1","nodeType":"VariableDeclaration","scope":444,"src":"501:65:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$4066_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"typeName":{"id":337,"keyType":{"id":334,"name":"bytes32","nodeType":"ElementaryTypeName","src":"509:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"501:44:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$4066_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet)"},"valueType":{"id":336,"nodeType":"UserDefinedTypeName","pathNode":{"id":335,"name":"EnumerableSet.AddressSet","nodeType":"IdentifierPath","referencedDeclaration":4066,"src":"520:24:1"},"referencedDeclaration":4066,"src":"520:24:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4066_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}}},"visibility":"private"},{"baseFunctions":[60],"body":{"id":359,"nodeType":"Block","src":"725:121:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":347,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"742:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":349,"name":"IAccessControlEnumerable","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"762:24:1","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerable_$542_$","typeString":"type(contract IAccessControlEnumerable)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControlEnumerable_$542_$","typeString":"type(contract IAccessControlEnumerable)"}],"id":348,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"757:4:1","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":350,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"757:30:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControlEnumerable_$542","typeString":"type(contract IAccessControlEnumerable)"}},"id":351,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"757:42:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"742:57:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":355,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"827:11:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":353,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"803:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$444_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":60,"src":"803:23:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"803:36:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"742:97:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":346,"id":358,"nodeType":"Return","src":"735:104:1"}]},"documentation":{"id":339,"nodeType":"StructuredDocumentation","src":"573:56:1","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":360,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"643:17:1","nodeType":"FunctionDefinition","overrides":{"id":343,"nodeType":"OverrideSpecifier","overrides":[],"src":"701:8:1"},"parameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":341,"mutability":"mutable","name":"interfaceId","nameLocation":"668:11:1","nodeType":"VariableDeclaration","scope":360,"src":"661:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":340,"name":"bytes4","nodeType":"ElementaryTypeName","src":"661:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"660:20:1"},"returnParameters":{"id":346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":360,"src":"719:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":344,"name":"bool","nodeType":"ElementaryTypeName","src":"719:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"718:6:1"},"scope":444,"src":"634:212:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[533],"body":{"id":378,"nodeType":"Block","src":"1530:52:1","statements":[{"expression":{"arguments":[{"id":375,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":365,"src":"1569:5:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":371,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"1547:12:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$4066_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":373,"indexExpression":{"id":372,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":363,"src":"1560:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1547:18:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4066_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":374,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"at","nodeType":"MemberAccess","referencedDeclaration":4189,"src":"1547:21:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$4066_storage_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_struct$_AddressSet_$4066_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"}},"id":376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1547:28:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":370,"id":377,"nodeType":"Return","src":"1540:35:1"}]},"documentation":{"id":361,"nodeType":"StructuredDocumentation","src":"852:574:1","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":379,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"1440:13:1","nodeType":"FunctionDefinition","overrides":{"id":367,"nodeType":"OverrideSpecifier","overrides":[],"src":"1503:8:1"},"parameters":{"id":366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":363,"mutability":"mutable","name":"role","nameLocation":"1462:4:1","nodeType":"VariableDeclaration","scope":379,"src":"1454:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":362,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1454:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":365,"mutability":"mutable","name":"index","nameLocation":"1476:5:1","nodeType":"VariableDeclaration","scope":379,"src":"1468:13:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":364,"name":"uint256","nodeType":"ElementaryTypeName","src":"1468:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1453:29:1"},"returnParameters":{"id":370,"nodeType":"ParameterList","parameters":[{"constant":false,"id":369,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":379,"src":"1521:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":368,"name":"address","nodeType":"ElementaryTypeName","src":"1521:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1520:9:1"},"scope":444,"src":"1431:151:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[541],"body":{"id":394,"nodeType":"Block","src":"1839:51:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":388,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"1856:12:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$4066_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":390,"indexExpression":{"id":389,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":382,"src":"1869:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1856:18:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4066_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":391,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":4162,"src":"1856:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressSet_$4066_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_AddressSet_$4066_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"}},"id":392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1856:27:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":387,"id":393,"nodeType":"Return","src":"1849:34:1"}]},"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"1588:157:1","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":395,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"1759:18:1","nodeType":"FunctionDefinition","overrides":{"id":384,"nodeType":"OverrideSpecifier","overrides":[],"src":"1812:8:1"},"parameters":{"id":383,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"mutability":"mutable","name":"role","nameLocation":"1786:4:1","nodeType":"VariableDeclaration","scope":395,"src":"1778:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":381,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1778:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1777:14:1"},"returnParameters":{"id":387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":386,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":395,"src":"1830:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":385,"name":"uint256","nodeType":"ElementaryTypeName","src":"1830:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1829:9:1"},"scope":444,"src":"1750:140:1","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[287],"body":{"id":418,"nodeType":"Block","src":"2055:89:1","statements":[{"expression":{"arguments":[{"id":407,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"2082:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":408,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"2088:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":404,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2065:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$444_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_grantRole","nodeType":"MemberAccess","referencedDeclaration":287,"src":"2065:16:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2065:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":410,"nodeType":"ExpressionStatement","src":"2065:31:1"},{"expression":{"arguments":[{"id":415,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"2129:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":411,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"2106:12:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$4066_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":413,"indexExpression":{"id":412,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"2119:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2106:18:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4066_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":414,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":4093,"src":"2106:22:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$4066_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$4066_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2106:31:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":417,"nodeType":"ExpressionStatement","src":"2106:31:1"}]},"documentation":{"id":396,"nodeType":"StructuredDocumentation","src":"1896:77:1","text":" @dev Overload {_grantRole} to track enumerable memberships"},"id":419,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"1987:10:1","nodeType":"FunctionDefinition","overrides":{"id":402,"nodeType":"OverrideSpecifier","overrides":[],"src":"2046:8:1"},"parameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":398,"mutability":"mutable","name":"role","nameLocation":"2006:4:1","nodeType":"VariableDeclaration","scope":419,"src":"1998:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":397,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1998:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":400,"mutability":"mutable","name":"account","nameLocation":"2020:7:1","nodeType":"VariableDeclaration","scope":419,"src":"2012:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":399,"name":"address","nodeType":"ElementaryTypeName","src":"2012:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1997:31:1"},"returnParameters":{"id":403,"nodeType":"ParameterList","parameters":[],"src":"2055:0:1"},"scope":444,"src":"1978:166:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[318],"body":{"id":442,"nodeType":"Block","src":"2311:93:1","statements":[{"expression":{"arguments":[{"id":431,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"2339:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":432,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"2345:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":428,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2321:5:1","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControlEnumerable_$444_$","typeString":"type(contract super AccessControlEnumerable)"}},"id":430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_revokeRole","nodeType":"MemberAccess","referencedDeclaration":318,"src":"2321:17:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2321:32:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":434,"nodeType":"ExpressionStatement","src":"2321:32:1"},{"expression":{"arguments":[{"id":439,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"2389:7:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"baseExpression":{"id":435,"name":"_roleMembers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"2363:12:1","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_AddressSet_$4066_storage_$","typeString":"mapping(bytes32 => struct EnumerableSet.AddressSet storage ref)"}},"id":437,"indexExpression":{"id":436,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"2376:4:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2363:18:1","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4066_storage","typeString":"struct EnumerableSet.AddressSet storage ref"}},"id":438,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":4120,"src":"2363:25:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressSet_$4066_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$4066_storage_ptr_$","typeString":"function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2363:34:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":441,"nodeType":"ExpressionStatement","src":"2363:34:1"}]},"documentation":{"id":420,"nodeType":"StructuredDocumentation","src":"2150:78:1","text":" @dev Overload {_revokeRole} to track enumerable memberships"},"id":443,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"2242:11:1","nodeType":"FunctionDefinition","overrides":{"id":426,"nodeType":"OverrideSpecifier","overrides":[],"src":"2302:8:1"},"parameters":{"id":425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":422,"mutability":"mutable","name":"role","nameLocation":"2262:4:1","nodeType":"VariableDeclaration","scope":443,"src":"2254:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":421,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2254:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":424,"mutability":"mutable","name":"account","nameLocation":"2276:7:1","nodeType":"VariableDeclaration","scope":443,"src":"2268:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":423,"name":"address","nodeType":"ElementaryTypeName","src":"2268:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2253:31:1"},"returnParameters":{"id":427,"nodeType":"ParameterList","parameters":[],"src":"2311:0:1"},"scope":444,"src":"2233:171:1","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":445,"src":"355:2051:1","usedErrors":[]}],"src":"118:2289:1"},"id":1},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[517]},"id":518,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":446,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"94:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":447,"nodeType":"StructuredDocumentation","src":"119:89:2","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":517,"linearizedBaseContracts":[517],"name":"IAccessControl","nameLocation":"219:14:2","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":448,"nodeType":"StructuredDocumentation","src":"240:292:2","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"},"eventSelector":"bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff","id":456,"name":"RoleAdminChanged","nameLocation":"543:16:2","nodeType":"EventDefinition","parameters":{"id":455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":450,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"576:4:2","nodeType":"VariableDeclaration","scope":456,"src":"560:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":449,"name":"bytes32","nodeType":"ElementaryTypeName","src":"560:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":452,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"598:17:2","nodeType":"VariableDeclaration","scope":456,"src":"582:33:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":451,"name":"bytes32","nodeType":"ElementaryTypeName","src":"582:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":454,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"633:12:2","nodeType":"VariableDeclaration","scope":456,"src":"617:28:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":453,"name":"bytes32","nodeType":"ElementaryTypeName","src":"617:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"559:87:2"},"src":"537:110:2"},{"anonymous":false,"documentation":{"id":457,"nodeType":"StructuredDocumentation","src":"653:212:2","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"eventSelector":"2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d","id":465,"name":"RoleGranted","nameLocation":"876:11:2","nodeType":"EventDefinition","parameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":459,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"904:4:2","nodeType":"VariableDeclaration","scope":465,"src":"888:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":458,"name":"bytes32","nodeType":"ElementaryTypeName","src":"888:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":461,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"926:7:2","nodeType":"VariableDeclaration","scope":465,"src":"910:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":460,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":463,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"951:6:2","nodeType":"VariableDeclaration","scope":465,"src":"935:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":462,"name":"address","nodeType":"ElementaryTypeName","src":"935:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"887:71:2"},"src":"870:89:2"},{"anonymous":false,"documentation":{"id":466,"nodeType":"StructuredDocumentation","src":"965:275:2","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"eventSelector":"f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b","id":474,"name":"RoleRevoked","nameLocation":"1251:11:2","nodeType":"EventDefinition","parameters":{"id":473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":468,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1279:4:2","nodeType":"VariableDeclaration","scope":474,"src":"1263:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":467,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1263:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":470,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1301:7:2","nodeType":"VariableDeclaration","scope":474,"src":"1285:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":469,"name":"address","nodeType":"ElementaryTypeName","src":"1285:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":472,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1326:6:2","nodeType":"VariableDeclaration","scope":474,"src":"1310:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":471,"name":"address","nodeType":"ElementaryTypeName","src":"1310:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1262:71:2"},"src":"1245:89:2"},{"documentation":{"id":475,"nodeType":"StructuredDocumentation","src":"1340:76:2","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":484,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1430:7:2","nodeType":"FunctionDefinition","parameters":{"id":480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":477,"mutability":"mutable","name":"role","nameLocation":"1446:4:2","nodeType":"VariableDeclaration","scope":484,"src":"1438:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":476,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1438:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":479,"mutability":"mutable","name":"account","nameLocation":"1460:7:2","nodeType":"VariableDeclaration","scope":484,"src":"1452:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":478,"name":"address","nodeType":"ElementaryTypeName","src":"1452:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1437:31:2"},"returnParameters":{"id":483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":482,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":484,"src":"1492:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":481,"name":"bool","nodeType":"ElementaryTypeName","src":"1492:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1491:6:2"},"scope":517,"src":"1421:77:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":485,"nodeType":"StructuredDocumentation","src":"1504:184:2","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":492,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"1702:12:2","nodeType":"FunctionDefinition","parameters":{"id":488,"nodeType":"ParameterList","parameters":[{"constant":false,"id":487,"mutability":"mutable","name":"role","nameLocation":"1723:4:2","nodeType":"VariableDeclaration","scope":492,"src":"1715:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":486,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1715:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1714:14:2"},"returnParameters":{"id":491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":490,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":492,"src":"1752:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":489,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1752:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1751:9:2"},"scope":517,"src":"1693:68:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":493,"nodeType":"StructuredDocumentation","src":"1767:239:2","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":500,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2020:9:2","nodeType":"FunctionDefinition","parameters":{"id":498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":495,"mutability":"mutable","name":"role","nameLocation":"2038:4:2","nodeType":"VariableDeclaration","scope":500,"src":"2030:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":494,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2030:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":497,"mutability":"mutable","name":"account","nameLocation":"2052:7:2","nodeType":"VariableDeclaration","scope":500,"src":"2044:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":496,"name":"address","nodeType":"ElementaryTypeName","src":"2044:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2029:31:2"},"returnParameters":{"id":499,"nodeType":"ParameterList","parameters":[],"src":"2069:0:2"},"scope":517,"src":"2011:59:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":501,"nodeType":"StructuredDocumentation","src":"2076:223:2","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":508,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2313:10:2","nodeType":"FunctionDefinition","parameters":{"id":506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":503,"mutability":"mutable","name":"role","nameLocation":"2332:4:2","nodeType":"VariableDeclaration","scope":508,"src":"2324:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":502,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":505,"mutability":"mutable","name":"account","nameLocation":"2346:7:2","nodeType":"VariableDeclaration","scope":508,"src":"2338:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":504,"name":"address","nodeType":"ElementaryTypeName","src":"2338:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2323:31:2"},"returnParameters":{"id":507,"nodeType":"ParameterList","parameters":[],"src":"2363:0:2"},"scope":517,"src":"2304:60:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":509,"nodeType":"StructuredDocumentation","src":"2370:480:2","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."},"functionSelector":"36568abe","id":516,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"2864:12:2","nodeType":"FunctionDefinition","parameters":{"id":514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":511,"mutability":"mutable","name":"role","nameLocation":"2885:4:2","nodeType":"VariableDeclaration","scope":516,"src":"2877:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":510,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2877:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":513,"mutability":"mutable","name":"account","nameLocation":"2899:7:2","nodeType":"VariableDeclaration","scope":516,"src":"2891:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":512,"name":"address","nodeType":"ElementaryTypeName","src":"2891:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2876:31:2"},"returnParameters":{"id":515,"nodeType":"ParameterList","parameters":[],"src":"2916:0:2"},"scope":517,"src":"2855:62:2","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":518,"src":"209:2710:2","usedErrors":[]}],"src":"94:2826:2"},"id":2},"@openzeppelin/contracts/access/IAccessControlEnumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControlEnumerable.sol","exportedSymbols":{"IAccessControl":[517],"IAccessControlEnumerable":[542]},"id":543,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":519,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"104:23:3"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":520,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":543,"sourceUnit":518,"src":"129:30:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":522,"name":"IAccessControl","nodeType":"IdentifierPath","referencedDeclaration":517,"src":"299:14:3"},"id":523,"nodeType":"InheritanceSpecifier","src":"299:14:3"}],"canonicalName":"IAccessControlEnumerable","contractDependencies":[],"contractKind":"interface","documentation":{"id":521,"nodeType":"StructuredDocumentation","src":"161:99:3","text":" @dev External interface of AccessControlEnumerable declared to support ERC165 detection."},"fullyImplemented":false,"id":542,"linearizedBaseContracts":[542,517],"name":"IAccessControlEnumerable","nameLocation":"271:24:3","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":524,"nodeType":"StructuredDocumentation","src":"320:574:3","text":" @dev Returns one of the accounts that have `role`. `index` must be a\n value between 0 and {getRoleMemberCount}, non-inclusive.\n Role bearers are not sorted in any particular way, and their ordering may\n change at any point.\n WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure\n you perform all queries on the same block. See the following\n https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post]\n for more information."},"functionSelector":"9010d07c","id":533,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMember","nameLocation":"908:13:3","nodeType":"FunctionDefinition","parameters":{"id":529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":526,"mutability":"mutable","name":"role","nameLocation":"930:4:3","nodeType":"VariableDeclaration","scope":533,"src":"922:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":525,"name":"bytes32","nodeType":"ElementaryTypeName","src":"922:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":528,"mutability":"mutable","name":"index","nameLocation":"944:5:3","nodeType":"VariableDeclaration","scope":533,"src":"936:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":527,"name":"uint256","nodeType":"ElementaryTypeName","src":"936:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"921:29:3"},"returnParameters":{"id":532,"nodeType":"ParameterList","parameters":[{"constant":false,"id":531,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":533,"src":"974:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":530,"name":"address","nodeType":"ElementaryTypeName","src":"974:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"973:9:3"},"scope":542,"src":"899:84:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":534,"nodeType":"StructuredDocumentation","src":"989:157:3","text":" @dev Returns the number of accounts that have `role`. Can be used\n together with {getRoleMember} to enumerate all bearers of a role."},"functionSelector":"ca15c873","id":541,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleMemberCount","nameLocation":"1160:18:3","nodeType":"FunctionDefinition","parameters":{"id":537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":536,"mutability":"mutable","name":"role","nameLocation":"1187:4:3","nodeType":"VariableDeclaration","scope":541,"src":"1179:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":535,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1179:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1178:14:3"},"returnParameters":{"id":540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":541,"src":"1216:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":538,"name":"uint256","nodeType":"ElementaryTypeName","src":"1216:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1215:9:3"},"scope":542,"src":"1151:74:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":543,"src":"261:966:3","usedErrors":[]}],"src":"104:1124:3"},"id":3},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1754],"Ownable":[655]},"id":656,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":544,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:4"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":545,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":656,"sourceUnit":1755,"src":"127:30:4","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":547,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1754,"src":"683:7:4"},"id":548,"nodeType":"InheritanceSpecifier","src":"683:7:4"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":546,"nodeType":"StructuredDocumentation","src":"159:494:4","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":655,"linearizedBaseContracts":[655,1754],"name":"Ownable","nameLocation":"672:7:4","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":550,"mutability":"mutable","name":"_owner","nameLocation":"713:6:4","nodeType":"VariableDeclaration","scope":655,"src":"697:22:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":549,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":556,"name":"OwnershipTransferred","nameLocation":"732:20:4","nodeType":"EventDefinition","parameters":{"id":555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":552,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:4","nodeType":"VariableDeclaration","scope":556,"src":"753:29:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":551,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":554,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:4","nodeType":"VariableDeclaration","scope":556,"src":"784:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":553,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:4"},"src":"726:84:4"},{"body":{"id":565,"nodeType":"Block","src":"926:49:4","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":561,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"955:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":560,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"936:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":564,"nodeType":"ExpressionStatement","src":"936:32:4"}]},"documentation":{"id":557,"nodeType":"StructuredDocumentation","src":"816:91:4","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":566,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":558,"nodeType":"ParameterList","parameters":[],"src":"923:2:4"},"returnParameters":{"id":559,"nodeType":"ParameterList","parameters":[],"src":"926:0:4"},"scope":655,"src":"912:63:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":573,"nodeType":"Block","src":"1084:41:4","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":569,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"1094:11:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":571,"nodeType":"ExpressionStatement","src":"1094:13:4"},{"id":572,"nodeType":"PlaceholderStatement","src":"1117:1:4"}]},"documentation":{"id":567,"nodeType":"StructuredDocumentation","src":"981:77:4","text":" @dev Throws if called by any account other than the owner."},"id":574,"name":"onlyOwner","nameLocation":"1072:9:4","nodeType":"ModifierDefinition","parameters":{"id":568,"nodeType":"ParameterList","parameters":[],"src":"1081:2:4"},"src":"1063:62:4","virtual":false,"visibility":"internal"},{"body":{"id":582,"nodeType":"Block","src":"1256:30:4","statements":[{"expression":{"id":580,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"1273:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":579,"id":581,"nodeType":"Return","src":"1266:13:4"}]},"documentation":{"id":575,"nodeType":"StructuredDocumentation","src":"1131:65:4","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":583,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:4","nodeType":"FunctionDefinition","parameters":{"id":576,"nodeType":"ParameterList","parameters":[],"src":"1215:2:4"},"returnParameters":{"id":579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":583,"src":"1247:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":577,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:4"},"scope":655,"src":"1201:85:4","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":596,"nodeType":"Block","src":"1404:85:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":588,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"1422:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":590,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"1433:10:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":587,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":595,"nodeType":"ExpressionStatement","src":"1414:68:4"}]},"documentation":{"id":584,"nodeType":"StructuredDocumentation","src":"1292:62:4","text":" @dev Throws if the sender is not the owner."},"id":597,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:4","nodeType":"FunctionDefinition","parameters":{"id":585,"nodeType":"ParameterList","parameters":[],"src":"1379:2:4"},"returnParameters":{"id":586,"nodeType":"ParameterList","parameters":[],"src":"1404:0:4"},"scope":655,"src":"1359:130:4","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":610,"nodeType":"Block","src":"1885:47:4","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":605,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":604,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:4","typeDescriptions":{}}},"id":607,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1914:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":603,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"1895:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":608,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1895:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":609,"nodeType":"ExpressionStatement","src":"1895:30:4"}]},"documentation":{"id":598,"nodeType":"StructuredDocumentation","src":"1495:331:4","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":611,"implemented":true,"kind":"function","modifiers":[{"id":601,"kind":"modifierInvocation","modifierName":{"id":600,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":574,"src":"1875:9:4"},"nodeType":"ModifierInvocation","src":"1875:9:4"}],"name":"renounceOwnership","nameLocation":"1840:17:4","nodeType":"FunctionDefinition","parameters":{"id":599,"nodeType":"ParameterList","parameters":[],"src":"1857:2:4"},"returnParameters":{"id":602,"nodeType":"ParameterList","parameters":[],"src":"1885:0:4"},"scope":655,"src":"1831:101:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":633,"nodeType":"Block","src":"2151:128:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":620,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"2169:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":623,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":622,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":621,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:4","typeDescriptions":{}}},"id":624,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2181:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":626,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":619,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":627,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2161:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":628,"nodeType":"ExpressionStatement","src":"2161:73:4"},{"expression":{"arguments":[{"id":630,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":614,"src":"2263:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":629,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":654,"src":"2244:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2244:28:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":632,"nodeType":"ExpressionStatement","src":"2244:28:4"}]},"documentation":{"id":612,"nodeType":"StructuredDocumentation","src":"1938:138:4","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":634,"implemented":true,"kind":"function","modifiers":[{"id":617,"kind":"modifierInvocation","modifierName":{"id":616,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":574,"src":"2141:9:4"},"nodeType":"ModifierInvocation","src":"2141:9:4"}],"name":"transferOwnership","nameLocation":"2090:17:4","nodeType":"FunctionDefinition","parameters":{"id":615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":614,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:4","nodeType":"VariableDeclaration","scope":634,"src":"2108:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":613,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:4"},"returnParameters":{"id":618,"nodeType":"ParameterList","parameters":[],"src":"2151:0:4"},"scope":655,"src":"2081:198:4","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":653,"nodeType":"Block","src":"2496:124:4","statements":[{"assignments":[641],"declarations":[{"constant":false,"id":641,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:4","nodeType":"VariableDeclaration","scope":653,"src":"2506:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":640,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":643,"initialValue":{"id":642,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"2525:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:4"},{"expression":{"id":646,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":644,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"2541:6:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":645,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"2550:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":647,"nodeType":"ExpressionStatement","src":"2541:17:4"},{"eventCall":{"arguments":[{"id":649,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":641,"src":"2594:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":650,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":637,"src":"2604:8:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":648,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":556,"src":"2573:20:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:40:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":652,"nodeType":"EmitStatement","src":"2568:45:4"}]},"documentation":{"id":635,"nodeType":"StructuredDocumentation","src":"2285:143:4","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":654,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:4","nodeType":"FunctionDefinition","parameters":{"id":638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":637,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:4","nodeType":"VariableDeclaration","scope":654,"src":"2461:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":636,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:4"},"returnParameters":{"id":639,"nodeType":"ParameterList","parameters":[],"src":"2496:0:4"},"scope":655,"src":"2433:187:4","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":656,"src":"654:1968:4","usedErrors":[]}],"src":"102:2521:4"},"id":4},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1754],"ERC20":[1312],"IERC20":[1390],"IERC20Metadata":[1524]},"id":1313,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":657,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":658,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1313,"sourceUnit":1391,"src":"130:22:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":659,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1313,"sourceUnit":1525,"src":"153:41:5","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":660,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1313,"sourceUnit":1755,"src":"195:33:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":662,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1754,"src":"1421:7:5"},"id":663,"nodeType":"InheritanceSpecifier","src":"1421:7:5"},{"baseName":{"id":664,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1390,"src":"1430:6:5"},"id":665,"nodeType":"InheritanceSpecifier","src":"1430:6:5"},{"baseName":{"id":666,"name":"IERC20Metadata","nodeType":"IdentifierPath","referencedDeclaration":1524,"src":"1438:14:5"},"id":667,"nodeType":"InheritanceSpecifier","src":"1438:14:5"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":661,"nodeType":"StructuredDocumentation","src":"230:1172:5","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":1312,"linearizedBaseContracts":[1312,1524,1390,1754],"name":"ERC20","nameLocation":"1412:5:5","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":671,"mutability":"mutable","name":"_balances","nameLocation":"1495:9:5","nodeType":"VariableDeclaration","scope":1312,"src":"1459:45:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":670,"keyType":{"id":668,"name":"address","nodeType":"ElementaryTypeName","src":"1467:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1459:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":669,"name":"uint256","nodeType":"ElementaryTypeName","src":"1478:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":677,"mutability":"mutable","name":"_allowances","nameLocation":"1567:11:5","nodeType":"VariableDeclaration","scope":1312,"src":"1511:67:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":676,"keyType":{"id":672,"name":"address","nodeType":"ElementaryTypeName","src":"1519:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1511:47:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":675,"keyType":{"id":673,"name":"address","nodeType":"ElementaryTypeName","src":"1538:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1530:27:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":674,"name":"uint256","nodeType":"ElementaryTypeName","src":"1549:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":679,"mutability":"mutable","name":"_totalSupply","nameLocation":"1601:12:5","nodeType":"VariableDeclaration","scope":1312,"src":"1585:28:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":678,"name":"uint256","nodeType":"ElementaryTypeName","src":"1585:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":681,"mutability":"mutable","name":"_name","nameLocation":"1635:5:5","nodeType":"VariableDeclaration","scope":1312,"src":"1620:20:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":680,"name":"string","nodeType":"ElementaryTypeName","src":"1620:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":683,"mutability":"mutable","name":"_symbol","nameLocation":"1661:7:5","nodeType":"VariableDeclaration","scope":1312,"src":"1646:22:5","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":682,"name":"string","nodeType":"ElementaryTypeName","src":"1646:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":699,"nodeType":"Block","src":"2034:57:5","statements":[{"expression":{"id":693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":691,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"2044:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":692,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":686,"src":"2052:5:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2044:13:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":694,"nodeType":"ExpressionStatement","src":"2044:13:5"},{"expression":{"id":697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":695,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"2067:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":696,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"2077:7:5","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2067:17:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":698,"nodeType":"ExpressionStatement","src":"2067:17:5"}]},"documentation":{"id":684,"nodeType":"StructuredDocumentation","src":"1675:298:5","text":" @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."},"id":700,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":686,"mutability":"mutable","name":"name_","nameLocation":"2004:5:5","nodeType":"VariableDeclaration","scope":700,"src":"1990:19:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":685,"name":"string","nodeType":"ElementaryTypeName","src":"1990:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":688,"mutability":"mutable","name":"symbol_","nameLocation":"2025:7:5","nodeType":"VariableDeclaration","scope":700,"src":"2011:21:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":687,"name":"string","nodeType":"ElementaryTypeName","src":"2011:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1989:44:5"},"returnParameters":{"id":690,"nodeType":"ParameterList","parameters":[],"src":"2034:0:5"},"scope":1312,"src":"1978:113:5","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1511],"body":{"id":709,"nodeType":"Block","src":"2225:29:5","statements":[{"expression":{"id":707,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":681,"src":"2242:5:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":706,"id":708,"nodeType":"Return","src":"2235:12:5"}]},"documentation":{"id":701,"nodeType":"StructuredDocumentation","src":"2097:54:5","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":710,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2165:4:5","nodeType":"FunctionDefinition","overrides":{"id":703,"nodeType":"OverrideSpecifier","overrides":[],"src":"2192:8:5"},"parameters":{"id":702,"nodeType":"ParameterList","parameters":[],"src":"2169:2:5"},"returnParameters":{"id":706,"nodeType":"ParameterList","parameters":[{"constant":false,"id":705,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":710,"src":"2210:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":704,"name":"string","nodeType":"ElementaryTypeName","src":"2210:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2209:15:5"},"scope":1312,"src":"2156:98:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1517],"body":{"id":719,"nodeType":"Block","src":"2438:31:5","statements":[{"expression":{"id":717,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":683,"src":"2455:7:5","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":716,"id":718,"nodeType":"Return","src":"2448:14:5"}]},"documentation":{"id":711,"nodeType":"StructuredDocumentation","src":"2260:102:5","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":720,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2376:6:5","nodeType":"FunctionDefinition","overrides":{"id":713,"nodeType":"OverrideSpecifier","overrides":[],"src":"2405:8:5"},"parameters":{"id":712,"nodeType":"ParameterList","parameters":[],"src":"2382:2:5"},"returnParameters":{"id":716,"nodeType":"ParameterList","parameters":[{"constant":false,"id":715,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":720,"src":"2423:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":714,"name":"string","nodeType":"ElementaryTypeName","src":"2423:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2422:15:5"},"scope":1312,"src":"2367:102:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1523],"body":{"id":729,"nodeType":"Block","src":"3158:26:5","statements":[{"expression":{"hexValue":"3138","id":727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3175:2:5","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":726,"id":728,"nodeType":"Return","src":"3168:9:5"}]},"documentation":{"id":721,"nodeType":"StructuredDocumentation","src":"2475:613:5","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":730,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3102:8:5","nodeType":"FunctionDefinition","overrides":{"id":723,"nodeType":"OverrideSpecifier","overrides":[],"src":"3133:8:5"},"parameters":{"id":722,"nodeType":"ParameterList","parameters":[],"src":"3110:2:5"},"returnParameters":{"id":726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":730,"src":"3151:5:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":724,"name":"uint8","nodeType":"ElementaryTypeName","src":"3151:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3150:7:5"},"scope":1312,"src":"3093:91:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1339],"body":{"id":739,"nodeType":"Block","src":"3314:36:5","statements":[{"expression":{"id":737,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"3331:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":736,"id":738,"nodeType":"Return","src":"3324:19:5"}]},"documentation":{"id":731,"nodeType":"StructuredDocumentation","src":"3190:49:5","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":740,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3253:11:5","nodeType":"FunctionDefinition","overrides":{"id":733,"nodeType":"OverrideSpecifier","overrides":[],"src":"3287:8:5"},"parameters":{"id":732,"nodeType":"ParameterList","parameters":[],"src":"3264:2:5"},"returnParameters":{"id":736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":735,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":740,"src":"3305:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":734,"name":"uint256","nodeType":"ElementaryTypeName","src":"3305:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3304:9:5"},"scope":1312,"src":"3244:106:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1347],"body":{"id":753,"nodeType":"Block","src":"3491:42:5","statements":[{"expression":{"baseExpression":{"id":749,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"3508:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":751,"indexExpression":{"id":750,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":743,"src":"3518:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3508:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":748,"id":752,"nodeType":"Return","src":"3501:25:5"}]},"documentation":{"id":741,"nodeType":"StructuredDocumentation","src":"3356:47:5","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":754,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3417:9:5","nodeType":"FunctionDefinition","overrides":{"id":745,"nodeType":"OverrideSpecifier","overrides":[],"src":"3464:8:5"},"parameters":{"id":744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":743,"mutability":"mutable","name":"account","nameLocation":"3435:7:5","nodeType":"VariableDeclaration","scope":754,"src":"3427:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":742,"name":"address","nodeType":"ElementaryTypeName","src":"3427:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3426:17:5"},"returnParameters":{"id":748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":754,"src":"3482:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":746,"name":"uint256","nodeType":"ElementaryTypeName","src":"3482:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3481:9:5"},"scope":1312,"src":"3408:125:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1357],"body":{"id":778,"nodeType":"Block","src":"3814:104:5","statements":[{"assignments":[766],"declarations":[{"constant":false,"id":766,"mutability":"mutable","name":"owner","nameLocation":"3832:5:5","nodeType":"VariableDeclaration","scope":778,"src":"3824:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":765,"name":"address","nodeType":"ElementaryTypeName","src":"3824:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":769,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":767,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"3840:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":768,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3840:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3824:28:5"},{"expression":{"arguments":[{"id":771,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"3872:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":772,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":757,"src":"3879:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":773,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":759,"src":"3883:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":770,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"3862:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":774,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3862:28:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":775,"nodeType":"ExpressionStatement","src":"3862:28:5"},{"expression":{"hexValue":"74727565","id":776,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3907:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":764,"id":777,"nodeType":"Return","src":"3900:11:5"}]},"documentation":{"id":755,"nodeType":"StructuredDocumentation","src":"3539:185:5","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":779,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3738:8:5","nodeType":"FunctionDefinition","overrides":{"id":761,"nodeType":"OverrideSpecifier","overrides":[],"src":"3790:8:5"},"parameters":{"id":760,"nodeType":"ParameterList","parameters":[{"constant":false,"id":757,"mutability":"mutable","name":"to","nameLocation":"3755:2:5","nodeType":"VariableDeclaration","scope":779,"src":"3747:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":756,"name":"address","nodeType":"ElementaryTypeName","src":"3747:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":759,"mutability":"mutable","name":"amount","nameLocation":"3767:6:5","nodeType":"VariableDeclaration","scope":779,"src":"3759:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":758,"name":"uint256","nodeType":"ElementaryTypeName","src":"3759:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3746:28:5"},"returnParameters":{"id":764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":763,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":779,"src":"3808:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":762,"name":"bool","nodeType":"ElementaryTypeName","src":"3808:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3807:6:5"},"scope":1312,"src":"3729:189:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1367],"body":{"id":796,"nodeType":"Block","src":"4074:51:5","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":790,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"4091:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":792,"indexExpression":{"id":791,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":782,"src":"4103:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4091:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":794,"indexExpression":{"id":793,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":784,"src":"4110:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4091:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":789,"id":795,"nodeType":"Return","src":"4084:34:5"}]},"documentation":{"id":780,"nodeType":"StructuredDocumentation","src":"3924:47:5","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":797,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3985:9:5","nodeType":"FunctionDefinition","overrides":{"id":786,"nodeType":"OverrideSpecifier","overrides":[],"src":"4047:8:5"},"parameters":{"id":785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":782,"mutability":"mutable","name":"owner","nameLocation":"4003:5:5","nodeType":"VariableDeclaration","scope":797,"src":"3995:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":781,"name":"address","nodeType":"ElementaryTypeName","src":"3995:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":784,"mutability":"mutable","name":"spender","nameLocation":"4018:7:5","nodeType":"VariableDeclaration","scope":797,"src":"4010:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":783,"name":"address","nodeType":"ElementaryTypeName","src":"4010:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3994:32:5"},"returnParameters":{"id":789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":788,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":797,"src":"4065:7:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":787,"name":"uint256","nodeType":"ElementaryTypeName","src":"4065:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4064:9:5"},"scope":1312,"src":"3976:149:5","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1377],"body":{"id":821,"nodeType":"Block","src":"4522:108:5","statements":[{"assignments":[809],"declarations":[{"constant":false,"id":809,"mutability":"mutable","name":"owner","nameLocation":"4540:5:5","nodeType":"VariableDeclaration","scope":821,"src":"4532:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":808,"name":"address","nodeType":"ElementaryTypeName","src":"4532:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":812,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":810,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"4548:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4548:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4532:28:5"},{"expression":{"arguments":[{"id":814,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":809,"src":"4579:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":815,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":800,"src":"4586:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":816,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":802,"src":"4595:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":813,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"4570:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4570:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":818,"nodeType":"ExpressionStatement","src":"4570:32:5"},{"expression":{"hexValue":"74727565","id":819,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4619:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":807,"id":820,"nodeType":"Return","src":"4612:11:5"}]},"documentation":{"id":798,"nodeType":"StructuredDocumentation","src":"4131:297:5","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":822,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4442:7:5","nodeType":"FunctionDefinition","overrides":{"id":804,"nodeType":"OverrideSpecifier","overrides":[],"src":"4498:8:5"},"parameters":{"id":803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":800,"mutability":"mutable","name":"spender","nameLocation":"4458:7:5","nodeType":"VariableDeclaration","scope":822,"src":"4450:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":799,"name":"address","nodeType":"ElementaryTypeName","src":"4450:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":802,"mutability":"mutable","name":"amount","nameLocation":"4475:6:5","nodeType":"VariableDeclaration","scope":822,"src":"4467:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":801,"name":"uint256","nodeType":"ElementaryTypeName","src":"4467:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4449:33:5"},"returnParameters":{"id":807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":806,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":822,"src":"4516:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":805,"name":"bool","nodeType":"ElementaryTypeName","src":"4516:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4515:6:5"},"scope":1312,"src":"4433:197:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1389],"body":{"id":854,"nodeType":"Block","src":"5325:153:5","statements":[{"assignments":[836],"declarations":[{"constant":false,"id":836,"mutability":"mutable","name":"spender","nameLocation":"5343:7:5","nodeType":"VariableDeclaration","scope":854,"src":"5335:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":835,"name":"address","nodeType":"ElementaryTypeName","src":"5335:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":839,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":837,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"5353:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5353:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5335:30:5"},{"expression":{"arguments":[{"id":841,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"5391:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":842,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":836,"src":"5397:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":843,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"5406:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":840,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"5375:15:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":844,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5375:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":845,"nodeType":"ExpressionStatement","src":"5375:38:5"},{"expression":{"arguments":[{"id":847,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":825,"src":"5433:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":848,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":827,"src":"5439:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":849,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":829,"src":"5443:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":846,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"5423:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":850,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5423:27:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":851,"nodeType":"ExpressionStatement","src":"5423:27:5"},{"expression":{"hexValue":"74727565","id":852,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5467:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":834,"id":853,"nodeType":"Return","src":"5460:11:5"}]},"documentation":{"id":823,"nodeType":"StructuredDocumentation","src":"4636:551:5","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":855,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5201:12:5","nodeType":"FunctionDefinition","overrides":{"id":831,"nodeType":"OverrideSpecifier","overrides":[],"src":"5301:8:5"},"parameters":{"id":830,"nodeType":"ParameterList","parameters":[{"constant":false,"id":825,"mutability":"mutable","name":"from","nameLocation":"5231:4:5","nodeType":"VariableDeclaration","scope":855,"src":"5223:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":824,"name":"address","nodeType":"ElementaryTypeName","src":"5223:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":827,"mutability":"mutable","name":"to","nameLocation":"5253:2:5","nodeType":"VariableDeclaration","scope":855,"src":"5245:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":826,"name":"address","nodeType":"ElementaryTypeName","src":"5245:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":829,"mutability":"mutable","name":"amount","nameLocation":"5273:6:5","nodeType":"VariableDeclaration","scope":855,"src":"5265:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":828,"name":"uint256","nodeType":"ElementaryTypeName","src":"5265:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5213:72:5"},"returnParameters":{"id":834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":833,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":855,"src":"5319:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":832,"name":"bool","nodeType":"ElementaryTypeName","src":"5319:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5318:6:5"},"scope":1312,"src":"5192:286:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":883,"nodeType":"Block","src":"5967:140:5","statements":[{"assignments":[866],"declarations":[{"constant":false,"id":866,"mutability":"mutable","name":"owner","nameLocation":"5985:5:5","nodeType":"VariableDeclaration","scope":883,"src":"5977:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":865,"name":"address","nodeType":"ElementaryTypeName","src":"5977:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":869,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":867,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"5993:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5993:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5977:28:5"},{"expression":{"arguments":[{"id":871,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"6024:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":872,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"6031:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":874,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"6050:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":875,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"6057:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":873,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"6040:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6040:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":877,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":860,"src":"6068:10:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6040:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":870,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"6015:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6015:64:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":880,"nodeType":"ExpressionStatement","src":"6015:64:5"},{"expression":{"hexValue":"74727565","id":881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6096:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":864,"id":882,"nodeType":"Return","src":"6089:11:5"}]},"documentation":{"id":856,"nodeType":"StructuredDocumentation","src":"5484:384:5","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":884,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5882:17:5","nodeType":"FunctionDefinition","parameters":{"id":861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":858,"mutability":"mutable","name":"spender","nameLocation":"5908:7:5","nodeType":"VariableDeclaration","scope":884,"src":"5900:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":857,"name":"address","nodeType":"ElementaryTypeName","src":"5900:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":860,"mutability":"mutable","name":"addedValue","nameLocation":"5925:10:5","nodeType":"VariableDeclaration","scope":884,"src":"5917:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":859,"name":"uint256","nodeType":"ElementaryTypeName","src":"5917:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5899:37:5"},"returnParameters":{"id":864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":863,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":884,"src":"5961:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":862,"name":"bool","nodeType":"ElementaryTypeName","src":"5961:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5960:6:5"},"scope":1312,"src":"5873:234:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":924,"nodeType":"Block","src":"6693:328:5","statements":[{"assignments":[895],"declarations":[{"constant":false,"id":895,"mutability":"mutable","name":"owner","nameLocation":"6711:5:5","nodeType":"VariableDeclaration","scope":924,"src":"6703:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":894,"name":"address","nodeType":"ElementaryTypeName","src":"6703:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":898,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":896,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"6719:10:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6719:12:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6703:28:5"},{"assignments":[900],"declarations":[{"constant":false,"id":900,"mutability":"mutable","name":"currentAllowance","nameLocation":"6749:16:5","nodeType":"VariableDeclaration","scope":924,"src":"6741:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":899,"name":"uint256","nodeType":"ElementaryTypeName","src":"6741:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":905,"initialValue":{"arguments":[{"id":902,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"6778:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":903,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"6785:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":901,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"6768:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":904,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6768:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6741:52:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":907,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"6811:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":908,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"6831:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6811:35:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6848:39:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":906,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6803:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6803:85:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":912,"nodeType":"ExpressionStatement","src":"6803:85:5"},{"id":921,"nodeType":"UncheckedBlock","src":"6898:95:5","statements":[{"expression":{"arguments":[{"id":914,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":895,"src":"6931:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":915,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":887,"src":"6938:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":916,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":900,"src":"6947:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":917,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":889,"src":"6966:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6947:34:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":913,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"6922:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6922:60:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":920,"nodeType":"ExpressionStatement","src":"6922:60:5"}]},{"expression":{"hexValue":"74727565","id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7010:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":893,"id":923,"nodeType":"Return","src":"7003:11:5"}]},"documentation":{"id":885,"nodeType":"StructuredDocumentation","src":"6113:476:5","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":925,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6603:17:5","nodeType":"FunctionDefinition","parameters":{"id":890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":887,"mutability":"mutable","name":"spender","nameLocation":"6629:7:5","nodeType":"VariableDeclaration","scope":925,"src":"6621:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":886,"name":"address","nodeType":"ElementaryTypeName","src":"6621:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":889,"mutability":"mutable","name":"subtractedValue","nameLocation":"6646:15:5","nodeType":"VariableDeclaration","scope":925,"src":"6638:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":888,"name":"uint256","nodeType":"ElementaryTypeName","src":"6638:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6620:42:5"},"returnParameters":{"id":893,"nodeType":"ParameterList","parameters":[{"constant":false,"id":892,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":925,"src":"6687:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":891,"name":"bool","nodeType":"ElementaryTypeName","src":"6687:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6686:6:5"},"scope":1312,"src":"6594:427:5","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1001,"nodeType":"Block","src":"7583:543:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":936,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"7601:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7617:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7609:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":937,"name":"address","nodeType":"ElementaryTypeName","src":"7609:7:5","typeDescriptions":{}}},"id":940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7609:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7601:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7621:39:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":935,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7593:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7593:68:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":944,"nodeType":"ExpressionStatement","src":"7593:68:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":946,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"7679:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7693:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":948,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7685:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":947,"name":"address","nodeType":"ElementaryTypeName","src":"7685:7:5","typeDescriptions":{}}},"id":950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7685:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7679:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7697:37:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":945,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7671:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7671:64:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":954,"nodeType":"ExpressionStatement","src":"7671:64:5"},{"expression":{"arguments":[{"id":956,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"7767:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":957,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"7773:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":958,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"7777:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":955,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"7746:20:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7746:38:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":960,"nodeType":"ExpressionStatement","src":"7746:38:5"},{"assignments":[962],"declarations":[{"constant":false,"id":962,"mutability":"mutable","name":"fromBalance","nameLocation":"7803:11:5","nodeType":"VariableDeclaration","scope":1001,"src":"7795:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":961,"name":"uint256","nodeType":"ElementaryTypeName","src":"7795:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":966,"initialValue":{"baseExpression":{"id":963,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"7817:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":965,"indexExpression":{"id":964,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"7827:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7817:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7795:37:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":968,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"7850:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":969,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"7865:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7850:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7873:40:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":967,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7842:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7842:72:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":973,"nodeType":"ExpressionStatement","src":"7842:72:5"},{"id":982,"nodeType":"UncheckedBlock","src":"7924:73:5","statements":[{"expression":{"id":980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":974,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"7948:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":976,"indexExpression":{"id":975,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"7958:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7948:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":979,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":977,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":962,"src":"7966:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":978,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"7980:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7966:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7948:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":981,"nodeType":"ExpressionStatement","src":"7948:38:5"}]},{"expression":{"id":987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":983,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"8006:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":985,"indexExpression":{"id":984,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"8016:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8006:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":986,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"8023:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8006:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":988,"nodeType":"ExpressionStatement","src":"8006:23:5"},{"eventCall":{"arguments":[{"id":990,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"8054:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":991,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"8060:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":992,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"8064:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":989,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"8045:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8045:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":994,"nodeType":"EmitStatement","src":"8040:31:5"},{"expression":{"arguments":[{"id":996,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"8102:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":997,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"8108:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":998,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"8112:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":995,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"8082:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8082:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1000,"nodeType":"ExpressionStatement","src":"8082:37:5"}]},"documentation":{"id":926,"nodeType":"StructuredDocumentation","src":"7027:443:5","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":1002,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7484:9:5","nodeType":"FunctionDefinition","parameters":{"id":933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":928,"mutability":"mutable","name":"from","nameLocation":"7511:4:5","nodeType":"VariableDeclaration","scope":1002,"src":"7503:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":927,"name":"address","nodeType":"ElementaryTypeName","src":"7503:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":930,"mutability":"mutable","name":"to","nameLocation":"7533:2:5","nodeType":"VariableDeclaration","scope":1002,"src":"7525:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":929,"name":"address","nodeType":"ElementaryTypeName","src":"7525:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":932,"mutability":"mutable","name":"amount","nameLocation":"7553:6:5","nodeType":"VariableDeclaration","scope":1002,"src":"7545:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":931,"name":"uint256","nodeType":"ElementaryTypeName","src":"7545:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7493:72:5"},"returnParameters":{"id":934,"nodeType":"ParameterList","parameters":[],"src":"7583:0:5"},"scope":1312,"src":"7475:651:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1072,"nodeType":"Block","src":"8347:516:5","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1012,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"8369:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8385:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1014,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8377:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1013,"name":"address","nodeType":"ElementaryTypeName","src":"8377:7:5","typeDescriptions":{}}},"id":1016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8377:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8369:18:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1045,"nodeType":"Block","src":"8636:47:5","statements":[{"expression":{"id":1043,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1041,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"8650:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1042,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"8666:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8650:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1044,"nodeType":"ExpressionStatement","src":"8650:22:5"}]},"id":1046,"nodeType":"IfStatement","src":"8366:317:5","trueBody":{"id":1040,"nodeType":"Block","src":"8388:242:5","statements":[{"assignments":[1019],"declarations":[{"constant":false,"id":1019,"mutability":"mutable","name":"fromBalance","nameLocation":"8410:11:5","nodeType":"VariableDeclaration","scope":1040,"src":"8402:19:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1018,"name":"uint256","nodeType":"ElementaryTypeName","src":"8402:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1023,"initialValue":{"baseExpression":{"id":1020,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"8424:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1022,"indexExpression":{"id":1021,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"8434:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8424:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8402:37:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1025,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"8461:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1026,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"8476:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8461:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":1028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8484:40:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":1024,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8453:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8453:72:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1030,"nodeType":"ExpressionStatement","src":"8453:72:5"},{"id":1039,"nodeType":"UncheckedBlock","src":"8539:81:5","statements":[{"expression":{"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1031,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"8567:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1033,"indexExpression":{"id":1032,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"8577:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8567:15:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1034,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"8585:11:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1035,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"8599:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8585:20:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8567:38:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1038,"nodeType":"ExpressionStatement","src":"8567:38:5"}]}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1047,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"8696:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8710:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1049,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8702:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1048,"name":"address","nodeType":"ElementaryTypeName","src":"8702:7:5","typeDescriptions":{}}},"id":1051,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8702:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8696:16:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1064,"nodeType":"Block","src":"8768:47:5","statements":[{"expression":{"id":1062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1060,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"8782:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1061,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"8798:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8782:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1063,"nodeType":"ExpressionStatement","src":"8782:22:5"}]},"id":1065,"nodeType":"IfStatement","src":"8693:122:5","trueBody":{"id":1059,"nodeType":"Block","src":"8714:48:5","statements":[{"expression":{"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1053,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"8728:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1055,"indexExpression":{"id":1054,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"8738:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8728:13:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1056,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"8745:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8728:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1058,"nodeType":"ExpressionStatement","src":"8728:23:5"}]}},{"eventCall":{"arguments":[{"id":1067,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1005,"src":"8839:4:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1068,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1007,"src":"8845:2:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1069,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1009,"src":"8849:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1066,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"8830:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8830:26:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1071,"nodeType":"EmitStatement","src":"8825:31:5"}]},"documentation":{"id":1003,"nodeType":"StructuredDocumentation","src":"8136:94:5","text":" @dev normal _transfer without of hook functions.(used for transaction fees)"},"id":1073,"implemented":true,"kind":"function","modifiers":[],"name":"_pureTransfer","nameLocation":"8244:13:5","nodeType":"FunctionDefinition","parameters":{"id":1010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1005,"mutability":"mutable","name":"from","nameLocation":"8275:4:5","nodeType":"VariableDeclaration","scope":1073,"src":"8267:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1004,"name":"address","nodeType":"ElementaryTypeName","src":"8267:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1007,"mutability":"mutable","name":"to","nameLocation":"8297:2:5","nodeType":"VariableDeclaration","scope":1073,"src":"8289:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1006,"name":"address","nodeType":"ElementaryTypeName","src":"8289:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1009,"mutability":"mutable","name":"amount","nameLocation":"8317:6:5","nodeType":"VariableDeclaration","scope":1073,"src":"8309:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1008,"name":"uint256","nodeType":"ElementaryTypeName","src":"8309:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8257:72:5"},"returnParameters":{"id":1011,"nodeType":"ParameterList","parameters":[],"src":"8347:0:5"},"scope":1312,"src":"8235:628:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1128,"nodeType":"Block","src":"9204:324:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1082,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"9222:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9241:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9233:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1083,"name":"address","nodeType":"ElementaryTypeName","src":"9233:7:5","typeDescriptions":{}}},"id":1086,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9233:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9222:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":1088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9245:33:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":1081,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9214:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9214:65:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1090,"nodeType":"ExpressionStatement","src":"9214:65:5"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9319:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1093,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9311:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1092,"name":"address","nodeType":"ElementaryTypeName","src":"9311:7:5","typeDescriptions":{}}},"id":1095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9311:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1096,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"9323:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1097,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"9332:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1091,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"9290:20:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9290:49:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1099,"nodeType":"ExpressionStatement","src":"9290:49:5"},{"expression":{"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1100,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"9350:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1101,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"9366:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9350:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1103,"nodeType":"ExpressionStatement","src":"9350:22:5"},{"expression":{"id":1108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1104,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"9382:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1106,"indexExpression":{"id":1105,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"9392:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9382:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1107,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"9404:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9382:28:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1109,"nodeType":"ExpressionStatement","src":"9382:28:5"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9442:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9434:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1111,"name":"address","nodeType":"ElementaryTypeName","src":"9434:7:5","typeDescriptions":{}}},"id":1114,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9434:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1115,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"9446:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1116,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"9455:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1110,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"9425:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9425:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1118,"nodeType":"EmitStatement","src":"9420:42:5"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":1122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9501:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1121,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9493:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1120,"name":"address","nodeType":"ElementaryTypeName","src":"9493:7:5","typeDescriptions":{}}},"id":1123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9493:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1124,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"9505:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1125,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1078,"src":"9514:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1119,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"9473:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9473:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1127,"nodeType":"ExpressionStatement","src":"9473:48:5"}]},"documentation":{"id":1074,"nodeType":"StructuredDocumentation","src":"8869:265:5","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":1129,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"9148:5:5","nodeType":"FunctionDefinition","parameters":{"id":1079,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1076,"mutability":"mutable","name":"account","nameLocation":"9162:7:5","nodeType":"VariableDeclaration","scope":1129,"src":"9154:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1075,"name":"address","nodeType":"ElementaryTypeName","src":"9154:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1078,"mutability":"mutable","name":"amount","nameLocation":"9179:6:5","nodeType":"VariableDeclaration","scope":1129,"src":"9171:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1077,"name":"uint256","nodeType":"ElementaryTypeName","src":"9171:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9153:33:5"},"returnParameters":{"id":1080,"nodeType":"ParameterList","parameters":[],"src":"9204:0:5"},"scope":1312,"src":"9139:389:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1200,"nodeType":"Block","src":"9913:511:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1138,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"9931:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1141,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9950:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1140,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9942:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1139,"name":"address","nodeType":"ElementaryTypeName","src":"9942:7:5","typeDescriptions":{}}},"id":1142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9942:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9931:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":1144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9954:35:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":1137,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9923:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9923:67:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1146,"nodeType":"ExpressionStatement","src":"9923:67:5"},{"expression":{"arguments":[{"id":1148,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"10022:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10039:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1150,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10031:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1149,"name":"address","nodeType":"ElementaryTypeName","src":"10031:7:5","typeDescriptions":{}}},"id":1152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10031:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1153,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"10043:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1147,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1300,"src":"10001:20:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1154,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10001:49:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1155,"nodeType":"ExpressionStatement","src":"10001:49:5"},{"assignments":[1157],"declarations":[{"constant":false,"id":1157,"mutability":"mutable","name":"accountBalance","nameLocation":"10069:14:5","nodeType":"VariableDeclaration","scope":1200,"src":"10061:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1156,"name":"uint256","nodeType":"ElementaryTypeName","src":"10061:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1161,"initialValue":{"baseExpression":{"id":1158,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"10086:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1160,"indexExpression":{"id":1159,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"10096:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10086:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10061:43:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1163,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"10122:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1164,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"10140:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10122:24:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":1166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10148:36:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":1162,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10114:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10114:71:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1168,"nodeType":"ExpressionStatement","src":"10114:71:5"},{"id":1177,"nodeType":"UncheckedBlock","src":"10195:79:5","statements":[{"expression":{"id":1175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1169,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"10219:9:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1171,"indexExpression":{"id":1170,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"10229:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10219:18:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1174,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1172,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"10240:14:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1173,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"10257:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10240:23:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10219:44:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1176,"nodeType":"ExpressionStatement","src":"10219:44:5"}]},{"expression":{"id":1180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1178,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":679,"src":"10283:12:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1179,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"10299:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10283:22:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1181,"nodeType":"ExpressionStatement","src":"10283:22:5"},{"eventCall":{"arguments":[{"id":1183,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"10330:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10347:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1185,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10339:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1184,"name":"address","nodeType":"ElementaryTypeName","src":"10339:7:5","typeDescriptions":{}}},"id":1187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10339:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1188,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"10351:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1182,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1324,"src":"10321:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10321:37:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1190,"nodeType":"EmitStatement","src":"10316:42:5"},{"expression":{"arguments":[{"id":1192,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1132,"src":"10389:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10406:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1194,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10398:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1193,"name":"address","nodeType":"ElementaryTypeName","src":"10398:7:5","typeDescriptions":{}}},"id":1196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10398:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1197,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1134,"src":"10410:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1191,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1311,"src":"10369:19:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10369:48:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1199,"nodeType":"ExpressionStatement","src":"10369:48:5"}]},"documentation":{"id":1130,"nodeType":"StructuredDocumentation","src":"9534:309:5","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":1201,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9857:5:5","nodeType":"FunctionDefinition","parameters":{"id":1135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1132,"mutability":"mutable","name":"account","nameLocation":"9871:7:5","nodeType":"VariableDeclaration","scope":1201,"src":"9863:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1131,"name":"address","nodeType":"ElementaryTypeName","src":"9863:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1134,"mutability":"mutable","name":"amount","nameLocation":"9888:6:5","nodeType":"VariableDeclaration","scope":1201,"src":"9880:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1133,"name":"uint256","nodeType":"ElementaryTypeName","src":"9880:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9862:33:5"},"returnParameters":{"id":1136,"nodeType":"ParameterList","parameters":[],"src":"9913:0:5"},"scope":1312,"src":"9848:576:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1245,"nodeType":"Block","src":"10960:257:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1217,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1212,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"10978:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1215,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10995:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1214,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10987:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1213,"name":"address","nodeType":"ElementaryTypeName","src":"10987:7:5","typeDescriptions":{}}},"id":1216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10987:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10978:19:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":1218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10999:38:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":1211,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10970:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10970:68:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1220,"nodeType":"ExpressionStatement","src":"10970:68:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1222,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"11056:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11075:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1224,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11067:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1223,"name":"address","nodeType":"ElementaryTypeName","src":"11067:7:5","typeDescriptions":{}}},"id":1226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11067:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"11056:21:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":1228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11079:36:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":1221,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11048:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11048:68:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1230,"nodeType":"ExpressionStatement","src":"11048:68:5"},{"expression":{"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1231,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":677,"src":"11127:11:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1234,"indexExpression":{"id":1232,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"11139:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11127:18:5","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1235,"indexExpression":{"id":1233,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"11146:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"11127:27:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1236,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"11157:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11127:36:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1238,"nodeType":"ExpressionStatement","src":"11127:36:5"},{"eventCall":{"arguments":[{"id":1240,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1204,"src":"11187:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1241,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1206,"src":"11194:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1242,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"11203:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1239,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1333,"src":"11178:8:5","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11178:32:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1244,"nodeType":"EmitStatement","src":"11173:37:5"}]},"documentation":{"id":1202,"nodeType":"StructuredDocumentation","src":"10430:412:5","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":1246,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10856:8:5","nodeType":"FunctionDefinition","parameters":{"id":1209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1204,"mutability":"mutable","name":"owner","nameLocation":"10882:5:5","nodeType":"VariableDeclaration","scope":1246,"src":"10874:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1203,"name":"address","nodeType":"ElementaryTypeName","src":"10874:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1206,"mutability":"mutable","name":"spender","nameLocation":"10905:7:5","nodeType":"VariableDeclaration","scope":1246,"src":"10897:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1205,"name":"address","nodeType":"ElementaryTypeName","src":"10897:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1208,"mutability":"mutable","name":"amount","nameLocation":"10930:6:5","nodeType":"VariableDeclaration","scope":1246,"src":"10922:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1207,"name":"uint256","nodeType":"ElementaryTypeName","src":"10922:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10864:78:5"},"returnParameters":{"id":1210,"nodeType":"ParameterList","parameters":[],"src":"10960:0:5"},"scope":1312,"src":"10847:370:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1288,"nodeType":"Block","src":"11618:321:5","statements":[{"assignments":[1257],"declarations":[{"constant":false,"id":1257,"mutability":"mutable","name":"currentAllowance","nameLocation":"11636:16:5","nodeType":"VariableDeclaration","scope":1288,"src":"11628:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1256,"name":"uint256","nodeType":"ElementaryTypeName","src":"11628:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1262,"initialValue":{"arguments":[{"id":1259,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"11665:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1260,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"11672:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1258,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"11655:9:5","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11655:25:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11628:52:5"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1263,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"11694:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1266,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11719:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1265,"name":"uint256","nodeType":"ElementaryTypeName","src":"11719:7:5","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1264,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11714:4:5","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1267,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11714:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1268,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11714:17:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11694:37:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1287,"nodeType":"IfStatement","src":"11690:243:5","trueBody":{"id":1286,"nodeType":"Block","src":"11733:200:5","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1271,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"11755:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1272,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"11775:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11755:26:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":1274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11783:31:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":1270,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11747:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11747:68:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1276,"nodeType":"ExpressionStatement","src":"11747:68:5"},{"id":1285,"nodeType":"UncheckedBlock","src":"11829:94:5","statements":[{"expression":{"arguments":[{"id":1278,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1249,"src":"11866:5:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1279,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"11873:7:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1280,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"11882:16:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1281,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1253,"src":"11901:6:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11882:25:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1277,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"11857:8:5","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11857:51:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1284,"nodeType":"ExpressionStatement","src":"11857:51:5"}]}]}}]},"documentation":{"id":1247,"nodeType":"StructuredDocumentation","src":"11223:270:5","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":1289,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11507:15:5","nodeType":"FunctionDefinition","parameters":{"id":1254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1249,"mutability":"mutable","name":"owner","nameLocation":"11540:5:5","nodeType":"VariableDeclaration","scope":1289,"src":"11532:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1248,"name":"address","nodeType":"ElementaryTypeName","src":"11532:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1251,"mutability":"mutable","name":"spender","nameLocation":"11563:7:5","nodeType":"VariableDeclaration","scope":1289,"src":"11555:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1250,"name":"address","nodeType":"ElementaryTypeName","src":"11555:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1253,"mutability":"mutable","name":"amount","nameLocation":"11588:6:5","nodeType":"VariableDeclaration","scope":1289,"src":"11580:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1252,"name":"uint256","nodeType":"ElementaryTypeName","src":"11580:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11522:78:5"},"returnParameters":{"id":1255,"nodeType":"ParameterList","parameters":[],"src":"11618:0:5"},"scope":1312,"src":"11498:441:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1299,"nodeType":"Block","src":"12642:2:5","statements":[]},"documentation":{"id":1290,"nodeType":"StructuredDocumentation","src":"11945:573:5","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1300,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12532:20:5","nodeType":"FunctionDefinition","parameters":{"id":1297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1292,"mutability":"mutable","name":"from","nameLocation":"12570:4:5","nodeType":"VariableDeclaration","scope":1300,"src":"12562:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1291,"name":"address","nodeType":"ElementaryTypeName","src":"12562:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1294,"mutability":"mutable","name":"to","nameLocation":"12592:2:5","nodeType":"VariableDeclaration","scope":1300,"src":"12584:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1293,"name":"address","nodeType":"ElementaryTypeName","src":"12584:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1296,"mutability":"mutable","name":"amount","nameLocation":"12612:6:5","nodeType":"VariableDeclaration","scope":1300,"src":"12604:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1295,"name":"uint256","nodeType":"ElementaryTypeName","src":"12604:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12552:72:5"},"returnParameters":{"id":1298,"nodeType":"ParameterList","parameters":[],"src":"12642:0:5"},"scope":1312,"src":"12523:121:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1310,"nodeType":"Block","src":"13350:2:5","statements":[]},"documentation":{"id":1301,"nodeType":"StructuredDocumentation","src":"12650:577:5","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1311,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"13241:19:5","nodeType":"FunctionDefinition","parameters":{"id":1308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1303,"mutability":"mutable","name":"from","nameLocation":"13278:4:5","nodeType":"VariableDeclaration","scope":1311,"src":"13270:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1302,"name":"address","nodeType":"ElementaryTypeName","src":"13270:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1305,"mutability":"mutable","name":"to","nameLocation":"13300:2:5","nodeType":"VariableDeclaration","scope":1311,"src":"13292:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1304,"name":"address","nodeType":"ElementaryTypeName","src":"13292:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1307,"mutability":"mutable","name":"amount","nameLocation":"13320:6:5","nodeType":"VariableDeclaration","scope":1311,"src":"13312:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1306,"name":"uint256","nodeType":"ElementaryTypeName","src":"13312:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13260:72:5"},"returnParameters":{"id":1309,"nodeType":"ParameterList","parameters":[],"src":"13350:0:5"},"scope":1312,"src":"13232:120:5","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1313,"src":"1403:11951:5","usedErrors":[]}],"src":"105:13250:5"},"id":5},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1390]},"id":1391,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1314,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1315,"nodeType":"StructuredDocumentation","src":"131:70:6","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1390,"linearizedBaseContracts":[1390],"name":"IERC20","nameLocation":"212:6:6","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1316,"nodeType":"StructuredDocumentation","src":"225:158:6","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"eventSelector":"ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef","id":1324,"name":"Transfer","nameLocation":"394:8:6","nodeType":"EventDefinition","parameters":{"id":1323,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1318,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:6","nodeType":"VariableDeclaration","scope":1324,"src":"403:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1317,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1320,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:6","nodeType":"VariableDeclaration","scope":1324,"src":"425:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1319,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1322,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:6","nodeType":"VariableDeclaration","scope":1324,"src":"445:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1321,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:6"},"src":"388:72:6"},{"anonymous":false,"documentation":{"id":1325,"nodeType":"StructuredDocumentation","src":"466:148:6","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"eventSelector":"8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925","id":1333,"name":"Approval","nameLocation":"625:8:6","nodeType":"EventDefinition","parameters":{"id":1332,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1327,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:6","nodeType":"VariableDeclaration","scope":1333,"src":"634:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1326,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1329,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:6","nodeType":"VariableDeclaration","scope":1333,"src":"657:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1328,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1331,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:6","nodeType":"VariableDeclaration","scope":1333,"src":"682:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1330,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:6"},"src":"619:78:6"},{"documentation":{"id":1334,"nodeType":"StructuredDocumentation","src":"703:66:6","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":1339,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:6","nodeType":"FunctionDefinition","parameters":{"id":1335,"nodeType":"ParameterList","parameters":[],"src":"794:2:6"},"returnParameters":{"id":1338,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1337,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1339,"src":"820:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1336,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:6"},"scope":1390,"src":"774:55:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1340,"nodeType":"StructuredDocumentation","src":"835:72:6","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":1347,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:6","nodeType":"FunctionDefinition","parameters":{"id":1343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1342,"mutability":"mutable","name":"account","nameLocation":"939:7:6","nodeType":"VariableDeclaration","scope":1347,"src":"931:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1341,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:6"},"returnParameters":{"id":1346,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1345,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1347,"src":"971:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1344,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:6"},"scope":1390,"src":"912:68:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1348,"nodeType":"StructuredDocumentation","src":"986:202:6","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1357,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:6","nodeType":"FunctionDefinition","parameters":{"id":1353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1350,"mutability":"mutable","name":"to","nameLocation":"1219:2:6","nodeType":"VariableDeclaration","scope":1357,"src":"1211:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1349,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1352,"mutability":"mutable","name":"amount","nameLocation":"1231:6:6","nodeType":"VariableDeclaration","scope":1357,"src":"1223:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1351,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:6"},"returnParameters":{"id":1356,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1355,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1357,"src":"1257:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1354,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:6"},"scope":1390,"src":"1193:70:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1358,"nodeType":"StructuredDocumentation","src":"1269:264:6","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1367,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:6","nodeType":"FunctionDefinition","parameters":{"id":1363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1360,"mutability":"mutable","name":"owner","nameLocation":"1565:5:6","nodeType":"VariableDeclaration","scope":1367,"src":"1557:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1359,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1362,"mutability":"mutable","name":"spender","nameLocation":"1580:7:6","nodeType":"VariableDeclaration","scope":1367,"src":"1572:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1361,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:6"},"returnParameters":{"id":1366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1367,"src":"1612:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1364,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:6"},"scope":1390,"src":"1538:83:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1368,"nodeType":"StructuredDocumentation","src":"1627:642:6","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1377,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:6","nodeType":"FunctionDefinition","parameters":{"id":1373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1370,"mutability":"mutable","name":"spender","nameLocation":"2299:7:6","nodeType":"VariableDeclaration","scope":1377,"src":"2291:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1369,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1372,"mutability":"mutable","name":"amount","nameLocation":"2316:6:6","nodeType":"VariableDeclaration","scope":1377,"src":"2308:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1371,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:6"},"returnParameters":{"id":1376,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1375,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1377,"src":"2342:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1374,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:6"},"scope":1390,"src":"2274:74:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1378,"nodeType":"StructuredDocumentation","src":"2354:287:6","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1389,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:6","nodeType":"FunctionDefinition","parameters":{"id":1385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1380,"mutability":"mutable","name":"from","nameLocation":"2685:4:6","nodeType":"VariableDeclaration","scope":1389,"src":"2677:12:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1379,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1382,"mutability":"mutable","name":"to","nameLocation":"2707:2:6","nodeType":"VariableDeclaration","scope":1389,"src":"2699:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1381,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1384,"mutability":"mutable","name":"amount","nameLocation":"2727:6:6","nodeType":"VariableDeclaration","scope":1389,"src":"2719:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1383,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:6"},"returnParameters":{"id":1388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1387,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1389,"src":"2758:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1386,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:6"},"scope":1390,"src":"2646:118:6","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1391,"src":"202:2564:6","usedErrors":[]}],"src":"106:2661:6"},"id":6},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","exportedSymbols":{"Context":[1754],"ERC20":[1312],"ERC20Burnable":[1434],"IERC20":[1390],"IERC20Metadata":[1524]},"id":1435,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1392,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"124:23:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1393,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1435,"sourceUnit":1313,"src":"149:22:7","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../../utils/Context.sol","id":1394,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1435,"sourceUnit":1755,"src":"172:36:7","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1396,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1754,"src":"454:7:7"},"id":1397,"nodeType":"InheritanceSpecifier","src":"454:7:7"},{"baseName":{"id":1398,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":1312,"src":"463:5:7"},"id":1399,"nodeType":"InheritanceSpecifier","src":"463:5:7"}],"canonicalName":"ERC20Burnable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1395,"nodeType":"StructuredDocumentation","src":"210:208:7","text":" @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."},"fullyImplemented":false,"id":1434,"linearizedBaseContracts":[1434,1312,1524,1390,1754],"name":"ERC20Burnable","nameLocation":"437:13:7","nodeType":"ContractDefinition","nodes":[{"body":{"id":1411,"nodeType":"Block","src":"623:44:7","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1406,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"639:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"639:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1408,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1402,"src":"653:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1405,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"633:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"633:27:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1410,"nodeType":"ExpressionStatement","src":"633:27:7"}]},"documentation":{"id":1400,"nodeType":"StructuredDocumentation","src":"475:98:7","text":" @dev Destroys `amount` tokens from the caller.\n See {ERC20-_burn}."},"functionSelector":"42966c68","id":1412,"implemented":true,"kind":"function","modifiers":[],"name":"burn","nameLocation":"587:4:7","nodeType":"FunctionDefinition","parameters":{"id":1403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1402,"mutability":"mutable","name":"amount","nameLocation":"600:6:7","nodeType":"VariableDeclaration","scope":1412,"src":"592:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1401,"name":"uint256","nodeType":"ElementaryTypeName","src":"592:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"591:16:7"},"returnParameters":{"id":1404,"nodeType":"ParameterList","parameters":[],"src":"623:0:7"},"scope":1434,"src":"578:89:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1432,"nodeType":"Block","src":"1039:95:7","statements":[{"expression":{"arguments":[{"id":1421,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"1065:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1422,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"1074:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1074:12:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1424,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"1088:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1420,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"1049:15:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1049:46:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1426,"nodeType":"ExpressionStatement","src":"1049:46:7"},{"expression":{"arguments":[{"id":1428,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"1111:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1429,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1417,"src":"1120:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1427,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1201,"src":"1105:5:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1105:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1431,"nodeType":"ExpressionStatement","src":"1105:22:7"}]},"documentation":{"id":1413,"nodeType":"StructuredDocumentation","src":"673:295:7","text":" @dev Destroys `amount` tokens from `account`, deducting from the caller's\n allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `amount`."},"functionSelector":"79cc6790","id":1433,"implemented":true,"kind":"function","modifiers":[],"name":"burnFrom","nameLocation":"982:8:7","nodeType":"FunctionDefinition","parameters":{"id":1418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1415,"mutability":"mutable","name":"account","nameLocation":"999:7:7","nodeType":"VariableDeclaration","scope":1433,"src":"991:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1414,"name":"address","nodeType":"ElementaryTypeName","src":"991:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1417,"mutability":"mutable","name":"amount","nameLocation":"1016:6:7","nodeType":"VariableDeclaration","scope":1433,"src":"1008:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1416,"name":"uint256","nodeType":"ElementaryTypeName","src":"1008:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"990:33:7"},"returnParameters":{"id":1419,"nodeType":"ParameterList","parameters":[],"src":"1039:0:7"},"scope":1434,"src":"973:161:7","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":1435,"src":"419:717:7","usedErrors":[]}],"src":"124:1013:7"},"id":7},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol","exportedSymbols":{"Context":[1754],"ERC20":[1312],"ERC20Capped":[1499],"IERC20":[1390],"IERC20Metadata":[1524]},"id":1500,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1436,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"107:23:8"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1437,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1500,"sourceUnit":1313,"src":"132:22:8","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1439,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":1312,"src":"267:5:8"},"id":1440,"nodeType":"InheritanceSpecifier","src":"267:5:8"}],"canonicalName":"ERC20Capped","contractDependencies":[],"contractKind":"contract","documentation":{"id":1438,"nodeType":"StructuredDocumentation","src":"156:77:8","text":" @dev Extension of {ERC20} that adds a cap to the supply of tokens."},"fullyImplemented":false,"id":1499,"linearizedBaseContracts":[1499,1312,1524,1390,1754],"name":"ERC20Capped","nameLocation":"252:11:8","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":1442,"mutability":"immutable","name":"_cap","nameLocation":"305:4:8","nodeType":"VariableDeclaration","scope":1499,"src":"279:30:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1441,"name":"uint256","nodeType":"ElementaryTypeName","src":"279:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":1459,"nodeType":"Block","src":"476:80:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1451,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1449,"name":"cap_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"494:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1450,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"501:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"494:8:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332304361707065643a206361702069732030","id":1452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"504:23:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_073f3193e2b9c9099973df1adea790edf33994edcd3f57beae2487f3c5bd8828","typeString":"literal_string \"ERC20Capped: cap is 0\""},"value":"ERC20Capped: cap is 0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_073f3193e2b9c9099973df1adea790edf33994edcd3f57beae2487f3c5bd8828","typeString":"literal_string \"ERC20Capped: cap is 0\""}],"id":1448,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"486:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"486:42:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1454,"nodeType":"ExpressionStatement","src":"486:42:8"},{"expression":{"id":1457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1455,"name":"_cap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"538:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1456,"name":"cap_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1445,"src":"545:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"538:11:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1458,"nodeType":"ExpressionStatement","src":"538:11:8"}]},"documentation":{"id":1443,"nodeType":"StructuredDocumentation","src":"316:129:8","text":" @dev Sets the value of the `cap`. This value is immutable, it can only be\n set once during construction."},"id":1460,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1445,"mutability":"mutable","name":"cap_","nameLocation":"470:4:8","nodeType":"VariableDeclaration","scope":1460,"src":"462:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1444,"name":"uint256","nodeType":"ElementaryTypeName","src":"462:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"461:14:8"},"returnParameters":{"id":1447,"nodeType":"ParameterList","parameters":[],"src":"476:0:8"},"scope":1499,"src":"450:106:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1468,"nodeType":"Block","src":"688:28:8","statements":[{"expression":{"id":1466,"name":"_cap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"705:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1465,"id":1467,"nodeType":"Return","src":"698:11:8"}]},"documentation":{"id":1461,"nodeType":"StructuredDocumentation","src":"562:68:8","text":" @dev Returns the cap on the token's total supply."},"functionSelector":"355274ea","id":1469,"implemented":true,"kind":"function","modifiers":[],"name":"cap","nameLocation":"644:3:8","nodeType":"FunctionDefinition","parameters":{"id":1462,"nodeType":"ParameterList","parameters":[],"src":"647:2:8"},"returnParameters":{"id":1465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1464,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1469,"src":"679:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1463,"name":"uint256","nodeType":"ElementaryTypeName","src":"679:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"678:9:8"},"scope":1499,"src":"635:81:8","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1129],"body":{"id":1497,"nodeType":"Block","src":"843:130:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1479,"name":"ERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"861:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ERC20_$1312_$","typeString":"type(contract ERC20)"}},"id":1480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"totalSupply","nodeType":"MemberAccess","referencedDeclaration":740,"src":"861:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"861:19:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1482,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"883:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"861:28:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1484,"name":"cap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"893:3:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"893:5:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"861:37:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332304361707065643a20636170206578636565646564","id":1487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"900:27:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f","typeString":"literal_string \"ERC20Capped: cap exceeded\""},"value":"ERC20Capped: cap exceeded"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f","typeString":"literal_string \"ERC20Capped: cap exceeded\""}],"id":1478,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"853:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"853:75:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1489,"nodeType":"ExpressionStatement","src":"853:75:8"},{"expression":{"arguments":[{"id":1493,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"950:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1494,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1474,"src":"959:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1490,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"938:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_ERC20Capped_$1499_$","typeString":"type(contract super ERC20Capped)"}},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_mint","nodeType":"MemberAccess","referencedDeclaration":1129,"src":"938:11:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"938:28:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1496,"nodeType":"ExpressionStatement","src":"938:28:8"}]},"documentation":{"id":1470,"nodeType":"StructuredDocumentation","src":"722:42:8","text":" @dev See {ERC20-_mint}."},"id":1498,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"778:5:8","nodeType":"FunctionDefinition","overrides":{"id":1476,"nodeType":"OverrideSpecifier","overrides":[],"src":"834:8:8"},"parameters":{"id":1475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1472,"mutability":"mutable","name":"account","nameLocation":"792:7:8","nodeType":"VariableDeclaration","scope":1498,"src":"784:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1471,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1474,"mutability":"mutable","name":"amount","nameLocation":"809:6:8","nodeType":"VariableDeclaration","scope":1498,"src":"801:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1473,"name":"uint256","nodeType":"ElementaryTypeName","src":"801:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"783:33:8"},"returnParameters":{"id":1477,"nodeType":"ParameterList","parameters":[],"src":"843:0:8"},"scope":1499,"src":"769:204:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1500,"src":"234:741:8","usedErrors":[]}],"src":"107:869:8"},"id":8},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1390],"IERC20Metadata":[1524]},"id":1525,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1501,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:9"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1502,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1525,"sourceUnit":1391,"src":"135:23:9","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1504,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1390,"src":"305:6:9"},"id":1505,"nodeType":"InheritanceSpecifier","src":"305:6:9"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1503,"nodeType":"StructuredDocumentation","src":"160:116:9","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":1524,"linearizedBaseContracts":[1524,1390],"name":"IERC20Metadata","nameLocation":"287:14:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1506,"nodeType":"StructuredDocumentation","src":"318:54:9","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1511,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:9","nodeType":"FunctionDefinition","parameters":{"id":1507,"nodeType":"ParameterList","parameters":[],"src":"390:2:9"},"returnParameters":{"id":1510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1509,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1511,"src":"416:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1508,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:9"},"scope":1524,"src":"377:54:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1512,"nodeType":"StructuredDocumentation","src":"437:56:9","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1517,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:9","nodeType":"FunctionDefinition","parameters":{"id":1513,"nodeType":"ParameterList","parameters":[],"src":"513:2:9"},"returnParameters":{"id":1516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1515,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1517,"src":"539:13:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1514,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:9"},"scope":1524,"src":"498:56:9","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1518,"nodeType":"StructuredDocumentation","src":"560:65:9","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1523,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:9","nodeType":"FunctionDefinition","parameters":{"id":1519,"nodeType":"ParameterList","parameters":[],"src":"647:2:9"},"returnParameters":{"id":1522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1521,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1523,"src":"673:5:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1520,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:9","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:9"},"scope":1524,"src":"630:50:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1525,"src":"277:405:9","usedErrors":[]}],"src":"110:573:9"},"id":9},"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol","exportedSymbols":{"Context":[1754],"Counters":[1828],"ECDSA":[2442],"EIP712":[2596],"ERC20":[1312],"ERC20Permit":[1696],"IERC20":[1390],"IERC20Metadata":[1524],"IERC20Permit":[1732],"Strings":[2054]},"id":1697,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1526,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"128:23:10"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","file":"./draft-IERC20Permit.sol","id":1527,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1697,"sourceUnit":1733,"src":"153:34:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"../ERC20.sol","id":1528,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1697,"sourceUnit":1313,"src":"188:22:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol","file":"../../../utils/cryptography/draft-EIP712.sol","id":1529,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1697,"sourceUnit":2597,"src":"211:54:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"../../../utils/cryptography/ECDSA.sol","id":1530,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1697,"sourceUnit":2443,"src":"266:47:10","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","file":"../../../utils/Counters.sol","id":1531,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1697,"sourceUnit":1829,"src":"314:37:10","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1533,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":1312,"src":"904:5:10"},"id":1534,"nodeType":"InheritanceSpecifier","src":"904:5:10"},{"baseName":{"id":1535,"name":"IERC20Permit","nodeType":"IdentifierPath","referencedDeclaration":1732,"src":"911:12:10"},"id":1536,"nodeType":"InheritanceSpecifier","src":"911:12:10"},{"baseName":{"id":1537,"name":"EIP712","nodeType":"IdentifierPath","referencedDeclaration":2596,"src":"925:6:10"},"id":1538,"nodeType":"InheritanceSpecifier","src":"925:6:10"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","documentation":{"id":1532,"nodeType":"StructuredDocumentation","src":"353:517:10","text":" @dev Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n _Available since v3.4._"},"fullyImplemented":false,"id":1696,"linearizedBaseContracts":[1696,2596,1732,1312,1524,1390,1754],"name":"ERC20Permit","nameLocation":"889:11:10","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1542,"libraryName":{"id":1539,"name":"Counters","nodeType":"IdentifierPath","referencedDeclaration":1828,"src":"944:8:10"},"nodeType":"UsingForDirective","src":"938:36:10","typeName":{"id":1541,"nodeType":"UserDefinedTypeName","pathNode":{"id":1540,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":1760,"src":"957:16:10"},"referencedDeclaration":1760,"src":"957:16:10","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1760_storage_ptr","typeString":"struct Counters.Counter"}}},{"constant":false,"id":1547,"mutability":"mutable","name":"_nonces","nameLocation":"1025:7:10","nodeType":"VariableDeclaration","scope":1696,"src":"980:52:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$1760_storage_$","typeString":"mapping(address => struct Counters.Counter)"},"typeName":{"id":1546,"keyType":{"id":1543,"name":"address","nodeType":"ElementaryTypeName","src":"988:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"980:36:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$1760_storage_$","typeString":"mapping(address => struct Counters.Counter)"},"valueType":{"id":1545,"nodeType":"UserDefinedTypeName","pathNode":{"id":1544,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":1760,"src":"999:16:10"},"referencedDeclaration":1760,"src":"999:16:10","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1760_storage_ptr","typeString":"struct Counters.Counter"}}},"visibility":"private"},{"constant":true,"id":1552,"mutability":"constant","name":"_PERMIT_TYPEHASH","nameLocation":"1116:16:10","nodeType":"VariableDeclaration","scope":1696,"src":"1091:147:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1548,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1091:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5065726d69742861646472657373206f776e65722c61646472657373207370656e6465722c75696e743235362076616c75652c75696e74323536206e6f6e63652c75696e7432353620646561646c696e6529","id":1550,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1153:84:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""},"value":"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9","typeString":"literal_string \"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\""}],"id":1549,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1143:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1551,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1143:95:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"documentation":{"id":1553,"nodeType":"StructuredDocumentation","src":"1244:254:10","text":" @dev In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`.\n However, to ensure consistency with the upgradeable transpiler, we will continue\n to reserve a slot.\n @custom:oz-renamed-from _PERMIT_TYPEHASH"},"id":1555,"mutability":"mutable","name":"_PERMIT_TYPEHASH_DEPRECATED_SLOT","nameLocation":"1571:32:10","nodeType":"VariableDeclaration","scope":1696,"src":"1555:48:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1554,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1555:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":1565,"nodeType":"Block","src":"1885:2:10","statements":[]},"documentation":{"id":1556,"nodeType":"StructuredDocumentation","src":"1610:220:10","text":" @dev Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\"1\"`.\n It's a good idea to use the same `name` that is defined as the ERC20 token name."},"id":1566,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1561,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1558,"src":"1874:4:10","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"31","id":1562,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1880:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"id":1563,"kind":"baseConstructorSpecifier","modifierName":{"id":1560,"name":"EIP712","nodeType":"IdentifierPath","referencedDeclaration":2596,"src":"1867:6:10"},"nodeType":"ModifierInvocation","src":"1867:17:10"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1558,"mutability":"mutable","name":"name","nameLocation":"1861:4:10","nodeType":"VariableDeclaration","scope":1566,"src":"1847:18:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1557,"name":"string","nodeType":"ElementaryTypeName","src":"1847:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1846:20:10"},"returnParameters":{"id":1564,"nodeType":"ParameterList","parameters":[],"src":"1885:0:10"},"scope":1696,"src":"1835:52:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1717],"body":{"id":1638,"nodeType":"Block","src":"2146:428:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1586,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2164:5:10","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1587,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"2164:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":1588,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"2183:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2164:27:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305065726d69743a206578706972656420646561646c696e65","id":1590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:31:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","typeString":"literal_string \"ERC20Permit: expired deadline\""},"value":"ERC20Permit: expired deadline"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd","typeString":"literal_string \"ERC20Permit: expired deadline\""}],"id":1585,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2156:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2156:69:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1592,"nodeType":"ExpressionStatement","src":"2156:69:10"},{"assignments":[1594],"declarations":[{"constant":false,"id":1594,"mutability":"mutable","name":"structHash","nameLocation":"2244:10:10","nodeType":"VariableDeclaration","scope":1638,"src":"2236:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1593,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2236:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1608,"initialValue":{"arguments":[{"arguments":[{"id":1598,"name":"_PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1552,"src":"2278:16:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1599,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"2296:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1600,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"2303:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1601,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"2312:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":1603,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"2329:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1602,"name":"_useNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"2319:9:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$","typeString":"function (address) returns (uint256)"}},"id":1604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2319:16:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1605,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1575,"src":"2337:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1596,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2267:3:10","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1597,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"2267:10:10","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1606,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2267:79:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1595,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2257:9:10","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2257:90:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2236:111:10"},{"assignments":[1610],"declarations":[{"constant":false,"id":1610,"mutability":"mutable","name":"hash","nameLocation":"2366:4:10","nodeType":"VariableDeclaration","scope":1638,"src":"2358:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1609,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2358:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1614,"initialValue":{"arguments":[{"id":1612,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1594,"src":"2390:10:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1611,"name":"_hashTypedDataV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2595,"src":"2373:16:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2373:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2358:43:10"},{"assignments":[1616],"declarations":[{"constant":false,"id":1616,"mutability":"mutable","name":"signer","nameLocation":"2420:6:10","nodeType":"VariableDeclaration","scope":1638,"src":"2412:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1615,"name":"address","nodeType":"ElementaryTypeName","src":"2412:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":1624,"initialValue":{"arguments":[{"id":1619,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1610,"src":"2443:4:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1620,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1577,"src":"2449:1:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1621,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"2452:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1622,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1581,"src":"2455:1:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1617,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"2429:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$2442_$","typeString":"type(library ECDSA)"}},"id":1618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"recover","nodeType":"MemberAccess","referencedDeclaration":2382,"src":"2429:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2429:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2412:45:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1626,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1616,"src":"2475:6:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1627,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"2485:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2475:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332305065726d69743a20696e76616c6964207369676e6174757265","id":1629,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2492:32:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","typeString":"literal_string \"ERC20Permit: invalid signature\""},"value":"ERC20Permit: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124","typeString":"literal_string \"ERC20Permit: invalid signature\""}],"id":1625,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2467:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2467:58:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1631,"nodeType":"ExpressionStatement","src":"2467:58:10"},{"expression":{"arguments":[{"id":1633,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1569,"src":"2545:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1634,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"2552:7:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"2561:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1632,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"2536:8:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2536:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1637,"nodeType":"ExpressionStatement","src":"2536:31:10"}]},"documentation":{"id":1567,"nodeType":"StructuredDocumentation","src":"1893:50:10","text":" @dev See {IERC20Permit-permit}."},"functionSelector":"d505accf","id":1639,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1957:6:10","nodeType":"FunctionDefinition","overrides":{"id":1583,"nodeType":"OverrideSpecifier","overrides":[],"src":"2137:8:10"},"parameters":{"id":1582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1569,"mutability":"mutable","name":"owner","nameLocation":"1981:5:10","nodeType":"VariableDeclaration","scope":1639,"src":"1973:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1568,"name":"address","nodeType":"ElementaryTypeName","src":"1973:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1571,"mutability":"mutable","name":"spender","nameLocation":"2004:7:10","nodeType":"VariableDeclaration","scope":1639,"src":"1996:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1570,"name":"address","nodeType":"ElementaryTypeName","src":"1996:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1573,"mutability":"mutable","name":"value","nameLocation":"2029:5:10","nodeType":"VariableDeclaration","scope":1639,"src":"2021:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1572,"name":"uint256","nodeType":"ElementaryTypeName","src":"2021:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1575,"mutability":"mutable","name":"deadline","nameLocation":"2052:8:10","nodeType":"VariableDeclaration","scope":1639,"src":"2044:16:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1574,"name":"uint256","nodeType":"ElementaryTypeName","src":"2044:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1577,"mutability":"mutable","name":"v","nameLocation":"2076:1:10","nodeType":"VariableDeclaration","scope":1639,"src":"2070:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1576,"name":"uint8","nodeType":"ElementaryTypeName","src":"2070:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1579,"mutability":"mutable","name":"r","nameLocation":"2095:1:10","nodeType":"VariableDeclaration","scope":1639,"src":"2087:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1578,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2087:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1581,"mutability":"mutable","name":"s","nameLocation":"2114:1:10","nodeType":"VariableDeclaration","scope":1639,"src":"2106:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1580,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2106:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1963:158:10"},"returnParameters":{"id":1584,"nodeType":"ParameterList","parameters":[],"src":"2146:0:10"},"scope":1696,"src":"1948:626:10","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1725],"body":{"id":1654,"nodeType":"Block","src":"2713:48:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":1648,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"2730:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$1760_storage_$","typeString":"mapping(address => struct Counters.Counter storage ref)"}},"id":1650,"indexExpression":{"id":1649,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"2738:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2730:14:10","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1760_storage","typeString":"struct Counters.Counter storage ref"}},"id":1651,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"current","nodeType":"MemberAccess","referencedDeclaration":1772,"src":"2730:22:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$1760_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1760_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":1652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2730:24:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1647,"id":1653,"nodeType":"Return","src":"2723:31:10"}]},"documentation":{"id":1640,"nodeType":"StructuredDocumentation","src":"2580:50:10","text":" @dev See {IERC20Permit-nonces}."},"functionSelector":"7ecebe00","id":1655,"implemented":true,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"2644:6:10","nodeType":"FunctionDefinition","overrides":{"id":1644,"nodeType":"OverrideSpecifier","overrides":[],"src":"2686:8:10"},"parameters":{"id":1643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1642,"mutability":"mutable","name":"owner","nameLocation":"2659:5:10","nodeType":"VariableDeclaration","scope":1655,"src":"2651:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1641,"name":"address","nodeType":"ElementaryTypeName","src":"2651:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2650:15:10"},"returnParameters":{"id":1647,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1646,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1655,"src":"2704:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1645,"name":"uint256","nodeType":"ElementaryTypeName","src":"2704:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2703:9:10"},"scope":1696,"src":"2635:126:10","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1731],"body":{"id":1665,"nodeType":"Block","src":"2954:44:10","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":1662,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2552,"src":"2971:18:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2971:20:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1661,"id":1664,"nodeType":"Return","src":"2964:27:10"}]},"documentation":{"id":1656,"nodeType":"StructuredDocumentation","src":"2767:60:10","text":" @dev See {IERC20Permit-DOMAIN_SEPARATOR}."},"functionSelector":"3644e515","id":1666,"implemented":true,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2894:16:10","nodeType":"FunctionDefinition","overrides":{"id":1658,"nodeType":"OverrideSpecifier","overrides":[],"src":"2927:8:10"},"parameters":{"id":1657,"nodeType":"ParameterList","parameters":[],"src":"2910:2:10"},"returnParameters":{"id":1661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1660,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1666,"src":"2945:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1659,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2945:7:10","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2944:9:10"},"scope":1696,"src":"2885:113:10","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1694,"nodeType":"Block","src":"3206:126:10","statements":[{"assignments":[1678],"declarations":[{"constant":false,"id":1678,"mutability":"mutable","name":"nonce","nameLocation":"3241:5:10","nodeType":"VariableDeclaration","scope":1694,"src":"3216:30:10","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1760_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1677,"nodeType":"UserDefinedTypeName","pathNode":{"id":1676,"name":"Counters.Counter","nodeType":"IdentifierPath","referencedDeclaration":1760,"src":"3216:16:10"},"referencedDeclaration":1760,"src":"3216:16:10","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1760_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"id":1682,"initialValue":{"baseExpression":{"id":1679,"name":"_nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"3249:7:10","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Counter_$1760_storage_$","typeString":"mapping(address => struct Counters.Counter storage ref)"}},"id":1681,"indexExpression":{"id":1680,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1669,"src":"3257:5:10","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3249:14:10","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1760_storage","typeString":"struct Counters.Counter storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3216:47:10"},{"expression":{"id":1687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1683,"name":"current","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1672,"src":"3273:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1684,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"3283:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1760_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1685,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"current","nodeType":"MemberAccess","referencedDeclaration":1772,"src":"3283:13:10","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Counter_$1760_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1760_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer) view returns (uint256)"}},"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3283:15:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3273:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1688,"nodeType":"ExpressionStatement","src":"3273:25:10"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1689,"name":"nonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1678,"src":"3308:5:10","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1760_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1691,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"increment","nodeType":"MemberAccess","referencedDeclaration":1786,"src":"3308:15:10","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Counter_$1760_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1760_storage_ptr_$","typeString":"function (struct Counters.Counter storage pointer)"}},"id":1692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3308:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1693,"nodeType":"ExpressionStatement","src":"3308:17:10"}]},"documentation":{"id":1667,"nodeType":"StructuredDocumentation","src":"3004:120:10","text":" @dev \"Consume a nonce\": return the current value and increment.\n _Available since v4.1._"},"id":1695,"implemented":true,"kind":"function","modifiers":[],"name":"_useNonce","nameLocation":"3138:9:10","nodeType":"FunctionDefinition","parameters":{"id":1670,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1669,"mutability":"mutable","name":"owner","nameLocation":"3156:5:10","nodeType":"VariableDeclaration","scope":1695,"src":"3148:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1668,"name":"address","nodeType":"ElementaryTypeName","src":"3148:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3147:15:10"},"returnParameters":{"id":1673,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1672,"mutability":"mutable","name":"current","nameLocation":"3197:7:10","nodeType":"VariableDeclaration","scope":1695,"src":"3189:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1671,"name":"uint256","nodeType":"ElementaryTypeName","src":"3189:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3188:17:10"},"scope":1696,"src":"3129:203:10","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1697,"src":"871:2463:10","usedErrors":[]}],"src":"128:3207:10"},"id":10},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol","exportedSymbols":{"IERC20Permit":[1732]},"id":1733,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1698,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"114:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1699,"nodeType":"StructuredDocumentation","src":"139:480:11","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":1732,"linearizedBaseContracts":[1732],"name":"IERC20Permit","nameLocation":"630:12:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1700,"nodeType":"StructuredDocumentation","src":"649:792:11","text":" @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":1717,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1455:6:11","nodeType":"FunctionDefinition","parameters":{"id":1715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1702,"mutability":"mutable","name":"owner","nameLocation":"1479:5:11","nodeType":"VariableDeclaration","scope":1717,"src":"1471:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1701,"name":"address","nodeType":"ElementaryTypeName","src":"1471:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1704,"mutability":"mutable","name":"spender","nameLocation":"1502:7:11","nodeType":"VariableDeclaration","scope":1717,"src":"1494:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1703,"name":"address","nodeType":"ElementaryTypeName","src":"1494:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1706,"mutability":"mutable","name":"value","nameLocation":"1527:5:11","nodeType":"VariableDeclaration","scope":1717,"src":"1519:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1705,"name":"uint256","nodeType":"ElementaryTypeName","src":"1519:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1708,"mutability":"mutable","name":"deadline","nameLocation":"1550:8:11","nodeType":"VariableDeclaration","scope":1717,"src":"1542:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1707,"name":"uint256","nodeType":"ElementaryTypeName","src":"1542:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1710,"mutability":"mutable","name":"v","nameLocation":"1574:1:11","nodeType":"VariableDeclaration","scope":1717,"src":"1568:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1709,"name":"uint8","nodeType":"ElementaryTypeName","src":"1568:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1712,"mutability":"mutable","name":"r","nameLocation":"1593:1:11","nodeType":"VariableDeclaration","scope":1717,"src":"1585:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1711,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1585:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1714,"mutability":"mutable","name":"s","nameLocation":"1612:1:11","nodeType":"VariableDeclaration","scope":1717,"src":"1604:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1713,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1604:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1461:158:11"},"returnParameters":{"id":1716,"nodeType":"ParameterList","parameters":[],"src":"1628:0:11"},"scope":1732,"src":"1446:183:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1718,"nodeType":"StructuredDocumentation","src":"1635:294:11","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1725,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1943:6:11","nodeType":"FunctionDefinition","parameters":{"id":1721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1720,"mutability":"mutable","name":"owner","nameLocation":"1958:5:11","nodeType":"VariableDeclaration","scope":1725,"src":"1950:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1719,"name":"address","nodeType":"ElementaryTypeName","src":"1950:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1949:15:11"},"returnParameters":{"id":1724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1723,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1725,"src":"1988:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1722,"name":"uint256","nodeType":"ElementaryTypeName","src":"1988:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1987:9:11"},"scope":1732,"src":"1934:63:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1726,"nodeType":"StructuredDocumentation","src":"2003:128:11","text":" @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."},"functionSelector":"3644e515","id":1731,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2198:16:11","nodeType":"FunctionDefinition","parameters":{"id":1727,"nodeType":"ParameterList","parameters":[],"src":"2214:2:11"},"returnParameters":{"id":1730,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1729,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1731,"src":"2240:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1728,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2240:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2239:9:11"},"scope":1732,"src":"2189:60:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1733,"src":"620:1631:11","usedErrors":[]}],"src":"114:2138:11"},"id":11},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1754]},"id":1755,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1734,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:12"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1735,"nodeType":"StructuredDocumentation","src":"111:496:12","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1754,"linearizedBaseContracts":[1754],"name":"Context","nameLocation":"626:7:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":1743,"nodeType":"Block","src":"702:34:12","statements":[{"expression":{"expression":{"id":1740,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1739,"id":1742,"nodeType":"Return","src":"712:17:12"}]},"id":1744,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:12","nodeType":"FunctionDefinition","parameters":{"id":1736,"nodeType":"ParameterList","parameters":[],"src":"659:2:12"},"returnParameters":{"id":1739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1738,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1744,"src":"693:7:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1737,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:12"},"scope":1754,"src":"640:96:12","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1752,"nodeType":"Block","src":"809:32:12","statements":[{"expression":{"expression":{"id":1749,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:12","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1750,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:12","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1748,"id":1751,"nodeType":"Return","src":"819:15:12"}]},"id":1753,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:12","nodeType":"FunctionDefinition","parameters":{"id":1745,"nodeType":"ParameterList","parameters":[],"src":"759:2:12"},"returnParameters":{"id":1748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1747,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1753,"src":"793:14:12","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1746,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:12","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:12"},"scope":1754,"src":"742:99:12","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1755,"src":"608:235:12","usedErrors":[]}],"src":"86:758:12"},"id":12},"@openzeppelin/contracts/utils/Counters.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Counters.sol","exportedSymbols":{"Counters":[1828]},"id":1829,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1756,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"87:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"Counters","contractDependencies":[],"contractKind":"library","documentation":{"id":1757,"nodeType":"StructuredDocumentation","src":"112:311:13","text":" @title Counters\n @author Matt Condon (@shrugs)\n @dev Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number\n of elements in a mapping, issuing ERC721 ids, or counting request ids.\n Include with `using Counters for Counters.Counter;`"},"fullyImplemented":true,"id":1828,"linearizedBaseContracts":[1828],"name":"Counters","nameLocation":"432:8:13","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Counters.Counter","id":1760,"members":[{"constant":false,"id":1759,"mutability":"mutable","name":"_value","nameLocation":"794:6:13","nodeType":"VariableDeclaration","scope":1760,"src":"786:14:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1758,"name":"uint256","nodeType":"ElementaryTypeName","src":"786:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Counter","nameLocation":"454:7:13","nodeType":"StructDefinition","scope":1828,"src":"447:374:13","visibility":"public"},{"body":{"id":1771,"nodeType":"Block","src":"901:38:13","statements":[{"expression":{"expression":{"id":1768,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1763,"src":"918:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1760_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1769,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1759,"src":"918:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1767,"id":1770,"nodeType":"Return","src":"911:21:13"}]},"id":1772,"implemented":true,"kind":"function","modifiers":[],"name":"current","nameLocation":"836:7:13","nodeType":"FunctionDefinition","parameters":{"id":1764,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1763,"mutability":"mutable","name":"counter","nameLocation":"860:7:13","nodeType":"VariableDeclaration","scope":1772,"src":"844:23:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1760_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1762,"nodeType":"UserDefinedTypeName","pathNode":{"id":1761,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":1760,"src":"844:7:13"},"referencedDeclaration":1760,"src":"844:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1760_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"843:25:13"},"returnParameters":{"id":1767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1766,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1772,"src":"892:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1765,"name":"uint256","nodeType":"ElementaryTypeName","src":"892:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"891:9:13"},"scope":1828,"src":"827:112:13","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1785,"nodeType":"Block","src":"998:70:13","statements":[{"id":1784,"nodeType":"UncheckedBlock","src":"1008:54:13","statements":[{"expression":{"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1778,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1775,"src":"1032:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1760_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1780,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1759,"src":"1032:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1050:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1032:19:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1783,"nodeType":"ExpressionStatement","src":"1032:19:13"}]}]},"id":1786,"implemented":true,"kind":"function","modifiers":[],"name":"increment","nameLocation":"954:9:13","nodeType":"FunctionDefinition","parameters":{"id":1776,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1775,"mutability":"mutable","name":"counter","nameLocation":"980:7:13","nodeType":"VariableDeclaration","scope":1786,"src":"964:23:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1760_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1774,"nodeType":"UserDefinedTypeName","pathNode":{"id":1773,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":1760,"src":"964:7:13"},"referencedDeclaration":1760,"src":"964:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1760_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"963:25:13"},"returnParameters":{"id":1777,"nodeType":"ParameterList","parameters":[],"src":"998:0:13"},"scope":1828,"src":"945:123:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1813,"nodeType":"Block","src":"1127:176:13","statements":[{"assignments":[1793],"declarations":[{"constant":false,"id":1793,"mutability":"mutable","name":"value","nameLocation":"1145:5:13","nodeType":"VariableDeclaration","scope":1813,"src":"1137:13:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1792,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1796,"initialValue":{"expression":{"id":1794,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"1153:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1760_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1795,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1759,"src":"1153:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1137:30:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1798,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"1185:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1193:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1185:9:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f756e7465723a2064656372656d656e74206f766572666c6f77","id":1801,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1196:29:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""},"value":"Counter: decrement overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1dfd0d5389474d871b8e8929aab9d4def041f55f90f625754fb5f9a9ba08af6f","typeString":"literal_string \"Counter: decrement overflow\""}],"id":1797,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1177:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1802,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1177:49:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1803,"nodeType":"ExpressionStatement","src":"1177:49:13"},{"id":1812,"nodeType":"UncheckedBlock","src":"1236:61:13","statements":[{"expression":{"id":1810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1804,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1789,"src":"1260:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1760_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1806,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1759,"src":"1260:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1807,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1793,"src":"1277:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1285:1:13","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1277:9:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1260:26:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1811,"nodeType":"ExpressionStatement","src":"1260:26:13"}]}]},"id":1814,"implemented":true,"kind":"function","modifiers":[],"name":"decrement","nameLocation":"1083:9:13","nodeType":"FunctionDefinition","parameters":{"id":1790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1789,"mutability":"mutable","name":"counter","nameLocation":"1109:7:13","nodeType":"VariableDeclaration","scope":1814,"src":"1093:23:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1760_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1788,"nodeType":"UserDefinedTypeName","pathNode":{"id":1787,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":1760,"src":"1093:7:13"},"referencedDeclaration":1760,"src":"1093:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1760_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1092:25:13"},"returnParameters":{"id":1791,"nodeType":"ParameterList","parameters":[],"src":"1127:0:13"},"scope":1828,"src":"1074:229:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1826,"nodeType":"Block","src":"1358:35:13","statements":[{"expression":{"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1820,"name":"counter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1817,"src":"1368:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1760_storage_ptr","typeString":"struct Counters.Counter storage pointer"}},"id":1822,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":1759,"src":"1368:14:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1385:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1368:18:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1825,"nodeType":"ExpressionStatement","src":"1368:18:13"}]},"id":1827,"implemented":true,"kind":"function","modifiers":[],"name":"reset","nameLocation":"1318:5:13","nodeType":"FunctionDefinition","parameters":{"id":1818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1817,"mutability":"mutable","name":"counter","nameLocation":"1340:7:13","nodeType":"VariableDeclaration","scope":1827,"src":"1324:23:13","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1760_storage_ptr","typeString":"struct Counters.Counter"},"typeName":{"id":1816,"nodeType":"UserDefinedTypeName","pathNode":{"id":1815,"name":"Counter","nodeType":"IdentifierPath","referencedDeclaration":1760,"src":"1324:7:13"},"referencedDeclaration":1760,"src":"1324:7:13","typeDescriptions":{"typeIdentifier":"t_struct$_Counter_$1760_storage_ptr","typeString":"struct Counters.Counter"}},"visibility":"internal"}],"src":"1323:25:13"},"returnParameters":{"id":1819,"nodeType":"ParameterList","parameters":[],"src":"1358:0:13"},"scope":1828,"src":"1309:84:13","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1829,"src":"424:971:13","usedErrors":[]}],"src":"87:1309:13"},"id":13},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Strings":[2054]},"id":2055,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1830,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:14"},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1831,"nodeType":"StructuredDocumentation","src":"126:34:14","text":" @dev String operations."},"fullyImplemented":true,"id":2054,"linearizedBaseContracts":[2054],"name":"Strings","nameLocation":"169:7:14","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1834,"mutability":"constant","name":"_HEX_SYMBOLS","nameLocation":"208:12:14","nodeType":"VariableDeclaration","scope":2054,"src":"183:58:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1832,"name":"bytes16","nodeType":"ElementaryTypeName","src":"183:7:14","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"223:18:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1837,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"270:15:14","nodeType":"VariableDeclaration","scope":2054,"src":"247:43:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1835,"name":"uint8","nodeType":"ElementaryTypeName","src":"247:5:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"288:2:14","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":1915,"nodeType":"Block","src":"463:632:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1845,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"665:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"674:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"665:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1851,"nodeType":"IfStatement","src":"661:51:14","trueBody":{"id":1850,"nodeType":"Block","src":"677:35:14","statements":[{"expression":{"hexValue":"30","id":1848,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"698:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"functionReturnParameters":1844,"id":1849,"nodeType":"Return","src":"691:10:14"}]}},{"assignments":[1853],"declarations":[{"constant":false,"id":1853,"mutability":"mutable","name":"temp","nameLocation":"729:4:14","nodeType":"VariableDeclaration","scope":1915,"src":"721:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1852,"name":"uint256","nodeType":"ElementaryTypeName","src":"721:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1855,"initialValue":{"id":1854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"736:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"721:20:14"},{"assignments":[1857],"declarations":[{"constant":false,"id":1857,"mutability":"mutable","name":"digits","nameLocation":"759:6:14","nodeType":"VariableDeclaration","scope":1915,"src":"751:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1856,"name":"uint256","nodeType":"ElementaryTypeName","src":"751:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1858,"nodeType":"VariableDeclarationStatement","src":"751:14:14"},{"body":{"id":1869,"nodeType":"Block","src":"793:57:14","statements":[{"expression":{"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"807:8:14","subExpression":{"id":1862,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"807:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1864,"nodeType":"ExpressionStatement","src":"807:8:14"},{"expression":{"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1865,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"829:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"837:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"829:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1868,"nodeType":"ExpressionStatement","src":"829:10:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1859,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"782:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"790:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"782:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1870,"nodeType":"WhileStatement","src":"775:75:14"},{"assignments":[1872],"declarations":[{"constant":false,"id":1872,"mutability":"mutable","name":"buffer","nameLocation":"872:6:14","nodeType":"VariableDeclaration","scope":1915,"src":"859:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1871,"name":"bytes","nodeType":"ElementaryTypeName","src":"859:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1877,"initialValue":{"arguments":[{"id":1875,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"891:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"881:9:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1873,"name":"bytes","nodeType":"ElementaryTypeName","src":"885:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"881:17:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"859:39:14"},{"body":{"id":1908,"nodeType":"Block","src":"927:131:14","statements":[{"expression":{"id":1883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1881,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"941:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":1882,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"941:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1884,"nodeType":"ExpressionStatement","src":"941:11:14"},{"expression":{"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1885,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"966:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1887,"indexExpression":{"id":1886,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1857,"src":"973:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"966:14:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":1892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"996:2:14","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1895,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"1009:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3130","id":1896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1017:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1009:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1001:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1893,"name":"uint256","nodeType":"ElementaryTypeName","src":"1001:7:14","typeDescriptions":{}}},"id":1898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1001:19:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"996:24:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1891,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"990:5:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":1890,"name":"uint8","nodeType":"ElementaryTypeName","src":"990:5:14","typeDescriptions":{}}},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"990:31:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1889,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"983:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":1888,"name":"bytes1","nodeType":"ElementaryTypeName","src":"983:6:14","typeDescriptions":{}}},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"983:39:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"966:56:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1903,"nodeType":"ExpressionStatement","src":"966:56:14"},{"expression":{"id":1906,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"1036:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:2:14","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1036:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1907,"nodeType":"ExpressionStatement","src":"1036:11:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1878,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1840,"src":"915:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"924:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"915:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1909,"nodeType":"WhileStatement","src":"908:150:14"},{"expression":{"arguments":[{"id":1912,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1872,"src":"1081:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1911,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1074:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1910,"name":"string","nodeType":"ElementaryTypeName","src":"1074:6:14","typeDescriptions":{}}},"id":1913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1074:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1844,"id":1914,"nodeType":"Return","src":"1067:21:14"}]},"documentation":{"id":1838,"nodeType":"StructuredDocumentation","src":"297:90:14","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1916,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"401:8:14","nodeType":"FunctionDefinition","parameters":{"id":1841,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1840,"mutability":"mutable","name":"value","nameLocation":"418:5:14","nodeType":"VariableDeclaration","scope":1916,"src":"410:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1839,"name":"uint256","nodeType":"ElementaryTypeName","src":"410:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"409:15:14"},"returnParameters":{"id":1844,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1843,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1916,"src":"448:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1842,"name":"string","nodeType":"ElementaryTypeName","src":"448:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"447:15:14"},"scope":2054,"src":"392:703:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1956,"nodeType":"Block","src":"1274:255:14","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1924,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"1288:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1925,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1297:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1288:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1930,"nodeType":"IfStatement","src":"1284:54:14","trueBody":{"id":1929,"nodeType":"Block","src":"1300:38:14","statements":[{"expression":{"hexValue":"30783030","id":1927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1321:6:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4","typeString":"literal_string \"0x00\""},"value":"0x00"},"functionReturnParameters":1923,"id":1928,"nodeType":"Return","src":"1314:13:14"}]}},{"assignments":[1932],"declarations":[{"constant":false,"id":1932,"mutability":"mutable","name":"temp","nameLocation":"1355:4:14","nodeType":"VariableDeclaration","scope":1956,"src":"1347:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1931,"name":"uint256","nodeType":"ElementaryTypeName","src":"1347:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1934,"initialValue":{"id":1933,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"1362:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1347:20:14"},{"assignments":[1936],"declarations":[{"constant":false,"id":1936,"mutability":"mutable","name":"length","nameLocation":"1385:6:14","nodeType":"VariableDeclaration","scope":1956,"src":"1377:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1935,"name":"uint256","nodeType":"ElementaryTypeName","src":"1377:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1938,"initialValue":{"hexValue":"30","id":1937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1394:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1377:18:14"},{"body":{"id":1949,"nodeType":"Block","src":"1423:57:14","statements":[{"expression":{"id":1943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1437:8:14","subExpression":{"id":1942,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"1437:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1944,"nodeType":"ExpressionStatement","src":"1437:8:14"},{"expression":{"id":1947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1945,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"1459:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1468:1:14","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"1459:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1948,"nodeType":"ExpressionStatement","src":"1459:10:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1939,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1932,"src":"1412:4:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1940,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1420:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1412:9:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1950,"nodeType":"WhileStatement","src":"1405:75:14"},{"expression":{"arguments":[{"id":1952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"1508:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1953,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1936,"src":"1515:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1951,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1957,2033,2053],"referencedDeclaration":2033,"src":"1496:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1496:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1923,"id":1955,"nodeType":"Return","src":"1489:33:14"}]},"documentation":{"id":1917,"nodeType":"StructuredDocumentation","src":"1101:94:14","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1957,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1209:11:14","nodeType":"FunctionDefinition","parameters":{"id":1920,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1919,"mutability":"mutable","name":"value","nameLocation":"1229:5:14","nodeType":"VariableDeclaration","scope":1957,"src":"1221:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1918,"name":"uint256","nodeType":"ElementaryTypeName","src":"1221:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1220:15:14"},"returnParameters":{"id":1923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1922,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1957,"src":"1259:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1921,"name":"string","nodeType":"ElementaryTypeName","src":"1259:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1258:15:14"},"scope":2054,"src":"1200:329:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2032,"nodeType":"Block","src":"1742:351:14","statements":[{"assignments":[1968],"declarations":[{"constant":false,"id":1968,"mutability":"mutable","name":"buffer","nameLocation":"1765:6:14","nodeType":"VariableDeclaration","scope":2032,"src":"1752:19:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1967,"name":"bytes","nodeType":"ElementaryTypeName","src":"1752:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1977,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1784:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1972,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"1788:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1784:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1797:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1784:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1774:9:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1969,"name":"bytes","nodeType":"ElementaryTypeName","src":"1778:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1774:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1752:47:14"},{"expression":{"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1978,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"1809:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1980,"indexExpression":{"hexValue":"30","id":1979,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1816:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1809:9:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1981,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1821:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1809:15:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1983,"nodeType":"ExpressionStatement","src":"1809:15:14"},{"expression":{"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1984,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"1834:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1986,"indexExpression":{"hexValue":"31","id":1985,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1834:9:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1987,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1846:3:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1834:15:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1989,"nodeType":"ExpressionStatement","src":"1834:15:14"},{"body":{"id":2018,"nodeType":"Block","src":"1904:87:14","statements":[{"expression":{"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2004,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"1918:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2006,"indexExpression":{"id":2005,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"1925:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1918:9:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2007,"name":"_HEX_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1834,"src":"1930:12:14","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2011,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2008,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"1943:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1951:3:14","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1943:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1930:25:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1918:37:14","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2013,"nodeType":"ExpressionStatement","src":"1918:37:14"},{"expression":{"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"1969:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1979:1:14","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1969:11:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2017,"nodeType":"ExpressionStatement","src":"1969:11:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1998,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"1892:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1896:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1892:5:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2019,"initializationExpression":{"assignments":[1991],"declarations":[{"constant":false,"id":1991,"mutability":"mutable","name":"i","nameLocation":"1872:1:14","nodeType":"VariableDeclaration","scope":2019,"src":"1864:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1990,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1997,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1876:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1993,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1962,"src":"1880:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1876:10:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1889:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1876:14:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1864:26:14"},"loopExpression":{"expression":{"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1899:3:14","subExpression":{"id":2001,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1991,"src":"1901:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2003,"nodeType":"ExpressionStatement","src":"1899:3:14"},"nodeType":"ForStatement","src":"1859:132:14"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1960,"src":"2008:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2017:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2008:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":2024,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2020:34:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":2020,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2000:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2000:55:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2026,"nodeType":"ExpressionStatement","src":"2000:55:14"},{"expression":{"arguments":[{"id":2029,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1968,"src":"2079:6:14","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2028,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2072:6:14","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2027,"name":"string","nodeType":"ElementaryTypeName","src":"2072:6:14","typeDescriptions":{}}},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2072:14:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1966,"id":2031,"nodeType":"Return","src":"2065:21:14"}]},"documentation":{"id":1958,"nodeType":"StructuredDocumentation","src":"1535:112:14","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2033,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1661:11:14","nodeType":"FunctionDefinition","parameters":{"id":1963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1960,"mutability":"mutable","name":"value","nameLocation":"1681:5:14","nodeType":"VariableDeclaration","scope":2033,"src":"1673:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1959,"name":"uint256","nodeType":"ElementaryTypeName","src":"1673:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1962,"mutability":"mutable","name":"length","nameLocation":"1696:6:14","nodeType":"VariableDeclaration","scope":2033,"src":"1688:14:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1961,"name":"uint256","nodeType":"ElementaryTypeName","src":"1688:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1672:31:14"},"returnParameters":{"id":1966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1965,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2033,"src":"1727:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1964,"name":"string","nodeType":"ElementaryTypeName","src":"1727:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1726:15:14"},"scope":2054,"src":"1652:441:14","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2052,"nodeType":"Block","src":"2318:76:14","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":2046,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"2363:4:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2045,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2355:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2044,"name":"uint160","nodeType":"ElementaryTypeName","src":"2355:7:14","typeDescriptions":{}}},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2355:13:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2347:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2042,"name":"uint256","nodeType":"ElementaryTypeName","src":"2347:7:14","typeDescriptions":{}}},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2347:22:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2049,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1837,"src":"2371:15:14","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2041,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1957,2033,2053],"referencedDeclaration":2033,"src":"2335:11:14","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2335:52:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2040,"id":2051,"nodeType":"Return","src":"2328:59:14"}]},"documentation":{"id":2034,"nodeType":"StructuredDocumentation","src":"2099:141:14","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":2053,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2254:11:14","nodeType":"FunctionDefinition","parameters":{"id":2037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2036,"mutability":"mutable","name":"addr","nameLocation":"2274:4:14","nodeType":"VariableDeclaration","scope":2053,"src":"2266:12:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2035,"name":"address","nodeType":"ElementaryTypeName","src":"2266:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2265:14:14"},"returnParameters":{"id":2040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2039,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2053,"src":"2303:13:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2038,"name":"string","nodeType":"ElementaryTypeName","src":"2303:6:14","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2302:15:14"},"scope":2054,"src":"2245:149:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2055,"src":"161:2235:14","usedErrors":[]}],"src":"101:2296:14"},"id":14},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","exportedSymbols":{"ECDSA":[2442],"Strings":[2054]},"id":2443,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2056,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:15"},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../Strings.sol","id":2057,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2443,"sourceUnit":2055,"src":"137:24:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"ECDSA","contractDependencies":[],"contractKind":"library","documentation":{"id":2058,"nodeType":"StructuredDocumentation","src":"163:205:15","text":" @dev Elliptic Curve Digital Signature Algorithm (ECDSA) operations.\n These functions can be used to verify that a message was signed by the holder\n of the private keys of a given address."},"fullyImplemented":true,"id":2442,"linearizedBaseContracts":[2442],"name":"ECDSA","nameLocation":"377:5:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ECDSA.RecoverError","id":2064,"members":[{"id":2059,"name":"NoError","nameLocation":"417:7:15","nodeType":"EnumValue","src":"417:7:15"},{"id":2060,"name":"InvalidSignature","nameLocation":"434:16:15","nodeType":"EnumValue","src":"434:16:15"},{"id":2061,"name":"InvalidSignatureLength","nameLocation":"460:22:15","nodeType":"EnumValue","src":"460:22:15"},{"id":2062,"name":"InvalidSignatureS","nameLocation":"492:17:15","nodeType":"EnumValue","src":"492:17:15"},{"id":2063,"name":"InvalidSignatureV","nameLocation":"519:17:15","nodeType":"EnumValue","src":"519:17:15"}],"name":"RecoverError","nameLocation":"394:12:15","nodeType":"EnumDefinition","src":"389:153:15"},{"body":{"id":2117,"nodeType":"Block","src":"602:577:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2064","typeString":"enum ECDSA.RecoverError"},"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2070,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"616:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2064","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2071,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"625:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2064_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2059,"src":"625:20:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2064","typeString":"enum ECDSA.RecoverError"}},"src":"616:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2064","typeString":"enum ECDSA.RecoverError"},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2076,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"712:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2064","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2077,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"721:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2064_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2078,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2060,"src":"721:29:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2064","typeString":"enum ECDSA.RecoverError"}},"src":"712:38:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2064","typeString":"enum ECDSA.RecoverError"},"id":2088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2085,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"821:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2064","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2086,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"830:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2064_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2087,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2061,"src":"830:35:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2064","typeString":"enum ECDSA.RecoverError"}},"src":"821:44:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2064","typeString":"enum ECDSA.RecoverError"},"id":2097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2094,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"943:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2064","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2095,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"952:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2064_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2096,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2062,"src":"952:30:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2064","typeString":"enum ECDSA.RecoverError"}},"src":"943:39:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_enum$_RecoverError_$2064","typeString":"enum ECDSA.RecoverError"},"id":2106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2103,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2067,"src":"1063:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2064","typeString":"enum ECDSA.RecoverError"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2104,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"1072:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2064_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2105,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureV","nodeType":"MemberAccess","referencedDeclaration":2063,"src":"1072:30:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2064","typeString":"enum ECDSA.RecoverError"}},"src":"1063:39:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2112,"nodeType":"IfStatement","src":"1059:114:15","trueBody":{"id":2111,"nodeType":"Block","src":"1104:69:15","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202776272076616c7565","id":2108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1125:36:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4","typeString":"literal_string \"ECDSA: invalid signature 'v' value\""},"value":"ECDSA: invalid signature 'v' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4","typeString":"literal_string \"ECDSA: invalid signature 'v' value\""}],"id":2107,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"1118:6:15","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1118:44:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2110,"nodeType":"ExpressionStatement","src":"1118:44:15"}]}},"id":2113,"nodeType":"IfStatement","src":"939:234:15","trueBody":{"id":2102,"nodeType":"Block","src":"984:69:15","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c7565","id":2099,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1005:36:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""},"value":"ECDSA: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd","typeString":"literal_string \"ECDSA: invalid signature 's' value\""}],"id":2098,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"998:6:15","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"998:44:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2101,"nodeType":"ExpressionStatement","src":"998:44:15"}]}},"id":2114,"nodeType":"IfStatement","src":"817:356:15","trueBody":{"id":2093,"nodeType":"Block","src":"867:66:15","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","id":2090,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"888:33:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""},"value":"ECDSA: invalid signature length"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77","typeString":"literal_string \"ECDSA: invalid signature length\""}],"id":2089,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"881:6:15","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"881:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2092,"nodeType":"ExpressionStatement","src":"881:41:15"}]}},"id":2115,"nodeType":"IfStatement","src":"708:465:15","trueBody":{"id":2084,"nodeType":"Block","src":"752:59:15","statements":[{"expression":{"arguments":[{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","id":2081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"773:26:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""},"value":"ECDSA: invalid signature"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be","typeString":"literal_string \"ECDSA: invalid signature\""}],"id":2080,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"766:6:15","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"766:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2083,"nodeType":"ExpressionStatement","src":"766:34:15"}]}},"id":2116,"nodeType":"IfStatement","src":"612:561:15","trueBody":{"id":2075,"nodeType":"Block","src":"647:55:15","statements":[{"functionReturnParameters":2069,"id":2074,"nodeType":"Return","src":"661:7:15"}]}}]},"id":2118,"implemented":true,"kind":"function","modifiers":[],"name":"_throwError","nameLocation":"557:11:15","nodeType":"FunctionDefinition","parameters":{"id":2068,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2067,"mutability":"mutable","name":"error","nameLocation":"582:5:15","nodeType":"VariableDeclaration","scope":2118,"src":"569:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2064","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2066,"nodeType":"UserDefinedTypeName","pathNode":{"id":2065,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":2064,"src":"569:12:15"},"referencedDeclaration":2064,"src":"569:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2064","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"568:20:15"},"returnParameters":{"id":2069,"nodeType":"ParameterList","parameters":[],"src":"602:0:15"},"scope":2442,"src":"548:631:15","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":2163,"nodeType":"Block","src":"2347:626:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2131,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2123,"src":"2361:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2361:16:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"3635","id":2133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2381:2:15","typeDescriptions":{"typeIdentifier":"t_rational_65_by_1","typeString":"int_const 65"},"value":"65"},"src":"2361:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2161,"nodeType":"Block","src":"2886:81:15","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2916:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2908:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2153,"name":"address","nodeType":"ElementaryTypeName","src":"2908:7:15","typeDescriptions":{}}},"id":2156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2908:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2157,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"2920:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2064_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureLength","nodeType":"MemberAccess","referencedDeclaration":2061,"src":"2920:35:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2064","typeString":"enum ECDSA.RecoverError"}}],"id":2159,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2907:49:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2064_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2130,"id":2160,"nodeType":"Return","src":"2900:56:15"}]},"id":2162,"nodeType":"IfStatement","src":"2357:610:15","trueBody":{"id":2152,"nodeType":"Block","src":"2385:495:15","statements":[{"assignments":[2136],"declarations":[{"constant":false,"id":2136,"mutability":"mutable","name":"r","nameLocation":"2407:1:15","nodeType":"VariableDeclaration","scope":2152,"src":"2399:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2135,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2399:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2137,"nodeType":"VariableDeclarationStatement","src":"2399:9:15"},{"assignments":[2139],"declarations":[{"constant":false,"id":2139,"mutability":"mutable","name":"s","nameLocation":"2430:1:15","nodeType":"VariableDeclaration","scope":2152,"src":"2422:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2138,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2422:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2140,"nodeType":"VariableDeclarationStatement","src":"2422:9:15"},{"assignments":[2142],"declarations":[{"constant":false,"id":2142,"mutability":"mutable","name":"v","nameLocation":"2451:1:15","nodeType":"VariableDeclaration","scope":2152,"src":"2445:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2141,"name":"uint8","nodeType":"ElementaryTypeName","src":"2445:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2143,"nodeType":"VariableDeclarationStatement","src":"2445:7:15"},{"AST":{"nodeType":"YulBlock","src":"2653:171:15","statements":[{"nodeType":"YulAssignment","src":"2671:32:15","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2686:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2697:4:15","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2682:3:15"},"nodeType":"YulFunctionCall","src":"2682:20:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2676:5:15"},"nodeType":"YulFunctionCall","src":"2676:27:15"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"2671:1:15"}]},{"nodeType":"YulAssignment","src":"2720:32:15","value":{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2735:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2746:4:15","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2731:3:15"},"nodeType":"YulFunctionCall","src":"2731:20:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2725:5:15"},"nodeType":"YulFunctionCall","src":"2725:27:15"},"variableNames":[{"name":"s","nodeType":"YulIdentifier","src":"2720:1:15"}]},{"nodeType":"YulAssignment","src":"2769:41:15","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2779:1:15","type":"","value":"0"},{"arguments":[{"arguments":[{"name":"signature","nodeType":"YulIdentifier","src":"2792:9:15"},{"kind":"number","nodeType":"YulLiteral","src":"2803:4:15","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2788:3:15"},"nodeType":"YulFunctionCall","src":"2788:20:15"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2782:5:15"},"nodeType":"YulFunctionCall","src":"2782:27:15"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"2774:4:15"},"nodeType":"YulFunctionCall","src":"2774:36:15"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"2769:1:15"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2136,"isOffset":false,"isSlot":false,"src":"2671:1:15","valueSize":1},{"declaration":2139,"isOffset":false,"isSlot":false,"src":"2720:1:15","valueSize":1},{"declaration":2123,"isOffset":false,"isSlot":false,"src":"2686:9:15","valueSize":1},{"declaration":2123,"isOffset":false,"isSlot":false,"src":"2735:9:15","valueSize":1},{"declaration":2123,"isOffset":false,"isSlot":false,"src":"2792:9:15","valueSize":1},{"declaration":2142,"isOffset":false,"isSlot":false,"src":"2769:1:15","valueSize":1}],"id":2144,"nodeType":"InlineAssembly","src":"2644:180:15"},{"expression":{"arguments":[{"id":2146,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2121,"src":"2855:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2147,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"2861:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2148,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2136,"src":"2864:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2149,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2139,"src":"2867:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2145,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2164,2238,2349],"referencedDeclaration":2349,"src":"2844:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2064_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2844:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2064_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2130,"id":2151,"nodeType":"Return","src":"2837:32:15"}]}}]},"documentation":{"id":2119,"nodeType":"StructuredDocumentation","src":"1185:1053:15","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature` or error string. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it.\n Documentation for signature generation:\n - with https://web3js.readthedocs.io/en/v1.3.4/web3-eth-accounts.html#sign[Web3.js]\n - with https://docs.ethers.io/v5/api/signer/#Signer-signMessage[ethers]\n _Available since v4.3._"},"id":2164,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"2252:10:15","nodeType":"FunctionDefinition","parameters":{"id":2124,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2121,"mutability":"mutable","name":"hash","nameLocation":"2271:4:15","nodeType":"VariableDeclaration","scope":2164,"src":"2263:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2120,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2263:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2123,"mutability":"mutable","name":"signature","nameLocation":"2290:9:15","nodeType":"VariableDeclaration","scope":2164,"src":"2277:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2122,"name":"bytes","nodeType":"ElementaryTypeName","src":"2277:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2262:38:15"},"returnParameters":{"id":2130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2164,"src":"2324:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2125,"name":"address","nodeType":"ElementaryTypeName","src":"2324:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2129,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2164,"src":"2333:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2064","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2128,"nodeType":"UserDefinedTypeName","pathNode":{"id":2127,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":2064,"src":"2333:12:15"},"referencedDeclaration":2064,"src":"2333:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2064","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"2323:23:15"},"scope":2442,"src":"2243:730:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2190,"nodeType":"Block","src":"3846:140:15","statements":[{"assignments":[2175,2178],"declarations":[{"constant":false,"id":2175,"mutability":"mutable","name":"recovered","nameLocation":"3865:9:15","nodeType":"VariableDeclaration","scope":2190,"src":"3857:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2174,"name":"address","nodeType":"ElementaryTypeName","src":"3857:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2178,"mutability":"mutable","name":"error","nameLocation":"3889:5:15","nodeType":"VariableDeclaration","scope":2190,"src":"3876:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2064","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2177,"nodeType":"UserDefinedTypeName","pathNode":{"id":2176,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":2064,"src":"3876:12:15"},"referencedDeclaration":2064,"src":"3876:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2064","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":2183,"initialValue":{"arguments":[{"id":2180,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2167,"src":"3909:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2181,"name":"signature","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2169,"src":"3915:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2179,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2164,2238,2349],"referencedDeclaration":2164,"src":"3898:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$_t_enum$_RecoverError_$2064_$","typeString":"function (bytes32,bytes memory) pure returns (address,enum ECDSA.RecoverError)"}},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3898:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2064_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"3856:69:15"},{"expression":{"arguments":[{"id":2185,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2178,"src":"3947:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2064","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2064","typeString":"enum ECDSA.RecoverError"}],"id":2184,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"3935:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2064_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3935:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2187,"nodeType":"ExpressionStatement","src":"3935:18:15"},{"expression":{"id":2188,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2175,"src":"3970:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2173,"id":2189,"nodeType":"Return","src":"3963:16:15"}]},"documentation":{"id":2165,"nodeType":"StructuredDocumentation","src":"2979:775:15","text":" @dev Returns the address that signed a hashed message (`hash`) with\n `signature`. This address can then be used for verification purposes.\n The `ecrecover` EVM opcode allows for malleable (non-unique) signatures:\n this function rejects them by requiring the `s` value to be in the lower\n half order, and the `v` value to be either 27 or 28.\n IMPORTANT: `hash` _must_ be the result of a hash operation for the\n verification to be secure: it is possible to craft signatures that\n recover to arbitrary addresses for non-hashed data. A safe way to ensure\n this is by receiving a hash of the original message (which may otherwise\n be too long), and then calling {toEthSignedMessageHash} on it."},"id":2191,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"3768:7:15","nodeType":"FunctionDefinition","parameters":{"id":2170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2167,"mutability":"mutable","name":"hash","nameLocation":"3784:4:15","nodeType":"VariableDeclaration","scope":2191,"src":"3776:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2166,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3776:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2169,"mutability":"mutable","name":"signature","nameLocation":"3803:9:15","nodeType":"VariableDeclaration","scope":2191,"src":"3790:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2168,"name":"bytes","nodeType":"ElementaryTypeName","src":"3790:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3775:38:15"},"returnParameters":{"id":2173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2172,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2191,"src":"3837:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2171,"name":"address","nodeType":"ElementaryTypeName","src":"3837:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3836:9:15"},"scope":2442,"src":"3759:227:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2237,"nodeType":"Block","src":"4373:203:15","statements":[{"assignments":[2207],"declarations":[{"constant":false,"id":2207,"mutability":"mutable","name":"s","nameLocation":"4391:1:15","nodeType":"VariableDeclaration","scope":2237,"src":"4383:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2206,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4383:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2214,"initialValue":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2208,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"4395:2:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"arguments":[{"hexValue":"307837666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666","id":2211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4408:66:15","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"},"value":"0x7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819967_by_1","typeString":"int_const 5789...(69 digits omitted)...9967"}],"id":2210,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4400:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2209,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4400:7:15","typeDescriptions":{}}},"id":2212,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4400:75:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4395:80:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4383:92:15"},{"assignments":[2216],"declarations":[{"constant":false,"id":2216,"mutability":"mutable","name":"v","nameLocation":"4491:1:15","nodeType":"VariableDeclaration","scope":2237,"src":"4485:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2215,"name":"uint8","nodeType":"ElementaryTypeName","src":"4485:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":2229,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2227,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2221,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"4510:2:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2220,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4502:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2219,"name":"uint256","nodeType":"ElementaryTypeName","src":"4502:7:15","typeDescriptions":{}}},"id":2222,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4502:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"323535","id":2223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4517:3:15","typeDescriptions":{"typeIdentifier":"t_rational_255_by_1","typeString":"int_const 255"},"value":"255"},"src":"4502:18:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2225,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4501:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"3237","id":2226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4524:2:15","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"4501:25:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4495:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2217,"name":"uint8","nodeType":"ElementaryTypeName","src":"4495:5:15","typeDescriptions":{}}},"id":2228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4495:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"4485:42:15"},{"expression":{"arguments":[{"id":2231,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2194,"src":"4555:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2232,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2216,"src":"4561:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2233,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"4564:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2234,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2207,"src":"4567:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2230,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2164,2238,2349],"referencedDeclaration":2349,"src":"4544:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2064_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4544:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2064_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2205,"id":2236,"nodeType":"Return","src":"4537:32:15"}]},"documentation":{"id":2192,"nodeType":"StructuredDocumentation","src":"3992:243:15","text":" @dev Overload of {ECDSA-tryRecover} that receives the `r` and `vs` short-signature fields separately.\n See https://eips.ethereum.org/EIPS/eip-2098[EIP-2098 short signatures]\n _Available since v4.3._"},"id":2238,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"4249:10:15","nodeType":"FunctionDefinition","parameters":{"id":2199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2194,"mutability":"mutable","name":"hash","nameLocation":"4277:4:15","nodeType":"VariableDeclaration","scope":2238,"src":"4269:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2193,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4269:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2196,"mutability":"mutable","name":"r","nameLocation":"4299:1:15","nodeType":"VariableDeclaration","scope":2238,"src":"4291:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2195,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4291:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2198,"mutability":"mutable","name":"vs","nameLocation":"4318:2:15","nodeType":"VariableDeclaration","scope":2238,"src":"4310:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2197,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4310:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4259:67:15"},"returnParameters":{"id":2205,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2238,"src":"4350:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2200,"name":"address","nodeType":"ElementaryTypeName","src":"4350:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2204,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2238,"src":"4359:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2064","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2203,"nodeType":"UserDefinedTypeName","pathNode":{"id":2202,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":2064,"src":"4359:12:15"},"referencedDeclaration":2064,"src":"4359:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2064","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"4349:23:15"},"scope":2442,"src":"4240:336:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2267,"nodeType":"Block","src":"4857:136:15","statements":[{"assignments":[2251,2254],"declarations":[{"constant":false,"id":2251,"mutability":"mutable","name":"recovered","nameLocation":"4876:9:15","nodeType":"VariableDeclaration","scope":2267,"src":"4868:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2250,"name":"address","nodeType":"ElementaryTypeName","src":"4868:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2254,"mutability":"mutable","name":"error","nameLocation":"4900:5:15","nodeType":"VariableDeclaration","scope":2267,"src":"4887:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2064","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2253,"nodeType":"UserDefinedTypeName","pathNode":{"id":2252,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":2064,"src":"4887:12:15"},"referencedDeclaration":2064,"src":"4887:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2064","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":2260,"initialValue":{"arguments":[{"id":2256,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2241,"src":"4920:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2257,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2243,"src":"4926:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2258,"name":"vs","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2245,"src":"4929:2:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2255,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2164,2238,2349],"referencedDeclaration":2238,"src":"4909:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2064_$","typeString":"function (bytes32,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4909:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2064_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"4867:65:15"},{"expression":{"arguments":[{"id":2262,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"4954:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2064","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2064","typeString":"enum ECDSA.RecoverError"}],"id":2261,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"4942:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2064_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4942:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2264,"nodeType":"ExpressionStatement","src":"4942:18:15"},{"expression":{"id":2265,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"4977:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2249,"id":2266,"nodeType":"Return","src":"4970:16:15"}]},"documentation":{"id":2239,"nodeType":"StructuredDocumentation","src":"4582:154:15","text":" @dev Overload of {ECDSA-recover} that receives the `r and `vs` short-signature fields separately.\n _Available since v4.2._"},"id":2268,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"4750:7:15","nodeType":"FunctionDefinition","parameters":{"id":2246,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2241,"mutability":"mutable","name":"hash","nameLocation":"4775:4:15","nodeType":"VariableDeclaration","scope":2268,"src":"4767:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2240,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4767:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2243,"mutability":"mutable","name":"r","nameLocation":"4797:1:15","nodeType":"VariableDeclaration","scope":2268,"src":"4789:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2242,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4789:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2245,"mutability":"mutable","name":"vs","nameLocation":"4816:2:15","nodeType":"VariableDeclaration","scope":2268,"src":"4808:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2244,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4808:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4757:67:15"},"returnParameters":{"id":2249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2248,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2268,"src":"4848:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2247,"name":"address","nodeType":"ElementaryTypeName","src":"4848:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4847:9:15"},"scope":2442,"src":"4741:252:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2348,"nodeType":"Block","src":"5316:1454:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2287,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"6212:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6204:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2285,"name":"uint256","nodeType":"ElementaryTypeName","src":"6204:7:15","typeDescriptions":{}}},"id":2288,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6204:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":2289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6217:66:15","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"6204:79:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2300,"nodeType":"IfStatement","src":"6200:161:15","trueBody":{"id":2299,"nodeType":"Block","src":"6285:76:15","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6315:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2292,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6307:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2291,"name":"address","nodeType":"ElementaryTypeName","src":"6307:7:15","typeDescriptions":{}}},"id":2294,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6307:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2295,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"6319:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2064_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureS","nodeType":"MemberAccess","referencedDeclaration":2062,"src":"6319:30:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2064","typeString":"enum ECDSA.RecoverError"}}],"id":2297,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6306:44:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2064_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2284,"id":2298,"nodeType":"Return","src":"6299:51:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2301,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"6374:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"3237","id":2302,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6379:2:15","typeDescriptions":{"typeIdentifier":"t_rational_27_by_1","typeString":"int_const 27"},"value":"27"},"src":"6374:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":2306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2304,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"6385:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"3238","id":2305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6390:2:15","typeDescriptions":{"typeIdentifier":"t_rational_28_by_1","typeString":"int_const 28"},"value":"28"},"src":"6385:7:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6374:18:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2317,"nodeType":"IfStatement","src":"6370:100:15","trueBody":{"id":2316,"nodeType":"Block","src":"6394:76:15","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6424:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6416:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2308,"name":"address","nodeType":"ElementaryTypeName","src":"6416:7:15","typeDescriptions":{}}},"id":2311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6416:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2312,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"6428:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2064_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignatureV","nodeType":"MemberAccess","referencedDeclaration":2063,"src":"6428:30:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2064","typeString":"enum ECDSA.RecoverError"}}],"id":2314,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6415:44:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2064_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2284,"id":2315,"nodeType":"Return","src":"6408:51:15"}]}},{"assignments":[2319],"declarations":[{"constant":false,"id":2319,"mutability":"mutable","name":"signer","nameLocation":"6572:6:15","nodeType":"VariableDeclaration","scope":2348,"src":"6564:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2318,"name":"address","nodeType":"ElementaryTypeName","src":"6564:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":2326,"initialValue":{"arguments":[{"id":2321,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2271,"src":"6591:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2322,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2273,"src":"6597:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2323,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2275,"src":"6600:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2324,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"6603:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2320,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"6581:9:15","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6581:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6564:41:15"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2327,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"6619:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2330,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6637:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2329,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6629:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2328,"name":"address","nodeType":"ElementaryTypeName","src":"6629:7:15","typeDescriptions":{}}},"id":2331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6629:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6619:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2342,"nodeType":"IfStatement","src":"6615:101:15","trueBody":{"id":2341,"nodeType":"Block","src":"6641:75:15","statements":[{"expression":{"components":[{"arguments":[{"hexValue":"30","id":2335,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6671:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6663:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2333,"name":"address","nodeType":"ElementaryTypeName","src":"6663:7:15","typeDescriptions":{}}},"id":2336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6663:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2337,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"6675:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2064_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2338,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"InvalidSignature","nodeType":"MemberAccess","referencedDeclaration":2060,"src":"6675:29:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2064","typeString":"enum ECDSA.RecoverError"}}],"id":2339,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"6662:43:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2064_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2284,"id":2340,"nodeType":"Return","src":"6655:50:15"}]}},{"expression":{"components":[{"id":2343,"name":"signer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2319,"src":"6734:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2344,"name":"RecoverError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2064,"src":"6742:12:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_RecoverError_$2064_$","typeString":"type(enum ECDSA.RecoverError)"}},"id":2345,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"NoError","nodeType":"MemberAccess","referencedDeclaration":2059,"src":"6742:20:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2064","typeString":"enum ECDSA.RecoverError"}}],"id":2346,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6733:30:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2064_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"functionReturnParameters":2284,"id":2347,"nodeType":"Return","src":"6726:37:15"}]},"documentation":{"id":2269,"nodeType":"StructuredDocumentation","src":"4999:163:15","text":" @dev Overload of {ECDSA-tryRecover} that receives the `v`,\n `r` and `s` signature fields separately.\n _Available since v4.3._"},"id":2349,"implemented":true,"kind":"function","modifiers":[],"name":"tryRecover","nameLocation":"5176:10:15","nodeType":"FunctionDefinition","parameters":{"id":2278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2271,"mutability":"mutable","name":"hash","nameLocation":"5204:4:15","nodeType":"VariableDeclaration","scope":2349,"src":"5196:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2270,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5196:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2273,"mutability":"mutable","name":"v","nameLocation":"5224:1:15","nodeType":"VariableDeclaration","scope":2349,"src":"5218:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2272,"name":"uint8","nodeType":"ElementaryTypeName","src":"5218:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2275,"mutability":"mutable","name":"r","nameLocation":"5243:1:15","nodeType":"VariableDeclaration","scope":2349,"src":"5235:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2274,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5235:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2277,"mutability":"mutable","name":"s","nameLocation":"5262:1:15","nodeType":"VariableDeclaration","scope":2349,"src":"5254:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2276,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5254:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5186:83:15"},"returnParameters":{"id":2284,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2349,"src":"5293:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2279,"name":"address","nodeType":"ElementaryTypeName","src":"5293:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2283,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2349,"src":"5302:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2064","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2282,"nodeType":"UserDefinedTypeName","pathNode":{"id":2281,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":2064,"src":"5302:12:15"},"referencedDeclaration":2064,"src":"5302:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2064","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"src":"5292:23:15"},"scope":2442,"src":"5167:1603:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2381,"nodeType":"Block","src":"7035:138:15","statements":[{"assignments":[2364,2367],"declarations":[{"constant":false,"id":2364,"mutability":"mutable","name":"recovered","nameLocation":"7054:9:15","nodeType":"VariableDeclaration","scope":2381,"src":"7046:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2363,"name":"address","nodeType":"ElementaryTypeName","src":"7046:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2367,"mutability":"mutable","name":"error","nameLocation":"7078:5:15","nodeType":"VariableDeclaration","scope":2381,"src":"7065:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2064","typeString":"enum ECDSA.RecoverError"},"typeName":{"id":2366,"nodeType":"UserDefinedTypeName","pathNode":{"id":2365,"name":"RecoverError","nodeType":"IdentifierPath","referencedDeclaration":2064,"src":"7065:12:15"},"referencedDeclaration":2064,"src":"7065:12:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2064","typeString":"enum ECDSA.RecoverError"}},"visibility":"internal"}],"id":2374,"initialValue":{"arguments":[{"id":2369,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2352,"src":"7098:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2370,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"7104:1:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":2371,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2356,"src":"7107:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2372,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2358,"src":"7110:1:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2368,"name":"tryRecover","nodeType":"Identifier","overloadedDeclarations":[2164,2238,2349],"referencedDeclaration":2349,"src":"7087:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$_t_enum$_RecoverError_$2064_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address,enum ECDSA.RecoverError)"}},"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7087:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_enum$_RecoverError_$2064_$","typeString":"tuple(address,enum ECDSA.RecoverError)"}},"nodeType":"VariableDeclarationStatement","src":"7045:67:15"},{"expression":{"arguments":[{"id":2376,"name":"error","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"7134:5:15","typeDescriptions":{"typeIdentifier":"t_enum$_RecoverError_$2064","typeString":"enum ECDSA.RecoverError"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_RecoverError_$2064","typeString":"enum ECDSA.RecoverError"}],"id":2375,"name":"_throwError","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"7122:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_enum$_RecoverError_$2064_$returns$__$","typeString":"function (enum ECDSA.RecoverError) pure"}},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7122:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2378,"nodeType":"ExpressionStatement","src":"7122:18:15"},{"expression":{"id":2379,"name":"recovered","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"7157:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2362,"id":2380,"nodeType":"Return","src":"7150:16:15"}]},"documentation":{"id":2350,"nodeType":"StructuredDocumentation","src":"6776:122:15","text":" @dev Overload of {ECDSA-recover} that receives the `v`,\n `r` and `s` signature fields separately."},"id":2382,"implemented":true,"kind":"function","modifiers":[],"name":"recover","nameLocation":"6912:7:15","nodeType":"FunctionDefinition","parameters":{"id":2359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2352,"mutability":"mutable","name":"hash","nameLocation":"6937:4:15","nodeType":"VariableDeclaration","scope":2382,"src":"6929:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2351,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6929:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2354,"mutability":"mutable","name":"v","nameLocation":"6957:1:15","nodeType":"VariableDeclaration","scope":2382,"src":"6951:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2353,"name":"uint8","nodeType":"ElementaryTypeName","src":"6951:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2356,"mutability":"mutable","name":"r","nameLocation":"6976:1:15","nodeType":"VariableDeclaration","scope":2382,"src":"6968:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2355,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6968:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2358,"mutability":"mutable","name":"s","nameLocation":"6995:1:15","nodeType":"VariableDeclaration","scope":2382,"src":"6987:9:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2357,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6987:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6919:83:15"},"returnParameters":{"id":2362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2382,"src":"7026:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2360,"name":"address","nodeType":"ElementaryTypeName","src":"7026:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7025:9:15"},"scope":2442,"src":"6903:270:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2398,"nodeType":"Block","src":"7541:187:15","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a3332","id":2393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7679:34:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},"value":"\u0019Ethereum Signed Message:\n32"},{"id":2394,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2385,"src":"7715:4:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2391,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7662:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2392,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"7662:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2395,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7662:58:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2390,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"7652:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7652:69:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2389,"id":2397,"nodeType":"Return","src":"7645:76:15"}]},"documentation":{"id":2383,"nodeType":"StructuredDocumentation","src":"7179:279:15","text":" @dev Returns an Ethereum Signed Message, created from a `hash`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":2399,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"7472:22:15","nodeType":"FunctionDefinition","parameters":{"id":2386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2385,"mutability":"mutable","name":"hash","nameLocation":"7503:4:15","nodeType":"VariableDeclaration","scope":2399,"src":"7495:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2384,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7495:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7494:14:15"},"returnParameters":{"id":2389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2388,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2399,"src":"7532:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2387,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7532:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7531:9:15"},"scope":2442,"src":"7463:265:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2420,"nodeType":"Block","src":"8093:116:15","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"19457468657265756d205369676e6564204d6573736167653a0a","id":2410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8137:32:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},"value":"\u0019Ethereum Signed Message:\n"},{"arguments":[{"expression":{"id":2413,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"8188:1:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"8188:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2411,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"8171:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2054_$","typeString":"type(library Strings)"}},"id":2412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toString","nodeType":"MemberAccess","referencedDeclaration":1916,"src":"8171:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"}},"id":2415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8171:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2416,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2402,"src":"8199:1:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9af2d9c228f6cfddaa6d1e5b94e0bce4ab16bd9a472a2b7fbfd74ebff4c720b4","typeString":"literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a\""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2408,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8120:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"8120:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8120:81:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2407,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8110:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8110:92:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2406,"id":2419,"nodeType":"Return","src":"8103:99:15"}]},"documentation":{"id":2400,"nodeType":"StructuredDocumentation","src":"7734:274:15","text":" @dev Returns an Ethereum Signed Message, created from `s`. This\n produces hash corresponding to the one signed with the\n https://eth.wiki/json-rpc/API#eth_sign[`eth_sign`]\n JSON-RPC method as part of EIP-191.\n See {recover}."},"id":2421,"implemented":true,"kind":"function","modifiers":[],"name":"toEthSignedMessageHash","nameLocation":"8022:22:15","nodeType":"FunctionDefinition","parameters":{"id":2403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2402,"mutability":"mutable","name":"s","nameLocation":"8058:1:15","nodeType":"VariableDeclaration","scope":2421,"src":"8045:14:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2401,"name":"bytes","nodeType":"ElementaryTypeName","src":"8045:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8044:16:15"},"returnParameters":{"id":2406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2405,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2421,"src":"8084:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2404,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8084:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8083:9:15"},"scope":2442,"src":"8013:196:15","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2440,"nodeType":"Block","src":"8650:92:15","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"1901","id":2434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8694:10:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},"value":"\u0019\u0001"},{"id":2435,"name":"domainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2424,"src":"8706:15:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2436,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"8723:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2432,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8677:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"8677:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8677:57:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2431,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"8667:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8667:68:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2430,"id":2439,"nodeType":"Return","src":"8660:75:15"}]},"documentation":{"id":2422,"nodeType":"StructuredDocumentation","src":"8215:328:15","text":" @dev Returns an Ethereum Signed Typed Data, created from a\n `domainSeparator` and a `structHash`. This produces hash corresponding\n to the one signed with the\n https://eips.ethereum.org/EIPS/eip-712[`eth_signTypedData`]\n JSON-RPC method as part of EIP-712.\n See {recover}."},"id":2441,"implemented":true,"kind":"function","modifiers":[],"name":"toTypedDataHash","nameLocation":"8557:15:15","nodeType":"FunctionDefinition","parameters":{"id":2427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2424,"mutability":"mutable","name":"domainSeparator","nameLocation":"8581:15:15","nodeType":"VariableDeclaration","scope":2441,"src":"8573:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2423,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8573:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2426,"mutability":"mutable","name":"structHash","nameLocation":"8606:10:15","nodeType":"VariableDeclaration","scope":2441,"src":"8598:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2425,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8598:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8572:45:15"},"returnParameters":{"id":2430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2429,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2441,"src":"8641:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2428,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8641:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8640:9:15"},"scope":2442,"src":"8548:194:15","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2443,"src":"369:8375:15","usedErrors":[]}],"src":"112:8633:15"},"id":15},"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol","exportedSymbols":{"ECDSA":[2442],"EIP712":[2596],"Strings":[2054]},"id":2597,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2444,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"104:23:16"},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/ECDSA.sol","file":"./ECDSA.sol","id":2445,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2597,"sourceUnit":2443,"src":"129:21:16","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"EIP712","contractDependencies":[],"contractKind":"contract","documentation":{"id":2446,"nodeType":"StructuredDocumentation","src":"152:1142:16","text":" @dev https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data.\n The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible,\n thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding\n they need in their contracts using a combination of `abi.encode` and `keccak256`.\n This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding\n scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA\n ({_hashTypedDataV4}).\n The implementation of the domain separator was designed to be as efficient as possible while still properly updating\n the chain id to protect against replay attacks on an eventual fork of the chain.\n NOTE: This contract implements the version of the encoding known as \"v4\", as implemented by the JSON RPC method\n https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask].\n _Available since v3.4._"},"fullyImplemented":true,"id":2596,"linearizedBaseContracts":[2596],"name":"EIP712","nameLocation":"1313:6:16","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":2448,"mutability":"immutable","name":"_CACHED_DOMAIN_SEPARATOR","nameLocation":"1589:24:16","nodeType":"VariableDeclaration","scope":2596,"src":"1563:50:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2447,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1563:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2450,"mutability":"immutable","name":"_CACHED_CHAIN_ID","nameLocation":"1645:16:16","nodeType":"VariableDeclaration","scope":2596,"src":"1619:42:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2449,"name":"uint256","nodeType":"ElementaryTypeName","src":"1619:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":2452,"mutability":"immutable","name":"_CACHED_THIS","nameLocation":"1693:12:16","nodeType":"VariableDeclaration","scope":2596,"src":"1667:38:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2451,"name":"address","nodeType":"ElementaryTypeName","src":"1667:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"constant":false,"id":2454,"mutability":"immutable","name":"_HASHED_NAME","nameLocation":"1738:12:16","nodeType":"VariableDeclaration","scope":2596,"src":"1712:38:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2453,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1712:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2456,"mutability":"immutable","name":"_HASHED_VERSION","nameLocation":"1782:15:16","nodeType":"VariableDeclaration","scope":2596,"src":"1756:41:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2455,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1756:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"constant":false,"id":2458,"mutability":"immutable","name":"_TYPE_HASH","nameLocation":"1829:10:16","nodeType":"VariableDeclaration","scope":2596,"src":"1803:36:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2457,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1803:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"private"},{"body":{"id":2522,"nodeType":"Block","src":"2510:547:16","statements":[{"assignments":[2467],"declarations":[{"constant":false,"id":2467,"mutability":"mutable","name":"hashedName","nameLocation":"2528:10:16","nodeType":"VariableDeclaration","scope":2522,"src":"2520:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2466,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2520:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2474,"initialValue":{"arguments":[{"arguments":[{"id":2471,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2461,"src":"2557:4:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2470,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2551:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2469,"name":"bytes","nodeType":"ElementaryTypeName","src":"2551:5:16","typeDescriptions":{}}},"id":2472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2551:11:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2468,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2541:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2541:22:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2520:43:16"},{"assignments":[2476],"declarations":[{"constant":false,"id":2476,"mutability":"mutable","name":"hashedVersion","nameLocation":"2581:13:16","nodeType":"VariableDeclaration","scope":2522,"src":"2573:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2475,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2573:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2483,"initialValue":{"arguments":[{"arguments":[{"id":2480,"name":"version","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"2613:7:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2479,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2607:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2478,"name":"bytes","nodeType":"ElementaryTypeName","src":"2607:5:16","typeDescriptions":{}}},"id":2481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2607:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2477,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2597:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2597:25:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2573:49:16"},{"assignments":[2485],"declarations":[{"constant":false,"id":2485,"mutability":"mutable","name":"typeHash","nameLocation":"2640:8:16","nodeType":"VariableDeclaration","scope":2522,"src":"2632:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2484,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2632:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2489,"initialValue":{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":2487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2674:84:16","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":2486,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2651:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2651:117:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2632:136:16"},{"expression":{"id":2492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2490,"name":"_HASHED_NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"2778:12:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2491,"name":"hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"2793:10:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2778:25:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2493,"nodeType":"ExpressionStatement","src":"2778:25:16"},{"expression":{"id":2496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2494,"name":"_HASHED_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"2813:15:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2495,"name":"hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"2831:13:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2813:31:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2497,"nodeType":"ExpressionStatement","src":"2813:31:16"},{"expression":{"id":2501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2498,"name":"_CACHED_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"2854:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":2499,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2873:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2500,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"chainid","nodeType":"MemberAccess","src":"2873:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2854:32:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2502,"nodeType":"ExpressionStatement","src":"2854:32:16"},{"expression":{"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2503,"name":"_CACHED_DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"2896:24:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2505,"name":"typeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"2945:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2506,"name":"hashedName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"2955:10:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2507,"name":"hashedVersion","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"2967:13:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2504,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2579,"src":"2923:21:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) view returns (bytes32)"}},"id":2508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2923:58:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2896:85:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2510,"nodeType":"ExpressionStatement","src":"2896:85:16"},{"expression":{"id":2516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2511,"name":"_CACHED_THIS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"2991:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":2514,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3014:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2596","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2596","typeString":"contract EIP712"}],"id":2513,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3006:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2512,"name":"address","nodeType":"ElementaryTypeName","src":"3006:7:16","typeDescriptions":{}}},"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3006:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2991:28:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2517,"nodeType":"ExpressionStatement","src":"2991:28:16"},{"expression":{"id":2520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2518,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"3029:10:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2519,"name":"typeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2485,"src":"3042:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3029:21:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2521,"nodeType":"ExpressionStatement","src":"3029:21:16"}]},"documentation":{"id":2459,"nodeType":"StructuredDocumentation","src":"1891:559:16","text":" @dev Initializes the domain separator and parameter caches.\n The meaning of `name` and `version` is specified in\n https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]:\n - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol.\n - `version`: the current major version of the signing domain.\n NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart\n contract upgrade]."},"id":2523,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2461,"mutability":"mutable","name":"name","nameLocation":"2481:4:16","nodeType":"VariableDeclaration","scope":2523,"src":"2467:18:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2460,"name":"string","nodeType":"ElementaryTypeName","src":"2467:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":2463,"mutability":"mutable","name":"version","nameLocation":"2501:7:16","nodeType":"VariableDeclaration","scope":2523,"src":"2487:21:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2462,"name":"string","nodeType":"ElementaryTypeName","src":"2487:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2466:43:16"},"returnParameters":{"id":2465,"nodeType":"ParameterList","parameters":[],"src":"2510:0:16"},"scope":2596,"src":"2455:602:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2551,"nodeType":"Block","src":"3205:246:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2531,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3227:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2596","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2596","typeString":"contract EIP712"}],"id":2530,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3219:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2529,"name":"address","nodeType":"ElementaryTypeName","src":"3219:7:16","typeDescriptions":{}}},"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3219:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2533,"name":"_CACHED_THIS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2452,"src":"3236:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3219:29:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2535,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3252:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"chainid","nodeType":"MemberAccess","src":"3252:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2537,"name":"_CACHED_CHAIN_ID","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2450,"src":"3269:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3252:33:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"3219:66:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2549,"nodeType":"Block","src":"3349:96:16","statements":[{"expression":{"arguments":[{"id":2544,"name":"_TYPE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2458,"src":"3392:10:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2545,"name":"_HASHED_NAME","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2454,"src":"3404:12:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2546,"name":"_HASHED_VERSION","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2456,"src":"3418:15:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2543,"name":"_buildDomainSeparator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2579,"src":"3370:21:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32,bytes32) view returns (bytes32)"}},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3370:64:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2528,"id":2548,"nodeType":"Return","src":"3363:71:16"}]},"id":2550,"nodeType":"IfStatement","src":"3215:230:16","trueBody":{"id":2542,"nodeType":"Block","src":"3287:56:16","statements":[{"expression":{"id":2540,"name":"_CACHED_DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2448,"src":"3308:24:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2528,"id":2541,"nodeType":"Return","src":"3301:31:16"}]}}]},"documentation":{"id":2524,"nodeType":"StructuredDocumentation","src":"3063:75:16","text":" @dev Returns the domain separator for the current chain."},"id":2552,"implemented":true,"kind":"function","modifiers":[],"name":"_domainSeparatorV4","nameLocation":"3152:18:16","nodeType":"FunctionDefinition","parameters":{"id":2525,"nodeType":"ParameterList","parameters":[],"src":"3170:2:16"},"returnParameters":{"id":2528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2527,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2552,"src":"3196:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2526,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3196:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3195:9:16"},"scope":2596,"src":"3143:308:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2578,"nodeType":"Block","src":"3606:108:16","statements":[{"expression":{"arguments":[{"arguments":[{"id":2566,"name":"typeHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2554,"src":"3644:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2567,"name":"nameHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2556,"src":"3654:8:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2568,"name":"versionHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2558,"src":"3664:11:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2569,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3677:5:16","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2570,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"chainid","nodeType":"MemberAccess","src":"3677:13:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2573,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3700:4:16","typeDescriptions":{"typeIdentifier":"t_contract$_EIP712_$2596","typeString":"contract EIP712"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_EIP712_$2596","typeString":"contract EIP712"}],"id":2572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3692:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2571,"name":"address","nodeType":"ElementaryTypeName","src":"3692:7:16","typeDescriptions":{}}},"id":2574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3692:13:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":2564,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3633:3:16","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"3633:10:16","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3633:73:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2563,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3623:9:16","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3623:84:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2562,"id":2577,"nodeType":"Return","src":"3616:91:16"}]},"id":2579,"implemented":true,"kind":"function","modifiers":[],"name":"_buildDomainSeparator","nameLocation":"3466:21:16","nodeType":"FunctionDefinition","parameters":{"id":2559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2554,"mutability":"mutable","name":"typeHash","nameLocation":"3505:8:16","nodeType":"VariableDeclaration","scope":2579,"src":"3497:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2553,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3497:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2556,"mutability":"mutable","name":"nameHash","nameLocation":"3531:8:16","nodeType":"VariableDeclaration","scope":2579,"src":"3523:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2555,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3523:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2558,"mutability":"mutable","name":"versionHash","nameLocation":"3557:11:16","nodeType":"VariableDeclaration","scope":2579,"src":"3549:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2557,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3549:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3487:87:16"},"returnParameters":{"id":2562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2579,"src":"3597:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2560,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3597:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3596:9:16"},"scope":2596,"src":"3457:257:16","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2594,"nodeType":"Block","src":"4425:79:16","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":2589,"name":"_domainSeparatorV4","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2552,"src":"4464:18:16","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bytes32_$","typeString":"function () view returns (bytes32)"}},"id":2590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4464:20:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2591,"name":"structHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2582,"src":"4486:10:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2587,"name":"ECDSA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2442,"src":"4442:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ECDSA_$2442_$","typeString":"type(library ECDSA)"}},"id":2588,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toTypedDataHash","nodeType":"MemberAccess","referencedDeclaration":2441,"src":"4442:21:16","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4442:55:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2586,"id":2593,"nodeType":"Return","src":"4435:62:16"}]},"documentation":{"id":2580,"nodeType":"StructuredDocumentation","src":"3720:614:16","text":" @dev Given an already https://eips.ethereum.org/EIPS/eip-712#definition-of-hashstruct[hashed struct], this\n function returns the hash of the fully encoded EIP712 message for this domain.\n This hash can be used together with {ECDSA-recover} to obtain the signer of a message. For example:\n ```solidity\n bytes32 digest = _hashTypedDataV4(keccak256(abi.encode(\n     keccak256(\"Mail(address to,string contents)\"),\n     mailTo,\n     keccak256(bytes(mailContents))\n )));\n address signer = ECDSA.recover(digest, signature);\n ```"},"id":2595,"implemented":true,"kind":"function","modifiers":[],"name":"_hashTypedDataV4","nameLocation":"4348:16:16","nodeType":"FunctionDefinition","parameters":{"id":2583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2582,"mutability":"mutable","name":"structHash","nameLocation":"4373:10:16","nodeType":"VariableDeclaration","scope":2595,"src":"4365:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2581,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4365:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4364:20:16"},"returnParameters":{"id":2586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2585,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2595,"src":"4416:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2584,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4416:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4415:9:16"},"scope":2596,"src":"4339:165:16","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2597,"src":"1295:3211:16","usedErrors":[]}],"src":"104:4403:16"},"id":16},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[2620],"IERC165":[2632]},"id":2621,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2598,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:17"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":2599,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2621,"sourceUnit":2633,"src":"124:23:17","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2601,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2632,"src":"754:7:17"},"id":2602,"nodeType":"InheritanceSpecifier","src":"754:7:17"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":2600,"nodeType":"StructuredDocumentation","src":"149:576:17","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":2620,"linearizedBaseContracts":[2620,2632],"name":"ERC165","nameLocation":"744:6:17","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2631],"body":{"id":2618,"nodeType":"Block","src":"920:64:17","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2611,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"937:11:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2613,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2632,"src":"957:7:17","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2632_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2632_$","typeString":"type(contract IERC165)"}],"id":2612,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:17","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"952:13:17","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2632","typeString":"type(contract IERC165)"}},"id":2615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2610,"id":2617,"nodeType":"Return","src":"930:47:17"}]},"documentation":{"id":2603,"nodeType":"StructuredDocumentation","src":"768:56:17","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2619,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:17","nodeType":"FunctionDefinition","overrides":{"id":2607,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:17"},"parameters":{"id":2606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2605,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:17","nodeType":"VariableDeclaration","scope":2619,"src":"856:18:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2604,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:17","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:17"},"returnParameters":{"id":2610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2619,"src":"914:4:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2608,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:17","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:17"},"scope":2620,"src":"829:155:17","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2621,"src":"726:260:17","usedErrors":[]}],"src":"99:888:17"},"id":17},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2632]},"id":2633,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2622,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:18"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":2623,"nodeType":"StructuredDocumentation","src":"125:279:18","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2632,"linearizedBaseContracts":[2632],"name":"IERC165","nameLocation":"415:7:18","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2624,"nodeType":"StructuredDocumentation","src":"429:340:18","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2631,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:18","nodeType":"FunctionDefinition","parameters":{"id":2627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2626,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:18","nodeType":"VariableDeclaration","scope":2631,"src":"801:18:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2625,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:18","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:18"},"returnParameters":{"id":2630,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2629,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2631,"src":"844:4:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2628,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:18","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:18"},"scope":2632,"src":"774:76:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2633,"src":"405:447:18","usedErrors":[]}],"src":"100:753:18"},"id":18},"@openzeppelin/contracts/utils/structs/EnumerableMap.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableMap.sol","exportedSymbols":{"EnumerableMap":[3754],"EnumerableSet":[4353]},"id":3755,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2634,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:19"},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"./EnumerableSet.sol","id":2635,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3755,"sourceUnit":4354,"src":"140:29:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableMap","contractDependencies":[],"contractKind":"library","documentation":{"id":2636,"nodeType":"StructuredDocumentation","src":"171:1353:19","text":" @dev Library for managing an enumerable variant of Solidity's\n https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`]\n type.\n Maps have the following properties:\n - Entries are added, removed, and checked for existence in constant time\n (O(1)).\n - Entries are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableMap for EnumerableMap.UintToAddressMap;\n     // Declare a set state variable\n     EnumerableMap.UintToAddressMap private myMap;\n }\n ```\n The following map types are supported:\n - `uint256 -> address` (`UintToAddressMap`) since v3.0.0\n - `address -> uint256` (`AddressToUintMap`) since v4.6.0\n - `bytes32 -> bytes32` (`Bytes32ToBytes32`) since v4.6.0\n - `uint256 -> uint256` (`UintToUintMap`) since v4.7.0\n - `bytes32 -> uint256` (`Bytes32ToUintMap`) since v4.7.0\n [WARNING]\n ====\n  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\n  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n  In order to clean an EnumerableMap, you can either remove all elements one by one or create a fresh instance using an array of EnumerableMap.\n ===="},"fullyImplemented":true,"id":3754,"linearizedBaseContracts":[3754],"name":"EnumerableMap","nameLocation":"1533:13:19","nodeType":"ContractDefinition","nodes":[{"global":false,"id":2640,"libraryName":{"id":2637,"name":"EnumerableSet","nodeType":"IdentifierPath","referencedDeclaration":4353,"src":"1559:13:19"},"nodeType":"UsingForDirective","src":"1553:49:19","typeName":{"id":2639,"nodeType":"UserDefinedTypeName","pathNode":{"id":2638,"name":"EnumerableSet.Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":3959,"src":"1577:24:19"},"referencedDeclaration":3959,"src":"1577:24:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3959_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}}},{"canonicalName":"EnumerableMap.Bytes32ToBytes32Map","id":2648,"members":[{"constant":false,"id":2643,"mutability":"mutable","name":"_keys","nameLocation":"2155:5:19","nodeType":"VariableDeclaration","scope":2648,"src":"2130:30:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3959_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2642,"nodeType":"UserDefinedTypeName","pathNode":{"id":2641,"name":"EnumerableSet.Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":3959,"src":"2130:24:19"},"referencedDeclaration":3959,"src":"2130:24:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3959_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":2647,"mutability":"mutable","name":"_values","nameLocation":"2198:7:19","nodeType":"VariableDeclaration","scope":2648,"src":"2170:35:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"},"typeName":{"id":2646,"keyType":{"id":2644,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2178:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"2170:27:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"},"valueType":{"id":2645,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2189:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}},"visibility":"internal"}],"name":"Bytes32ToBytes32Map","nameLocation":"2073:19:19","nodeType":"StructDefinition","scope":3754,"src":"2066:146:19","visibility":"public"},{"body":{"id":2675,"nodeType":"Block","src":"2567:76:19","statements":[{"expression":{"id":2667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2661,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"2577:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"}},"id":2664,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2647,"src":"2577:11:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"}},"id":2665,"indexExpression":{"id":2663,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"2589:3:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2577:16:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2656,"src":"2596:5:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2577:24:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2668,"nodeType":"ExpressionStatement","src":"2577:24:19"},{"expression":{"arguments":[{"id":2672,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2654,"src":"2632:3:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":2669,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"2618:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"}},"id":2670,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_keys","nodeType":"MemberAccess","referencedDeclaration":2643,"src":"2618:9:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3959_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":2671,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":3977,"src":"2618:13:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$3959_storage_ptr_$_t_bytes32_$returns$_t_bool_$bound_to$_t_struct$_Bytes32Set_$3959_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":2673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2618:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2660,"id":2674,"nodeType":"Return","src":"2611:25:19"}]},"documentation":{"id":2649,"nodeType":"StructuredDocumentation","src":"2218:216:19","text":" @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."},"id":2676,"implemented":true,"kind":"function","modifiers":[],"name":"set","nameLocation":"2448:3:19","nodeType":"FunctionDefinition","parameters":{"id":2657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2652,"mutability":"mutable","name":"map","nameLocation":"2489:3:19","nodeType":"VariableDeclaration","scope":2676,"src":"2461:31:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"},"typeName":{"id":2651,"nodeType":"UserDefinedTypeName","pathNode":{"id":2650,"name":"Bytes32ToBytes32Map","nodeType":"IdentifierPath","referencedDeclaration":2648,"src":"2461:19:19"},"referencedDeclaration":2648,"src":"2461:19:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"}},"visibility":"internal"},{"constant":false,"id":2654,"mutability":"mutable","name":"key","nameLocation":"2510:3:19","nodeType":"VariableDeclaration","scope":2676,"src":"2502:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2653,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2502:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2656,"mutability":"mutable","name":"value","nameLocation":"2531:5:19","nodeType":"VariableDeclaration","scope":2676,"src":"2523:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2655,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2523:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2451:91:19"},"returnParameters":{"id":2660,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2659,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2676,"src":"2561:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2658,"name":"bool","nodeType":"ElementaryTypeName","src":"2561:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2560:6:19"},"scope":3754,"src":"2439:204:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2699,"nodeType":"Block","src":"2897:78:19","statements":[{"expression":{"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"2907:23:19","subExpression":{"baseExpression":{"expression":{"id":2687,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"2914:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"}},"id":2688,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2647,"src":"2914:11:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"}},"id":2690,"indexExpression":{"id":2689,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"2926:3:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2914:16:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2692,"nodeType":"ExpressionStatement","src":"2907:23:19"},{"expression":{"arguments":[{"id":2696,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2682,"src":"2964:3:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":2693,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2680,"src":"2947:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"}},"id":2694,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_keys","nodeType":"MemberAccess","referencedDeclaration":2643,"src":"2947:9:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3959_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":2695,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":3995,"src":"2947:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$3959_storage_ptr_$_t_bytes32_$returns$_t_bool_$bound_to$_t_struct$_Bytes32Set_$3959_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":2697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2947:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2686,"id":2698,"nodeType":"Return","src":"2940:28:19"}]},"documentation":{"id":2677,"nodeType":"StructuredDocumentation","src":"2649:157:19","text":" @dev Removes a key-value pair from a map. O(1).\n Returns true if the key was removed from the map, that is if it was present."},"id":2700,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"2820:6:19","nodeType":"FunctionDefinition","parameters":{"id":2683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2680,"mutability":"mutable","name":"map","nameLocation":"2855:3:19","nodeType":"VariableDeclaration","scope":2700,"src":"2827:31:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"},"typeName":{"id":2679,"nodeType":"UserDefinedTypeName","pathNode":{"id":2678,"name":"Bytes32ToBytes32Map","nodeType":"IdentifierPath","referencedDeclaration":2648,"src":"2827:19:19"},"referencedDeclaration":2648,"src":"2827:19:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"}},"visibility":"internal"},{"constant":false,"id":2682,"mutability":"mutable","name":"key","nameLocation":"2868:3:19","nodeType":"VariableDeclaration","scope":2700,"src":"2860:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2681,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2860:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2826:46:19"},"returnParameters":{"id":2686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2685,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2700,"src":"2891:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2684,"name":"bool","nodeType":"ElementaryTypeName","src":"2891:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2890:6:19"},"scope":3754,"src":"2811:164:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2717,"nodeType":"Block","src":"3147:47:19","statements":[{"expression":{"arguments":[{"id":2714,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2706,"src":"3183:3:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":2711,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2704,"src":"3164:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"}},"id":2712,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_keys","nodeType":"MemberAccess","referencedDeclaration":2643,"src":"3164:9:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3959_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":2713,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":4013,"src":"3164:18:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$3959_storage_ptr_$_t_bytes32_$returns$_t_bool_$bound_to$_t_struct$_Bytes32Set_$3959_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) view returns (bool)"}},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3164:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2710,"id":2716,"nodeType":"Return","src":"3157:30:19"}]},"documentation":{"id":2701,"nodeType":"StructuredDocumentation","src":"2981:68:19","text":" @dev Returns true if the key is in the map. O(1)."},"id":2718,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"3063:8:19","nodeType":"FunctionDefinition","parameters":{"id":2707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2704,"mutability":"mutable","name":"map","nameLocation":"3100:3:19","nodeType":"VariableDeclaration","scope":2718,"src":"3072:31:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"},"typeName":{"id":2703,"nodeType":"UserDefinedTypeName","pathNode":{"id":2702,"name":"Bytes32ToBytes32Map","nodeType":"IdentifierPath","referencedDeclaration":2648,"src":"3072:19:19"},"referencedDeclaration":2648,"src":"3072:19:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"}},"visibility":"internal"},{"constant":false,"id":2706,"mutability":"mutable","name":"key","nameLocation":"3113:3:19","nodeType":"VariableDeclaration","scope":2718,"src":"3105:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2705,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3105:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3071:46:19"},"returnParameters":{"id":2710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2718,"src":"3141:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2708,"name":"bool","nodeType":"ElementaryTypeName","src":"3141:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3140:6:19"},"scope":3754,"src":"3054:140:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2732,"nodeType":"Block","src":"3365:42:19","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":2727,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2722,"src":"3382:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"}},"id":2728,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_keys","nodeType":"MemberAccess","referencedDeclaration":2643,"src":"3382:9:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3959_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":2729,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":4028,"src":"3382:16:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$3959_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Bytes32Set_$3959_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer) view returns (uint256)"}},"id":2730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3382:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2726,"id":2731,"nodeType":"Return","src":"3375:25:19"}]},"documentation":{"id":2719,"nodeType":"StructuredDocumentation","src":"3200:79:19","text":" @dev Returns the number of key-value pairs in the map. O(1)."},"id":2733,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"3293:6:19","nodeType":"FunctionDefinition","parameters":{"id":2723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2722,"mutability":"mutable","name":"map","nameLocation":"3328:3:19","nodeType":"VariableDeclaration","scope":2733,"src":"3300:31:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"},"typeName":{"id":2721,"nodeType":"UserDefinedTypeName","pathNode":{"id":2720,"name":"Bytes32ToBytes32Map","nodeType":"IdentifierPath","referencedDeclaration":2648,"src":"3300:19:19"},"referencedDeclaration":2648,"src":"3300:19:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"}},"visibility":"internal"}],"src":"3299:33:19"},"returnParameters":{"id":2726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2725,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2733,"src":"3356:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2724,"name":"uint256","nodeType":"ElementaryTypeName","src":"3356:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3355:9:19"},"scope":3754,"src":"3284:123:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2761,"nodeType":"Block","src":"3861:90:19","statements":[{"assignments":[2747],"declarations":[{"constant":false,"id":2747,"mutability":"mutable","name":"key","nameLocation":"3879:3:19","nodeType":"VariableDeclaration","scope":2761,"src":"3871:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2746,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3871:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2753,"initialValue":{"arguments":[{"id":2751,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2739,"src":"3898:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2748,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"3885:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"}},"id":2749,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_keys","nodeType":"MemberAccess","referencedDeclaration":2643,"src":"3885:9:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3959_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":2750,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"at","nodeType":"MemberAccess","referencedDeclaration":4046,"src":"3885:12:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$3959_storage_ptr_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_struct$_Bytes32Set_$3959_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,uint256) view returns (bytes32)"}},"id":2752,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3885:19:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3871:33:19"},{"expression":{"components":[{"id":2754,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"3922:3:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"expression":{"id":2755,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2737,"src":"3927:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"}},"id":2756,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2647,"src":"3927:11:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"}},"id":2758,"indexExpression":{"id":2757,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2747,"src":"3939:3:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3927:16:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2759,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3921:23:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes32_$","typeString":"tuple(bytes32,bytes32)"}},"functionReturnParameters":2745,"id":2760,"nodeType":"Return","src":"3914:30:19"}]},"documentation":{"id":2734,"nodeType":"StructuredDocumentation","src":"3413:342:19","text":" @dev Returns the key-value pair stored at position `index` in the map. O(1).\n Note that there are no guarantees on the ordering of entries inside the\n array, and it may change when more entries are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2762,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"3769:2:19","nodeType":"FunctionDefinition","parameters":{"id":2740,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2737,"mutability":"mutable","name":"map","nameLocation":"3800:3:19","nodeType":"VariableDeclaration","scope":2762,"src":"3772:31:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"},"typeName":{"id":2736,"nodeType":"UserDefinedTypeName","pathNode":{"id":2735,"name":"Bytes32ToBytes32Map","nodeType":"IdentifierPath","referencedDeclaration":2648,"src":"3772:19:19"},"referencedDeclaration":2648,"src":"3772:19:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"}},"visibility":"internal"},{"constant":false,"id":2739,"mutability":"mutable","name":"index","nameLocation":"3813:5:19","nodeType":"VariableDeclaration","scope":2762,"src":"3805:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2738,"name":"uint256","nodeType":"ElementaryTypeName","src":"3805:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3771:48:19"},"returnParameters":{"id":2745,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2742,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2762,"src":"3843:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2741,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3843:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2744,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2762,"src":"3852:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2743,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3852:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3842:18:19"},"scope":3754,"src":"3760:191:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2805,"nodeType":"Block","src":"4193:198:19","statements":[{"assignments":[2776],"declarations":[{"constant":false,"id":2776,"mutability":"mutable","name":"value","nameLocation":"4211:5:19","nodeType":"VariableDeclaration","scope":2805,"src":"4203:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2775,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4203:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2781,"initialValue":{"baseExpression":{"expression":{"id":2777,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2766,"src":"4219:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"}},"id":2778,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2647,"src":"4219:11:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"}},"id":2780,"indexExpression":{"id":2779,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"4231:3:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4219:16:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4203:32:19"},{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2782,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"4249:5:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":2785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4266:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4258:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2783,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4258:7:19","typeDescriptions":{}}},"id":2786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4258:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4249:19:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2803,"nodeType":"Block","src":"4340:45:19","statements":[{"expression":{"components":[{"hexValue":"74727565","id":2799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4362:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2800,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"4368:5:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2801,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4361:13:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes32_$","typeString":"tuple(bool,bytes32)"}},"functionReturnParameters":2774,"id":2802,"nodeType":"Return","src":"4354:20:19"}]},"id":2804,"nodeType":"IfStatement","src":"4245:140:19","trueBody":{"id":2798,"nodeType":"Block","src":"4270:64:19","statements":[{"expression":{"components":[{"arguments":[{"id":2789,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2766,"src":"4301:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"}},{"id":2790,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2768,"src":"4306:3:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2788,"name":"contains","nodeType":"Identifier","overloadedDeclarations":[2718,2947,3160,3409,3631],"referencedDeclaration":2718,"src":"4292:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"}},"id":2791,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4292:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"hexValue":"30","id":2794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4320:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2793,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4312:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2792,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4312:7:19","typeDescriptions":{}}},"id":2795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4312:10:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":2796,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4291:32:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes32_$","typeString":"tuple(bool,bytes32)"}},"functionReturnParameters":2774,"id":2797,"nodeType":"Return","src":"4284:39:19"}]}}]},"documentation":{"id":2763,"nodeType":"StructuredDocumentation","src":"3957:131:19","text":" @dev Tries to returns the value associated with `key`.  O(1).\n Does not revert if `key` is not in the map."},"id":2806,"implemented":true,"kind":"function","modifiers":[],"name":"tryGet","nameLocation":"4102:6:19","nodeType":"FunctionDefinition","parameters":{"id":2769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2766,"mutability":"mutable","name":"map","nameLocation":"4137:3:19","nodeType":"VariableDeclaration","scope":2806,"src":"4109:31:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"},"typeName":{"id":2765,"nodeType":"UserDefinedTypeName","pathNode":{"id":2764,"name":"Bytes32ToBytes32Map","nodeType":"IdentifierPath","referencedDeclaration":2648,"src":"4109:19:19"},"referencedDeclaration":2648,"src":"4109:19:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"}},"visibility":"internal"},{"constant":false,"id":2768,"mutability":"mutable","name":"key","nameLocation":"4150:3:19","nodeType":"VariableDeclaration","scope":2806,"src":"4142:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2767,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4142:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4108:46:19"},"returnParameters":{"id":2774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2771,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2806,"src":"4178:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2770,"name":"bool","nodeType":"ElementaryTypeName","src":"4178:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2773,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2806,"src":"4184:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2772,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4184:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4177:15:19"},"scope":3754,"src":"4093:298:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2838,"nodeType":"Block","src":"4634:156:19","statements":[{"assignments":[2818],"declarations":[{"constant":false,"id":2818,"mutability":"mutable","name":"value","nameLocation":"4652:5:19","nodeType":"VariableDeclaration","scope":2838,"src":"4644:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2817,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4644:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2823,"initialValue":{"baseExpression":{"expression":{"id":2819,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"4660:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"}},"id":2820,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2647,"src":"4660:11:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"}},"id":2822,"indexExpression":{"id":2821,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"4672:3:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4660:16:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"4644:32:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2825,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"4694:5:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4703:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4694:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2829,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"4717:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"}},{"id":2830,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"4722:3:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2828,"name":"contains","nodeType":"Identifier","overloadedDeclarations":[2718,2947,3160,3409,3631],"referencedDeclaration":2718,"src":"4708:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"}},"id":2831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4708:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4694:32:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"456e756d657261626c654d61703a206e6f6e6578697374656e74206b6579","id":2833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4728:32:19","typeDescriptions":{"typeIdentifier":"t_stringliteral_d3551e30d3095fd81287b88f7139bb09818e34280e85ee821994ebaebbed7072","typeString":"literal_string \"EnumerableMap: nonexistent key\""},"value":"EnumerableMap: nonexistent key"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d3551e30d3095fd81287b88f7139bb09818e34280e85ee821994ebaebbed7072","typeString":"literal_string \"EnumerableMap: nonexistent key\""}],"id":2824,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4686:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2834,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4686:75:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2835,"nodeType":"ExpressionStatement","src":"4686:75:19"},{"expression":{"id":2836,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"4778:5:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2816,"id":2837,"nodeType":"Return","src":"4771:12:19"}]},"documentation":{"id":2807,"nodeType":"StructuredDocumentation","src":"4397:141:19","text":" @dev Returns the value associated with `key`.  O(1).\n Requirements:\n - `key` must be in the map."},"id":2839,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"4552:3:19","nodeType":"FunctionDefinition","parameters":{"id":2813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2810,"mutability":"mutable","name":"map","nameLocation":"4584:3:19","nodeType":"VariableDeclaration","scope":2839,"src":"4556:31:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"},"typeName":{"id":2809,"nodeType":"UserDefinedTypeName","pathNode":{"id":2808,"name":"Bytes32ToBytes32Map","nodeType":"IdentifierPath","referencedDeclaration":2648,"src":"4556:19:19"},"referencedDeclaration":2648,"src":"4556:19:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"}},"visibility":"internal"},{"constant":false,"id":2812,"mutability":"mutable","name":"key","nameLocation":"4597:3:19","nodeType":"VariableDeclaration","scope":2839,"src":"4589:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2811,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4589:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4555:46:19"},"returnParameters":{"id":2816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2815,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2839,"src":"4625:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2814,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4625:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4624:9:19"},"scope":3754,"src":"4543:247:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2873,"nodeType":"Block","src":"5221:136:19","statements":[{"assignments":[2853],"declarations":[{"constant":false,"id":2853,"mutability":"mutable","name":"value","nameLocation":"5239:5:19","nodeType":"VariableDeclaration","scope":2873,"src":"5231:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2852,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5231:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2858,"initialValue":{"baseExpression":{"expression":{"id":2854,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"5247:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"}},"id":2855,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2647,"src":"5247:11:19","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_bytes32_$","typeString":"mapping(bytes32 => bytes32)"}},"id":2857,"indexExpression":{"id":2856,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"5259:3:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5247:16:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"5231:32:19"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":2862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2860,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2853,"src":"5281:5:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5290:1:19","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5281:10:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":2864,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2843,"src":"5304:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"}},{"id":2865,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2845,"src":"5309:3:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2863,"name":"contains","nodeType":"Identifier","overloadedDeclarations":[2718,2947,3160,3409,3631],"referencedDeclaration":2718,"src":"5295:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"}},"id":2866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5295:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5281:32:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2868,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2847,"src":"5315:12:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2859,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5273:7:19","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5273:55:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2870,"nodeType":"ExpressionStatement","src":"5273:55:19"},{"expression":{"id":2871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2853,"src":"5345:5:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2851,"id":2872,"nodeType":"Return","src":"5338:12:19"}]},"documentation":{"id":2840,"nodeType":"StructuredDocumentation","src":"4796:271:19","text":" @dev Same as {_get}, with a custom error message when `key` is not in the map.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {_tryGet}."},"id":2874,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"5081:3:19","nodeType":"FunctionDefinition","parameters":{"id":2848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2843,"mutability":"mutable","name":"map","nameLocation":"5122:3:19","nodeType":"VariableDeclaration","scope":2874,"src":"5094:31:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"},"typeName":{"id":2842,"nodeType":"UserDefinedTypeName","pathNode":{"id":2841,"name":"Bytes32ToBytes32Map","nodeType":"IdentifierPath","referencedDeclaration":2648,"src":"5094:19:19"},"referencedDeclaration":2648,"src":"5094:19:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"}},"visibility":"internal"},{"constant":false,"id":2845,"mutability":"mutable","name":"key","nameLocation":"5143:3:19","nodeType":"VariableDeclaration","scope":2874,"src":"5135:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2844,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5135:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2847,"mutability":"mutable","name":"errorMessage","nameLocation":"5170:12:19","nodeType":"VariableDeclaration","scope":2874,"src":"5156:26:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2846,"name":"string","nodeType":"ElementaryTypeName","src":"5156:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5084:104:19"},"returnParameters":{"id":2851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2850,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2874,"src":"5212:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2849,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5212:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5211:9:19"},"scope":3754,"src":"5072:285:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableMap.UintToUintMap","id":2878,"members":[{"constant":false,"id":2877,"mutability":"mutable","name":"_inner","nameLocation":"5436:6:19","nodeType":"VariableDeclaration","scope":2878,"src":"5416:26:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"},"typeName":{"id":2876,"nodeType":"UserDefinedTypeName","pathNode":{"id":2875,"name":"Bytes32ToBytes32Map","nodeType":"IdentifierPath","referencedDeclaration":2648,"src":"5416:19:19"},"referencedDeclaration":2648,"src":"5416:19:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"}},"visibility":"internal"}],"name":"UintToUintMap","nameLocation":"5392:13:19","nodeType":"StructDefinition","scope":3754,"src":"5385:64:19","visibility":"public"},{"body":{"id":2904,"nodeType":"Block","src":"5798:69:19","statements":[{"expression":{"arguments":[{"expression":{"id":2892,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2882,"src":"5819:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2878_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap storage pointer"}},"id":2893,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2877,"src":"5819:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":2896,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2884,"src":"5839:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2895,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5831:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2894,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5831:7:19","typeDescriptions":{}}},"id":2897,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5831:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":2900,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2886,"src":"5853:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5845:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2898,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5845:7:19","typeDescriptions":{}}},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5845:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2891,"name":"set","nodeType":"Identifier","overloadedDeclarations":[2676,2905,3118,3355,3595],"referencedDeclaration":2676,"src":"5815:3:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,bytes32) returns (bool)"}},"id":2902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5815:45:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2890,"id":2903,"nodeType":"Return","src":"5808:52:19"}]},"documentation":{"id":2879,"nodeType":"StructuredDocumentation","src":"5455:216:19","text":" @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."},"id":2905,"implemented":true,"kind":"function","modifiers":[],"name":"set","nameLocation":"5685:3:19","nodeType":"FunctionDefinition","parameters":{"id":2887,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2882,"mutability":"mutable","name":"map","nameLocation":"5720:3:19","nodeType":"VariableDeclaration","scope":2905,"src":"5698:25:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2878_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"},"typeName":{"id":2881,"nodeType":"UserDefinedTypeName","pathNode":{"id":2880,"name":"UintToUintMap","nodeType":"IdentifierPath","referencedDeclaration":2878,"src":"5698:13:19"},"referencedDeclaration":2878,"src":"5698:13:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2878_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"}},"visibility":"internal"},{"constant":false,"id":2884,"mutability":"mutable","name":"key","nameLocation":"5741:3:19","nodeType":"VariableDeclaration","scope":2905,"src":"5733:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2883,"name":"uint256","nodeType":"ElementaryTypeName","src":"5733:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2886,"mutability":"mutable","name":"value","nameLocation":"5762:5:19","nodeType":"VariableDeclaration","scope":2905,"src":"5754:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2885,"name":"uint256","nodeType":"ElementaryTypeName","src":"5754:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5688:85:19"},"returnParameters":{"id":2890,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2889,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2905,"src":"5792:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2888,"name":"bool","nodeType":"ElementaryTypeName","src":"5792:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5791:6:19"},"scope":3754,"src":"5676:191:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2925,"nodeType":"Block","src":"6106:56:19","statements":[{"expression":{"arguments":[{"expression":{"id":2917,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2909,"src":"6130:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2878_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap storage pointer"}},"id":2918,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2877,"src":"6130:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":2921,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2911,"src":"6150:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2920,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6142:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2919,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6142:7:19","typeDescriptions":{}}},"id":2922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6142:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2916,"name":"remove","nodeType":"Identifier","overloadedDeclarations":[2700,2926,3139,3382,3613],"referencedDeclaration":2700,"src":"6123:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) returns (bool)"}},"id":2923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6123:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2915,"id":2924,"nodeType":"Return","src":"6116:39:19"}]},"documentation":{"id":2906,"nodeType":"StructuredDocumentation","src":"5873:148:19","text":" @dev Removes a value from a set. O(1).\n Returns true if the key was removed from the map, that is if it was present."},"id":2926,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6035:6:19","nodeType":"FunctionDefinition","parameters":{"id":2912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2909,"mutability":"mutable","name":"map","nameLocation":"6064:3:19","nodeType":"VariableDeclaration","scope":2926,"src":"6042:25:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2878_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"},"typeName":{"id":2908,"nodeType":"UserDefinedTypeName","pathNode":{"id":2907,"name":"UintToUintMap","nodeType":"IdentifierPath","referencedDeclaration":2878,"src":"6042:13:19"},"referencedDeclaration":2878,"src":"6042:13:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2878_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"}},"visibility":"internal"},{"constant":false,"id":2911,"mutability":"mutable","name":"key","nameLocation":"6077:3:19","nodeType":"VariableDeclaration","scope":2926,"src":"6069:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2910,"name":"uint256","nodeType":"ElementaryTypeName","src":"6069:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6041:40:19"},"returnParameters":{"id":2915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2914,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2926,"src":"6100:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2913,"name":"bool","nodeType":"ElementaryTypeName","src":"6100:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6099:6:19"},"scope":3754,"src":"6026:136:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2946,"nodeType":"Block","src":"6328:58:19","statements":[{"expression":{"arguments":[{"expression":{"id":2938,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"6354:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2878_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap storage pointer"}},"id":2939,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2877,"src":"6354:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":2942,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"6374:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2941,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6366:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2940,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6366:7:19","typeDescriptions":{}}},"id":2943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6366:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2937,"name":"contains","nodeType":"Identifier","overloadedDeclarations":[2718,2947,3160,3409,3631],"referencedDeclaration":2718,"src":"6345:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"}},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6345:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2936,"id":2945,"nodeType":"Return","src":"6338:41:19"}]},"documentation":{"id":2927,"nodeType":"StructuredDocumentation","src":"6168:68:19","text":" @dev Returns true if the key is in the map. O(1)."},"id":2947,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6250:8:19","nodeType":"FunctionDefinition","parameters":{"id":2933,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2930,"mutability":"mutable","name":"map","nameLocation":"6281:3:19","nodeType":"VariableDeclaration","scope":2947,"src":"6259:25:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2878_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"},"typeName":{"id":2929,"nodeType":"UserDefinedTypeName","pathNode":{"id":2928,"name":"UintToUintMap","nodeType":"IdentifierPath","referencedDeclaration":2878,"src":"6259:13:19"},"referencedDeclaration":2878,"src":"6259:13:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2878_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"}},"visibility":"internal"},{"constant":false,"id":2932,"mutability":"mutable","name":"key","nameLocation":"6294:3:19","nodeType":"VariableDeclaration","scope":2947,"src":"6286:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2931,"name":"uint256","nodeType":"ElementaryTypeName","src":"6286:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6258:40:19"},"returnParameters":{"id":2936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2935,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2947,"src":"6322:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2934,"name":"bool","nodeType":"ElementaryTypeName","src":"6322:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6321:6:19"},"scope":3754,"src":"6241:145:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2961,"nodeType":"Block","src":"6544:42:19","statements":[{"expression":{"arguments":[{"expression":{"id":2957,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"6568:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2878_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap storage pointer"}},"id":2958,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2877,"src":"6568:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}],"id":2956,"name":"length","nodeType":"Identifier","overloadedDeclarations":[2733,2962,3175,3424,3646],"referencedDeclaration":2733,"src":"6561:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer) view returns (uint256)"}},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6561:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2955,"id":2960,"nodeType":"Return","src":"6554:25:19"}]},"documentation":{"id":2948,"nodeType":"StructuredDocumentation","src":"6392:72:19","text":" @dev Returns the number of elements in the map. O(1)."},"id":2962,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6478:6:19","nodeType":"FunctionDefinition","parameters":{"id":2952,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2951,"mutability":"mutable","name":"map","nameLocation":"6507:3:19","nodeType":"VariableDeclaration","scope":2962,"src":"6485:25:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2878_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"},"typeName":{"id":2950,"nodeType":"UserDefinedTypeName","pathNode":{"id":2949,"name":"UintToUintMap","nodeType":"IdentifierPath","referencedDeclaration":2878,"src":"6485:13:19"},"referencedDeclaration":2878,"src":"6485:13:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2878_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"}},"visibility":"internal"}],"src":"6484:27:19"},"returnParameters":{"id":2955,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2954,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2962,"src":"6535:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2953,"name":"uint256","nodeType":"ElementaryTypeName","src":"6535:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6534:9:19"},"scope":3754,"src":"6469:117:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2995,"nodeType":"Block","src":"7018:116:19","statements":[{"assignments":[2976,2978],"declarations":[{"constant":false,"id":2976,"mutability":"mutable","name":"key","nameLocation":"7037:3:19","nodeType":"VariableDeclaration","scope":2995,"src":"7029:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2975,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7029:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2978,"mutability":"mutable","name":"value","nameLocation":"7050:5:19","nodeType":"VariableDeclaration","scope":2995,"src":"7042:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2977,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7042:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2984,"initialValue":{"arguments":[{"expression":{"id":2980,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2966,"src":"7062:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2878_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap storage pointer"}},"id":2981,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2877,"src":"7062:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"id":2982,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2968,"src":"7074:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2979,"name":"at","nodeType":"Identifier","overloadedDeclarations":[2762,2996,3215,3464,3677],"referencedDeclaration":2762,"src":"7059:2:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,uint256) view returns (bytes32,bytes32)"}},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7059:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes32_$","typeString":"tuple(bytes32,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"7028:52:19"},{"expression":{"components":[{"arguments":[{"id":2987,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2976,"src":"7106:3:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2986,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7098:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2985,"name":"uint256","nodeType":"ElementaryTypeName","src":"7098:7:19","typeDescriptions":{}}},"id":2988,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7098:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":2991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2978,"src":"7120:5:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7112:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2989,"name":"uint256","nodeType":"ElementaryTypeName","src":"7112:7:19","typeDescriptions":{}}},"id":2992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7112:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2993,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7097:30:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"functionReturnParameters":2974,"id":2994,"nodeType":"Return","src":"7090:37:19"}]},"documentation":{"id":2963,"nodeType":"StructuredDocumentation","src":"6592:326:19","text":" @dev Returns the element stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2996,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"6932:2:19","nodeType":"FunctionDefinition","parameters":{"id":2969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2966,"mutability":"mutable","name":"map","nameLocation":"6957:3:19","nodeType":"VariableDeclaration","scope":2996,"src":"6935:25:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2878_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"},"typeName":{"id":2965,"nodeType":"UserDefinedTypeName","pathNode":{"id":2964,"name":"UintToUintMap","nodeType":"IdentifierPath","referencedDeclaration":2878,"src":"6935:13:19"},"referencedDeclaration":2878,"src":"6935:13:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2878_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"}},"visibility":"internal"},{"constant":false,"id":2968,"mutability":"mutable","name":"index","nameLocation":"6970:5:19","nodeType":"VariableDeclaration","scope":2996,"src":"6962:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2967,"name":"uint256","nodeType":"ElementaryTypeName","src":"6962:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6934:42:19"},"returnParameters":{"id":2974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2971,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2996,"src":"7000:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2970,"name":"uint256","nodeType":"ElementaryTypeName","src":"7000:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2973,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2996,"src":"7009:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2972,"name":"uint256","nodeType":"ElementaryTypeName","src":"7009:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6999:18:19"},"scope":3754,"src":"6923:211:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3029,"nodeType":"Block","src":"7370:123:19","statements":[{"assignments":[3010,3012],"declarations":[{"constant":false,"id":3010,"mutability":"mutable","name":"success","nameLocation":"7386:7:19","nodeType":"VariableDeclaration","scope":3029,"src":"7381:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3009,"name":"bool","nodeType":"ElementaryTypeName","src":"7381:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3012,"mutability":"mutable","name":"value","nameLocation":"7403:5:19","nodeType":"VariableDeclaration","scope":3029,"src":"7395:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3011,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7395:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3021,"initialValue":{"arguments":[{"expression":{"id":3014,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3000,"src":"7419:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2878_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap storage pointer"}},"id":3015,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2877,"src":"7419:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":3018,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3002,"src":"7439:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7431:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3016,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7431:7:19","typeDescriptions":{}}},"id":3019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7431:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3013,"name":"tryGet","nodeType":"Identifier","overloadedDeclarations":[2806,3030,3255,3504,3708],"referencedDeclaration":2806,"src":"7412:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes32_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool,bytes32)"}},"id":3020,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7412:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes32_$","typeString":"tuple(bool,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"7380:64:19"},{"expression":{"components":[{"id":3022,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3010,"src":"7462:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"id":3025,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3012,"src":"7479:5:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3024,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7471:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3023,"name":"uint256","nodeType":"ElementaryTypeName","src":"7471:7:19","typeDescriptions":{}}},"id":3026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7471:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3027,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7461:25:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3008,"id":3028,"nodeType":"Return","src":"7454:32:19"}]},"documentation":{"id":2997,"nodeType":"StructuredDocumentation","src":"7140:131:19","text":" @dev Tries to returns the value associated with `key`.  O(1).\n Does not revert if `key` is not in the map."},"id":3030,"implemented":true,"kind":"function","modifiers":[],"name":"tryGet","nameLocation":"7285:6:19","nodeType":"FunctionDefinition","parameters":{"id":3003,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3000,"mutability":"mutable","name":"map","nameLocation":"7314:3:19","nodeType":"VariableDeclaration","scope":3030,"src":"7292:25:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2878_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"},"typeName":{"id":2999,"nodeType":"UserDefinedTypeName","pathNode":{"id":2998,"name":"UintToUintMap","nodeType":"IdentifierPath","referencedDeclaration":2878,"src":"7292:13:19"},"referencedDeclaration":2878,"src":"7292:13:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2878_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"}},"visibility":"internal"},{"constant":false,"id":3002,"mutability":"mutable","name":"key","nameLocation":"7327:3:19","nodeType":"VariableDeclaration","scope":3030,"src":"7319:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3001,"name":"uint256","nodeType":"ElementaryTypeName","src":"7319:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7291:40:19"},"returnParameters":{"id":3008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3005,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3030,"src":"7355:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3004,"name":"bool","nodeType":"ElementaryTypeName","src":"7355:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3007,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3030,"src":"7361:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3006,"name":"uint256","nodeType":"ElementaryTypeName","src":"7361:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7354:15:19"},"scope":3754,"src":"7276:217:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3053,"nodeType":"Block","src":"7730:62:19","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":3044,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3034,"src":"7759:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2878_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap storage pointer"}},"id":3045,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2877,"src":"7759:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":3048,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3036,"src":"7779:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3047,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7771:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3046,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7771:7:19","typeDescriptions":{}}},"id":3049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7771:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3043,"name":"get","nodeType":"Identifier","overloadedDeclarations":[2839,2874,3054,3081,3285,3318,3534,3567,3729,3753],"referencedDeclaration":2839,"src":"7755:3:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bytes32)"}},"id":3050,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7755:29:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7747:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3041,"name":"uint256","nodeType":"ElementaryTypeName","src":"7747:7:19","typeDescriptions":{}}},"id":3051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7747:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3040,"id":3052,"nodeType":"Return","src":"7740:45:19"}]},"documentation":{"id":3031,"nodeType":"StructuredDocumentation","src":"7499:141:19","text":" @dev Returns the value associated with `key`.  O(1).\n Requirements:\n - `key` must be in the map."},"id":3054,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"7654:3:19","nodeType":"FunctionDefinition","parameters":{"id":3037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3034,"mutability":"mutable","name":"map","nameLocation":"7680:3:19","nodeType":"VariableDeclaration","scope":3054,"src":"7658:25:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2878_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"},"typeName":{"id":3033,"nodeType":"UserDefinedTypeName","pathNode":{"id":3032,"name":"UintToUintMap","nodeType":"IdentifierPath","referencedDeclaration":2878,"src":"7658:13:19"},"referencedDeclaration":2878,"src":"7658:13:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2878_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"}},"visibility":"internal"},{"constant":false,"id":3036,"mutability":"mutable","name":"key","nameLocation":"7693:3:19","nodeType":"VariableDeclaration","scope":3054,"src":"7685:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3035,"name":"uint256","nodeType":"ElementaryTypeName","src":"7685:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7657:40:19"},"returnParameters":{"id":3040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3039,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3054,"src":"7721:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3038,"name":"uint256","nodeType":"ElementaryTypeName","src":"7721:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7720:9:19"},"scope":3754,"src":"7645:147:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3080,"nodeType":"Block","src":"8215:76:19","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":3070,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"8244:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2878_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap storage pointer"}},"id":3071,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2877,"src":"8244:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":3074,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3060,"src":"8264:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8256:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3072,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8256:7:19","typeDescriptions":{}}},"id":3075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8256:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3076,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3062,"src":"8270:12:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3069,"name":"get","nodeType":"Identifier","overloadedDeclarations":[2839,2874,3054,3081,3285,3318,3534,3567,3729,3753],"referencedDeclaration":2874,"src":"8240:3:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr_$_t_bytes32_$_t_string_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,string memory) view returns (bytes32)"}},"id":3077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8240:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8232:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3067,"name":"uint256","nodeType":"ElementaryTypeName","src":"8232:7:19","typeDescriptions":{}}},"id":3078,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8232:52:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3066,"id":3079,"nodeType":"Return","src":"8225:59:19"}]},"documentation":{"id":3055,"nodeType":"StructuredDocumentation","src":"7798:269:19","text":" @dev Same as {get}, with a custom error message when `key` is not in the map.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryGet}."},"id":3081,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"8081:3:19","nodeType":"FunctionDefinition","parameters":{"id":3063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3058,"mutability":"mutable","name":"map","nameLocation":"8116:3:19","nodeType":"VariableDeclaration","scope":3081,"src":"8094:25:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2878_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"},"typeName":{"id":3057,"nodeType":"UserDefinedTypeName","pathNode":{"id":3056,"name":"UintToUintMap","nodeType":"IdentifierPath","referencedDeclaration":2878,"src":"8094:13:19"},"referencedDeclaration":2878,"src":"8094:13:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintToUintMap_$2878_storage_ptr","typeString":"struct EnumerableMap.UintToUintMap"}},"visibility":"internal"},{"constant":false,"id":3060,"mutability":"mutable","name":"key","nameLocation":"8137:3:19","nodeType":"VariableDeclaration","scope":3081,"src":"8129:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3059,"name":"uint256","nodeType":"ElementaryTypeName","src":"8129:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3062,"mutability":"mutable","name":"errorMessage","nameLocation":"8164:12:19","nodeType":"VariableDeclaration","scope":3081,"src":"8150:26:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3061,"name":"string","nodeType":"ElementaryTypeName","src":"8150:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"8084:98:19"},"returnParameters":{"id":3066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3065,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3081,"src":"8206:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3064,"name":"uint256","nodeType":"ElementaryTypeName","src":"8206:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8205:9:19"},"scope":3754,"src":"8072:219:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableMap.UintToAddressMap","id":3085,"members":[{"constant":false,"id":3084,"mutability":"mutable","name":"_inner","nameLocation":"8376:6:19","nodeType":"VariableDeclaration","scope":3085,"src":"8356:26:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"},"typeName":{"id":3083,"nodeType":"UserDefinedTypeName","pathNode":{"id":3082,"name":"Bytes32ToBytes32Map","nodeType":"IdentifierPath","referencedDeclaration":2648,"src":"8356:19:19"},"referencedDeclaration":2648,"src":"8356:19:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"}},"visibility":"internal"}],"name":"UintToAddressMap","nameLocation":"8329:16:19","nodeType":"StructDefinition","scope":3754,"src":"8322:67:19","visibility":"public"},{"body":{"id":3117,"nodeType":"Block","src":"8741:87:19","statements":[{"expression":{"arguments":[{"expression":{"id":3099,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3089,"src":"8762:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3085_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap storage pointer"}},"id":3100,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3084,"src":"8762:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":3103,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3091,"src":"8782:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8774:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3101,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8774:7:19","typeDescriptions":{}}},"id":3104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8774:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"arguments":[{"id":3111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3093,"src":"8812:5:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8804:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3109,"name":"uint160","nodeType":"ElementaryTypeName","src":"8804:7:19","typeDescriptions":{}}},"id":3112,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8804:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8796:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3107,"name":"uint256","nodeType":"ElementaryTypeName","src":"8796:7:19","typeDescriptions":{}}},"id":3113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8796:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3106,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8788:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3105,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8788:7:19","typeDescriptions":{}}},"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8788:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3098,"name":"set","nodeType":"Identifier","overloadedDeclarations":[2676,2905,3118,3355,3595],"referencedDeclaration":2676,"src":"8758:3:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,bytes32) returns (bool)"}},"id":3115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8758:63:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3097,"id":3116,"nodeType":"Return","src":"8751:70:19"}]},"documentation":{"id":3086,"nodeType":"StructuredDocumentation","src":"8395:216:19","text":" @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."},"id":3118,"implemented":true,"kind":"function","modifiers":[],"name":"set","nameLocation":"8625:3:19","nodeType":"FunctionDefinition","parameters":{"id":3094,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3089,"mutability":"mutable","name":"map","nameLocation":"8663:3:19","nodeType":"VariableDeclaration","scope":3118,"src":"8638:28:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3085_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"},"typeName":{"id":3088,"nodeType":"UserDefinedTypeName","pathNode":{"id":3087,"name":"UintToAddressMap","nodeType":"IdentifierPath","referencedDeclaration":3085,"src":"8638:16:19"},"referencedDeclaration":3085,"src":"8638:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3085_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"}},"visibility":"internal"},{"constant":false,"id":3091,"mutability":"mutable","name":"key","nameLocation":"8684:3:19","nodeType":"VariableDeclaration","scope":3118,"src":"8676:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3090,"name":"uint256","nodeType":"ElementaryTypeName","src":"8676:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3093,"mutability":"mutable","name":"value","nameLocation":"8705:5:19","nodeType":"VariableDeclaration","scope":3118,"src":"8697:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3092,"name":"address","nodeType":"ElementaryTypeName","src":"8697:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8628:88:19"},"returnParameters":{"id":3097,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3096,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3118,"src":"8735:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3095,"name":"bool","nodeType":"ElementaryTypeName","src":"8735:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8734:6:19"},"scope":3754,"src":"8616:212:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3138,"nodeType":"Block","src":"9070:56:19","statements":[{"expression":{"arguments":[{"expression":{"id":3130,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3122,"src":"9094:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3085_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap storage pointer"}},"id":3131,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3084,"src":"9094:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":3134,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3124,"src":"9114:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9106:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3132,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9106:7:19","typeDescriptions":{}}},"id":3135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9106:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3129,"name":"remove","nodeType":"Identifier","overloadedDeclarations":[2700,2926,3139,3382,3613],"referencedDeclaration":2700,"src":"9087:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) returns (bool)"}},"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9087:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3128,"id":3137,"nodeType":"Return","src":"9080:39:19"}]},"documentation":{"id":3119,"nodeType":"StructuredDocumentation","src":"8834:148:19","text":" @dev Removes a value from a set. O(1).\n Returns true if the key was removed from the map, that is if it was present."},"id":3139,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8996:6:19","nodeType":"FunctionDefinition","parameters":{"id":3125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3122,"mutability":"mutable","name":"map","nameLocation":"9028:3:19","nodeType":"VariableDeclaration","scope":3139,"src":"9003:28:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3085_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"},"typeName":{"id":3121,"nodeType":"UserDefinedTypeName","pathNode":{"id":3120,"name":"UintToAddressMap","nodeType":"IdentifierPath","referencedDeclaration":3085,"src":"9003:16:19"},"referencedDeclaration":3085,"src":"9003:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3085_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"}},"visibility":"internal"},{"constant":false,"id":3124,"mutability":"mutable","name":"key","nameLocation":"9041:3:19","nodeType":"VariableDeclaration","scope":3139,"src":"9033:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3123,"name":"uint256","nodeType":"ElementaryTypeName","src":"9033:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9002:43:19"},"returnParameters":{"id":3128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3139,"src":"9064:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3126,"name":"bool","nodeType":"ElementaryTypeName","src":"9064:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9063:6:19"},"scope":3754,"src":"8987:139:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3159,"nodeType":"Block","src":"9295:58:19","statements":[{"expression":{"arguments":[{"expression":{"id":3151,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3143,"src":"9321:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3085_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap storage pointer"}},"id":3152,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3084,"src":"9321:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":3155,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3145,"src":"9341:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9333:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3153,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9333:7:19","typeDescriptions":{}}},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9333:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3150,"name":"contains","nodeType":"Identifier","overloadedDeclarations":[2718,2947,3160,3409,3631],"referencedDeclaration":2718,"src":"9312:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"}},"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9312:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3149,"id":3158,"nodeType":"Return","src":"9305:41:19"}]},"documentation":{"id":3140,"nodeType":"StructuredDocumentation","src":"9132:68:19","text":" @dev Returns true if the key is in the map. O(1)."},"id":3160,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"9214:8:19","nodeType":"FunctionDefinition","parameters":{"id":3146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3143,"mutability":"mutable","name":"map","nameLocation":"9248:3:19","nodeType":"VariableDeclaration","scope":3160,"src":"9223:28:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3085_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"},"typeName":{"id":3142,"nodeType":"UserDefinedTypeName","pathNode":{"id":3141,"name":"UintToAddressMap","nodeType":"IdentifierPath","referencedDeclaration":3085,"src":"9223:16:19"},"referencedDeclaration":3085,"src":"9223:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3085_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"}},"visibility":"internal"},{"constant":false,"id":3145,"mutability":"mutable","name":"key","nameLocation":"9261:3:19","nodeType":"VariableDeclaration","scope":3160,"src":"9253:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3144,"name":"uint256","nodeType":"ElementaryTypeName","src":"9253:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9222:43:19"},"returnParameters":{"id":3149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3160,"src":"9289:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3147,"name":"bool","nodeType":"ElementaryTypeName","src":"9289:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9288:6:19"},"scope":3754,"src":"9205:148:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3174,"nodeType":"Block","src":"9514:42:19","statements":[{"expression":{"arguments":[{"expression":{"id":3170,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3164,"src":"9538:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3085_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap storage pointer"}},"id":3171,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3084,"src":"9538:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}],"id":3169,"name":"length","nodeType":"Identifier","overloadedDeclarations":[2733,2962,3175,3424,3646],"referencedDeclaration":2733,"src":"9531:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer) view returns (uint256)"}},"id":3172,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9531:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3168,"id":3173,"nodeType":"Return","src":"9524:25:19"}]},"documentation":{"id":3161,"nodeType":"StructuredDocumentation","src":"9359:72:19","text":" @dev Returns the number of elements in the map. O(1)."},"id":3175,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9445:6:19","nodeType":"FunctionDefinition","parameters":{"id":3165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3164,"mutability":"mutable","name":"map","nameLocation":"9477:3:19","nodeType":"VariableDeclaration","scope":3175,"src":"9452:28:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3085_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"},"typeName":{"id":3163,"nodeType":"UserDefinedTypeName","pathNode":{"id":3162,"name":"UintToAddressMap","nodeType":"IdentifierPath","referencedDeclaration":3085,"src":"9452:16:19"},"referencedDeclaration":3085,"src":"9452:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3085_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"}},"visibility":"internal"}],"src":"9451:30:19"},"returnParameters":{"id":3168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3167,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3175,"src":"9505:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3166,"name":"uint256","nodeType":"ElementaryTypeName","src":"9505:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9504:9:19"},"scope":3754,"src":"9436:120:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3214,"nodeType":"Block","src":"9991:134:19","statements":[{"assignments":[3189,3191],"declarations":[{"constant":false,"id":3189,"mutability":"mutable","name":"key","nameLocation":"10010:3:19","nodeType":"VariableDeclaration","scope":3214,"src":"10002:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3188,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10002:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3191,"mutability":"mutable","name":"value","nameLocation":"10023:5:19","nodeType":"VariableDeclaration","scope":3214,"src":"10015:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3190,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10015:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3197,"initialValue":{"arguments":[{"expression":{"id":3193,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3179,"src":"10035:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3085_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap storage pointer"}},"id":3194,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3084,"src":"10035:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"id":3195,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3181,"src":"10047:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3192,"name":"at","nodeType":"Identifier","overloadedDeclarations":[2762,2996,3215,3464,3677],"referencedDeclaration":2762,"src":"10032:2:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,uint256) view returns (bytes32,bytes32)"}},"id":3196,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10032:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes32_$","typeString":"tuple(bytes32,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"10001:52:19"},{"expression":{"components":[{"arguments":[{"id":3200,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3189,"src":"10079:3:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3199,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10071:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3198,"name":"uint256","nodeType":"ElementaryTypeName","src":"10071:7:19","typeDescriptions":{}}},"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10071:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"arguments":[{"arguments":[{"id":3208,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3191,"src":"10109:5:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10101:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3206,"name":"uint256","nodeType":"ElementaryTypeName","src":"10101:7:19","typeDescriptions":{}}},"id":3209,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10101:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3205,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10093:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3204,"name":"uint160","nodeType":"ElementaryTypeName","src":"10093:7:19","typeDescriptions":{}}},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10093:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10085:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3202,"name":"address","nodeType":"ElementaryTypeName","src":"10085:7:19","typeDescriptions":{}}},"id":3211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10085:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3212,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10070:48:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_address_$","typeString":"tuple(uint256,address)"}},"functionReturnParameters":3187,"id":3213,"nodeType":"Return","src":"10063:55:19"}]},"documentation":{"id":3176,"nodeType":"StructuredDocumentation","src":"9562:326:19","text":" @dev Returns the element stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3215,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9902:2:19","nodeType":"FunctionDefinition","parameters":{"id":3182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3179,"mutability":"mutable","name":"map","nameLocation":"9930:3:19","nodeType":"VariableDeclaration","scope":3215,"src":"9905:28:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3085_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"},"typeName":{"id":3178,"nodeType":"UserDefinedTypeName","pathNode":{"id":3177,"name":"UintToAddressMap","nodeType":"IdentifierPath","referencedDeclaration":3085,"src":"9905:16:19"},"referencedDeclaration":3085,"src":"9905:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3085_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"}},"visibility":"internal"},{"constant":false,"id":3181,"mutability":"mutable","name":"index","nameLocation":"9943:5:19","nodeType":"VariableDeclaration","scope":3215,"src":"9935:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3180,"name":"uint256","nodeType":"ElementaryTypeName","src":"9935:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9904:45:19"},"returnParameters":{"id":3187,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3184,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3215,"src":"9973:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3183,"name":"uint256","nodeType":"ElementaryTypeName","src":"9973:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3186,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3215,"src":"9982:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3185,"name":"address","nodeType":"ElementaryTypeName","src":"9982:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9972:18:19"},"scope":3754,"src":"9893:232:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3254,"nodeType":"Block","src":"10402:141:19","statements":[{"assignments":[3229,3231],"declarations":[{"constant":false,"id":3229,"mutability":"mutable","name":"success","nameLocation":"10418:7:19","nodeType":"VariableDeclaration","scope":3254,"src":"10413:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3228,"name":"bool","nodeType":"ElementaryTypeName","src":"10413:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3231,"mutability":"mutable","name":"value","nameLocation":"10435:5:19","nodeType":"VariableDeclaration","scope":3254,"src":"10427:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3230,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10427:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3240,"initialValue":{"arguments":[{"expression":{"id":3233,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3219,"src":"10451:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3085_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap storage pointer"}},"id":3234,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3084,"src":"10451:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":3237,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3221,"src":"10471:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10463:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3235,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10463:7:19","typeDescriptions":{}}},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10463:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3232,"name":"tryGet","nodeType":"Identifier","overloadedDeclarations":[2806,3030,3255,3504,3708],"referencedDeclaration":2806,"src":"10444:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes32_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool,bytes32)"}},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10444:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes32_$","typeString":"tuple(bool,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"10412:64:19"},{"expression":{"components":[{"id":3241,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"10494:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"arguments":[{"arguments":[{"id":3248,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3231,"src":"10527:5:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10519:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3246,"name":"uint256","nodeType":"ElementaryTypeName","src":"10519:7:19","typeDescriptions":{}}},"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10519:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3245,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10511:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3244,"name":"uint160","nodeType":"ElementaryTypeName","src":"10511:7:19","typeDescriptions":{}}},"id":3250,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10511:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10503:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3242,"name":"address","nodeType":"ElementaryTypeName","src":"10503:7:19","typeDescriptions":{}}},"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10503:32:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":3252,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10493:43:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_$","typeString":"tuple(bool,address)"}},"functionReturnParameters":3227,"id":3253,"nodeType":"Return","src":"10486:50:19"}]},"documentation":{"id":3216,"nodeType":"StructuredDocumentation","src":"10131:169:19","text":" @dev Tries to returns the value associated with `key`.  O(1).\n Does not revert if `key` is not in the map.\n _Available since v3.4._"},"id":3255,"implemented":true,"kind":"function","modifiers":[],"name":"tryGet","nameLocation":"10314:6:19","nodeType":"FunctionDefinition","parameters":{"id":3222,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3219,"mutability":"mutable","name":"map","nameLocation":"10346:3:19","nodeType":"VariableDeclaration","scope":3255,"src":"10321:28:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3085_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"},"typeName":{"id":3218,"nodeType":"UserDefinedTypeName","pathNode":{"id":3217,"name":"UintToAddressMap","nodeType":"IdentifierPath","referencedDeclaration":3085,"src":"10321:16:19"},"referencedDeclaration":3085,"src":"10321:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3085_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"}},"visibility":"internal"},{"constant":false,"id":3221,"mutability":"mutable","name":"key","nameLocation":"10359:3:19","nodeType":"VariableDeclaration","scope":3255,"src":"10351:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3220,"name":"uint256","nodeType":"ElementaryTypeName","src":"10351:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10320:43:19"},"returnParameters":{"id":3227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3224,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3255,"src":"10387:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3223,"name":"bool","nodeType":"ElementaryTypeName","src":"10387:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3255,"src":"10393:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3225,"name":"address","nodeType":"ElementaryTypeName","src":"10393:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10386:15:19"},"scope":3754,"src":"10305:238:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3284,"nodeType":"Block","src":"10783:80:19","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":3273,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3259,"src":"10828:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3085_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap storage pointer"}},"id":3274,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3084,"src":"10828:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":3277,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3261,"src":"10848:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10840:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3275,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10840:7:19","typeDescriptions":{}}},"id":3278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10840:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3272,"name":"get","nodeType":"Identifier","overloadedDeclarations":[2839,2874,3054,3081,3285,3318,3534,3567,3729,3753],"referencedDeclaration":2839,"src":"10824:3:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bytes32)"}},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10824:29:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3271,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10816:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3270,"name":"uint256","nodeType":"ElementaryTypeName","src":"10816:7:19","typeDescriptions":{}}},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10816:38:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10808:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3268,"name":"uint160","nodeType":"ElementaryTypeName","src":"10808:7:19","typeDescriptions":{}}},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10808:47:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10800:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3266,"name":"address","nodeType":"ElementaryTypeName","src":"10800:7:19","typeDescriptions":{}}},"id":3282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10800:56:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3265,"id":3283,"nodeType":"Return","src":"10793:63:19"}]},"documentation":{"id":3256,"nodeType":"StructuredDocumentation","src":"10549:141:19","text":" @dev Returns the value associated with `key`.  O(1).\n Requirements:\n - `key` must be in the map."},"id":3285,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"10704:3:19","nodeType":"FunctionDefinition","parameters":{"id":3262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3259,"mutability":"mutable","name":"map","nameLocation":"10733:3:19","nodeType":"VariableDeclaration","scope":3285,"src":"10708:28:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3085_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"},"typeName":{"id":3258,"nodeType":"UserDefinedTypeName","pathNode":{"id":3257,"name":"UintToAddressMap","nodeType":"IdentifierPath","referencedDeclaration":3085,"src":"10708:16:19"},"referencedDeclaration":3085,"src":"10708:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3085_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"}},"visibility":"internal"},{"constant":false,"id":3261,"mutability":"mutable","name":"key","nameLocation":"10746:3:19","nodeType":"VariableDeclaration","scope":3285,"src":"10738:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3260,"name":"uint256","nodeType":"ElementaryTypeName","src":"10738:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10707:43:19"},"returnParameters":{"id":3265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3264,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3285,"src":"10774:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3263,"name":"address","nodeType":"ElementaryTypeName","src":"10774:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10773:9:19"},"scope":3754,"src":"10695:168:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3317,"nodeType":"Block","src":"11289:94:19","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":3305,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"11334:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3085_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap storage pointer"}},"id":3306,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3084,"src":"11334:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"id":3309,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"11354:3:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3308,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11346:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3307,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11346:7:19","typeDescriptions":{}}},"id":3310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11346:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3311,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3293,"src":"11360:12:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3304,"name":"get","nodeType":"Identifier","overloadedDeclarations":[2839,2874,3054,3081,3285,3318,3534,3567,3729,3753],"referencedDeclaration":2874,"src":"11330:3:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr_$_t_bytes32_$_t_string_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,string memory) view returns (bytes32)"}},"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11330:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3303,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11322:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3302,"name":"uint256","nodeType":"ElementaryTypeName","src":"11322:7:19","typeDescriptions":{}}},"id":3313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11322:52:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3301,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11314:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3300,"name":"uint160","nodeType":"ElementaryTypeName","src":"11314:7:19","typeDescriptions":{}}},"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11314:61:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3299,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11306:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3298,"name":"address","nodeType":"ElementaryTypeName","src":"11306:7:19","typeDescriptions":{}}},"id":3315,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11306:70:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3297,"id":3316,"nodeType":"Return","src":"11299:77:19"}]},"documentation":{"id":3286,"nodeType":"StructuredDocumentation","src":"10869:269:19","text":" @dev Same as {get}, with a custom error message when `key` is not in the map.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryGet}."},"id":3318,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"11152:3:19","nodeType":"FunctionDefinition","parameters":{"id":3294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3289,"mutability":"mutable","name":"map","nameLocation":"11190:3:19","nodeType":"VariableDeclaration","scope":3318,"src":"11165:28:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3085_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"},"typeName":{"id":3288,"nodeType":"UserDefinedTypeName","pathNode":{"id":3287,"name":"UintToAddressMap","nodeType":"IdentifierPath","referencedDeclaration":3085,"src":"11165:16:19"},"referencedDeclaration":3085,"src":"11165:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$3085_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"}},"visibility":"internal"},{"constant":false,"id":3291,"mutability":"mutable","name":"key","nameLocation":"11211:3:19","nodeType":"VariableDeclaration","scope":3318,"src":"11203:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3290,"name":"uint256","nodeType":"ElementaryTypeName","src":"11203:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3293,"mutability":"mutable","name":"errorMessage","nameLocation":"11238:12:19","nodeType":"VariableDeclaration","scope":3318,"src":"11224:26:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3292,"name":"string","nodeType":"ElementaryTypeName","src":"11224:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"11155:101:19"},"returnParameters":{"id":3297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3318,"src":"11280:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3295,"name":"address","nodeType":"ElementaryTypeName","src":"11280:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11279:9:19"},"scope":3754,"src":"11143:240:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableMap.AddressToUintMap","id":3322,"members":[{"constant":false,"id":3321,"mutability":"mutable","name":"_inner","nameLocation":"11468:6:19","nodeType":"VariableDeclaration","scope":3322,"src":"11448:26:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"},"typeName":{"id":3320,"nodeType":"UserDefinedTypeName","pathNode":{"id":3319,"name":"Bytes32ToBytes32Map","nodeType":"IdentifierPath","referencedDeclaration":2648,"src":"11448:19:19"},"referencedDeclaration":2648,"src":"11448:19:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"}},"visibility":"internal"}],"name":"AddressToUintMap","nameLocation":"11421:16:19","nodeType":"StructDefinition","scope":3754,"src":"11414:67:19","visibility":"public"},{"body":{"id":3354,"nodeType":"Block","src":"11833:87:19","statements":[{"expression":{"arguments":[{"expression":{"id":3336,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3326,"src":"11854:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$3322_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap storage pointer"}},"id":3337,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3321,"src":"11854:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":3344,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3328,"src":"11890:3:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11882:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3342,"name":"uint160","nodeType":"ElementaryTypeName","src":"11882:7:19","typeDescriptions":{}}},"id":3345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11882:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3341,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11874:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3340,"name":"uint256","nodeType":"ElementaryTypeName","src":"11874:7:19","typeDescriptions":{}}},"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11874:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3339,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11866:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11866:7:19","typeDescriptions":{}}},"id":3347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11866:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":3350,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3330,"src":"11906:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11898:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3348,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11898:7:19","typeDescriptions":{}}},"id":3351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11898:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3335,"name":"set","nodeType":"Identifier","overloadedDeclarations":[2676,2905,3118,3355,3595],"referencedDeclaration":2676,"src":"11850:3:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,bytes32) returns (bool)"}},"id":3352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11850:63:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3334,"id":3353,"nodeType":"Return","src":"11843:70:19"}]},"documentation":{"id":3323,"nodeType":"StructuredDocumentation","src":"11487:216:19","text":" @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."},"id":3355,"implemented":true,"kind":"function","modifiers":[],"name":"set","nameLocation":"11717:3:19","nodeType":"FunctionDefinition","parameters":{"id":3331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3326,"mutability":"mutable","name":"map","nameLocation":"11755:3:19","nodeType":"VariableDeclaration","scope":3355,"src":"11730:28:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$3322_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"},"typeName":{"id":3325,"nodeType":"UserDefinedTypeName","pathNode":{"id":3324,"name":"AddressToUintMap","nodeType":"IdentifierPath","referencedDeclaration":3322,"src":"11730:16:19"},"referencedDeclaration":3322,"src":"11730:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$3322_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"}},"visibility":"internal"},{"constant":false,"id":3328,"mutability":"mutable","name":"key","nameLocation":"11776:3:19","nodeType":"VariableDeclaration","scope":3355,"src":"11768:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3327,"name":"address","nodeType":"ElementaryTypeName","src":"11768:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3330,"mutability":"mutable","name":"value","nameLocation":"11797:5:19","nodeType":"VariableDeclaration","scope":3355,"src":"11789:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3329,"name":"uint256","nodeType":"ElementaryTypeName","src":"11789:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11720:88:19"},"returnParameters":{"id":3334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3333,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3355,"src":"11827:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3332,"name":"bool","nodeType":"ElementaryTypeName","src":"11827:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11826:6:19"},"scope":3754,"src":"11708:212:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3381,"nodeType":"Block","src":"12162:74:19","statements":[{"expression":{"arguments":[{"expression":{"id":3367,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3359,"src":"12186:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$3322_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap storage pointer"}},"id":3368,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3321,"src":"12186:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":3375,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3361,"src":"12222:3:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3374,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12214:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3373,"name":"uint160","nodeType":"ElementaryTypeName","src":"12214:7:19","typeDescriptions":{}}},"id":3376,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12214:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3372,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12206:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3371,"name":"uint256","nodeType":"ElementaryTypeName","src":"12206:7:19","typeDescriptions":{}}},"id":3377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12206:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3370,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12198:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3369,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12198:7:19","typeDescriptions":{}}},"id":3378,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12198:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3366,"name":"remove","nodeType":"Identifier","overloadedDeclarations":[2700,2926,3139,3382,3613],"referencedDeclaration":2700,"src":"12179:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) returns (bool)"}},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12179:50:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3365,"id":3380,"nodeType":"Return","src":"12172:57:19"}]},"documentation":{"id":3356,"nodeType":"StructuredDocumentation","src":"11926:148:19","text":" @dev Removes a value from a set. O(1).\n Returns true if the key was removed from the map, that is if it was present."},"id":3382,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"12088:6:19","nodeType":"FunctionDefinition","parameters":{"id":3362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3359,"mutability":"mutable","name":"map","nameLocation":"12120:3:19","nodeType":"VariableDeclaration","scope":3382,"src":"12095:28:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$3322_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"},"typeName":{"id":3358,"nodeType":"UserDefinedTypeName","pathNode":{"id":3357,"name":"AddressToUintMap","nodeType":"IdentifierPath","referencedDeclaration":3322,"src":"12095:16:19"},"referencedDeclaration":3322,"src":"12095:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$3322_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"}},"visibility":"internal"},{"constant":false,"id":3361,"mutability":"mutable","name":"key","nameLocation":"12133:3:19","nodeType":"VariableDeclaration","scope":3382,"src":"12125:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3360,"name":"address","nodeType":"ElementaryTypeName","src":"12125:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12094:43:19"},"returnParameters":{"id":3365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3364,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3382,"src":"12156:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3363,"name":"bool","nodeType":"ElementaryTypeName","src":"12156:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12155:6:19"},"scope":3754,"src":"12079:157:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3408,"nodeType":"Block","src":"12405:76:19","statements":[{"expression":{"arguments":[{"expression":{"id":3394,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3386,"src":"12431:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$3322_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap storage pointer"}},"id":3395,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3321,"src":"12431:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":3402,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3388,"src":"12467:3:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12459:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3400,"name":"uint160","nodeType":"ElementaryTypeName","src":"12459:7:19","typeDescriptions":{}}},"id":3403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12459:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12451:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3398,"name":"uint256","nodeType":"ElementaryTypeName","src":"12451:7:19","typeDescriptions":{}}},"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12451:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3397,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12443:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3396,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12443:7:19","typeDescriptions":{}}},"id":3405,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12443:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3393,"name":"contains","nodeType":"Identifier","overloadedDeclarations":[2718,2947,3160,3409,3631],"referencedDeclaration":2718,"src":"12422:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"}},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12422:52:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3392,"id":3407,"nodeType":"Return","src":"12415:59:19"}]},"documentation":{"id":3383,"nodeType":"StructuredDocumentation","src":"12242:68:19","text":" @dev Returns true if the key is in the map. O(1)."},"id":3409,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"12324:8:19","nodeType":"FunctionDefinition","parameters":{"id":3389,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3386,"mutability":"mutable","name":"map","nameLocation":"12358:3:19","nodeType":"VariableDeclaration","scope":3409,"src":"12333:28:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$3322_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"},"typeName":{"id":3385,"nodeType":"UserDefinedTypeName","pathNode":{"id":3384,"name":"AddressToUintMap","nodeType":"IdentifierPath","referencedDeclaration":3322,"src":"12333:16:19"},"referencedDeclaration":3322,"src":"12333:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$3322_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"}},"visibility":"internal"},{"constant":false,"id":3388,"mutability":"mutable","name":"key","nameLocation":"12371:3:19","nodeType":"VariableDeclaration","scope":3409,"src":"12363:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3387,"name":"address","nodeType":"ElementaryTypeName","src":"12363:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12332:43:19"},"returnParameters":{"id":3392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3391,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3409,"src":"12399:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3390,"name":"bool","nodeType":"ElementaryTypeName","src":"12399:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"12398:6:19"},"scope":3754,"src":"12315:166:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3423,"nodeType":"Block","src":"12642:42:19","statements":[{"expression":{"arguments":[{"expression":{"id":3419,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"12666:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$3322_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap storage pointer"}},"id":3420,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3321,"src":"12666:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}],"id":3418,"name":"length","nodeType":"Identifier","overloadedDeclarations":[2733,2962,3175,3424,3646],"referencedDeclaration":2733,"src":"12659:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer) view returns (uint256)"}},"id":3421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12659:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3417,"id":3422,"nodeType":"Return","src":"12652:25:19"}]},"documentation":{"id":3410,"nodeType":"StructuredDocumentation","src":"12487:72:19","text":" @dev Returns the number of elements in the map. O(1)."},"id":3424,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"12573:6:19","nodeType":"FunctionDefinition","parameters":{"id":3414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3413,"mutability":"mutable","name":"map","nameLocation":"12605:3:19","nodeType":"VariableDeclaration","scope":3424,"src":"12580:28:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$3322_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"},"typeName":{"id":3412,"nodeType":"UserDefinedTypeName","pathNode":{"id":3411,"name":"AddressToUintMap","nodeType":"IdentifierPath","referencedDeclaration":3322,"src":"12580:16:19"},"referencedDeclaration":3322,"src":"12580:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$3322_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"}},"visibility":"internal"}],"src":"12579:30:19"},"returnParameters":{"id":3417,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3416,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3424,"src":"12633:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3415,"name":"uint256","nodeType":"ElementaryTypeName","src":"12633:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12632:9:19"},"scope":3754,"src":"12564:120:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3463,"nodeType":"Block","src":"13119:134:19","statements":[{"assignments":[3438,3440],"declarations":[{"constant":false,"id":3438,"mutability":"mutable","name":"key","nameLocation":"13138:3:19","nodeType":"VariableDeclaration","scope":3463,"src":"13130:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3437,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13130:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3440,"mutability":"mutable","name":"value","nameLocation":"13151:5:19","nodeType":"VariableDeclaration","scope":3463,"src":"13143:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3439,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13143:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3446,"initialValue":{"arguments":[{"expression":{"id":3442,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3428,"src":"13163:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$3322_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap storage pointer"}},"id":3443,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3321,"src":"13163:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"id":3444,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3430,"src":"13175:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3441,"name":"at","nodeType":"Identifier","overloadedDeclarations":[2762,2996,3215,3464,3677],"referencedDeclaration":2762,"src":"13160:2:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,uint256) view returns (bytes32,bytes32)"}},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13160:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes32_$","typeString":"tuple(bytes32,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"13129:52:19"},{"expression":{"components":[{"arguments":[{"arguments":[{"arguments":[{"id":3453,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3438,"src":"13223:3:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13215:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3451,"name":"uint256","nodeType":"ElementaryTypeName","src":"13215:7:19","typeDescriptions":{}}},"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13215:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13207:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3449,"name":"uint160","nodeType":"ElementaryTypeName","src":"13207:7:19","typeDescriptions":{}}},"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13207:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13199:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3447,"name":"address","nodeType":"ElementaryTypeName","src":"13199:7:19","typeDescriptions":{}}},"id":3456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13199:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3459,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3440,"src":"13239:5:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3458,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13231:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3457,"name":"uint256","nodeType":"ElementaryTypeName","src":"13231:7:19","typeDescriptions":{}}},"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13231:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3461,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13198:48:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}},"functionReturnParameters":3436,"id":3462,"nodeType":"Return","src":"13191:55:19"}]},"documentation":{"id":3425,"nodeType":"StructuredDocumentation","src":"12690:326:19","text":" @dev Returns the element stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3464,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"13030:2:19","nodeType":"FunctionDefinition","parameters":{"id":3431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3428,"mutability":"mutable","name":"map","nameLocation":"13058:3:19","nodeType":"VariableDeclaration","scope":3464,"src":"13033:28:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$3322_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"},"typeName":{"id":3427,"nodeType":"UserDefinedTypeName","pathNode":{"id":3426,"name":"AddressToUintMap","nodeType":"IdentifierPath","referencedDeclaration":3322,"src":"13033:16:19"},"referencedDeclaration":3322,"src":"13033:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$3322_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"}},"visibility":"internal"},{"constant":false,"id":3430,"mutability":"mutable","name":"index","nameLocation":"13071:5:19","nodeType":"VariableDeclaration","scope":3464,"src":"13063:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3429,"name":"uint256","nodeType":"ElementaryTypeName","src":"13063:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13032:45:19"},"returnParameters":{"id":3436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3433,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3464,"src":"13101:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3432,"name":"address","nodeType":"ElementaryTypeName","src":"13101:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3464,"src":"13110:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3434,"name":"uint256","nodeType":"ElementaryTypeName","src":"13110:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13100:18:19"},"scope":3754,"src":"13021:232:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3503,"nodeType":"Block","src":"13492:141:19","statements":[{"assignments":[3478,3480],"declarations":[{"constant":false,"id":3478,"mutability":"mutable","name":"success","nameLocation":"13508:7:19","nodeType":"VariableDeclaration","scope":3503,"src":"13503:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3477,"name":"bool","nodeType":"ElementaryTypeName","src":"13503:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3480,"mutability":"mutable","name":"value","nameLocation":"13525:5:19","nodeType":"VariableDeclaration","scope":3503,"src":"13517:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3479,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13517:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3495,"initialValue":{"arguments":[{"expression":{"id":3482,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3468,"src":"13541:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$3322_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap storage pointer"}},"id":3483,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3321,"src":"13541:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":3490,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3470,"src":"13577:3:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13569:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3488,"name":"uint160","nodeType":"ElementaryTypeName","src":"13569:7:19","typeDescriptions":{}}},"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13569:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13561:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3486,"name":"uint256","nodeType":"ElementaryTypeName","src":"13561:7:19","typeDescriptions":{}}},"id":3492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13561:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13553:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3484,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13553:7:19","typeDescriptions":{}}},"id":3493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13553:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3481,"name":"tryGet","nodeType":"Identifier","overloadedDeclarations":[2806,3030,3255,3504,3708],"referencedDeclaration":2806,"src":"13534:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes32_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool,bytes32)"}},"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13534:50:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes32_$","typeString":"tuple(bool,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"13502:82:19"},{"expression":{"components":[{"id":3496,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3478,"src":"13602:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"id":3499,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3480,"src":"13619:5:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3498,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13611:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3497,"name":"uint256","nodeType":"ElementaryTypeName","src":"13611:7:19","typeDescriptions":{}}},"id":3500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13611:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3501,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13601:25:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3476,"id":3502,"nodeType":"Return","src":"13594:32:19"}]},"documentation":{"id":3465,"nodeType":"StructuredDocumentation","src":"13259:131:19","text":" @dev Tries to returns the value associated with `key`.  O(1).\n Does not revert if `key` is not in the map."},"id":3504,"implemented":true,"kind":"function","modifiers":[],"name":"tryGet","nameLocation":"13404:6:19","nodeType":"FunctionDefinition","parameters":{"id":3471,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3468,"mutability":"mutable","name":"map","nameLocation":"13436:3:19","nodeType":"VariableDeclaration","scope":3504,"src":"13411:28:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$3322_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"},"typeName":{"id":3467,"nodeType":"UserDefinedTypeName","pathNode":{"id":3466,"name":"AddressToUintMap","nodeType":"IdentifierPath","referencedDeclaration":3322,"src":"13411:16:19"},"referencedDeclaration":3322,"src":"13411:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$3322_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"}},"visibility":"internal"},{"constant":false,"id":3470,"mutability":"mutable","name":"key","nameLocation":"13449:3:19","nodeType":"VariableDeclaration","scope":3504,"src":"13441:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3469,"name":"address","nodeType":"ElementaryTypeName","src":"13441:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13410:43:19"},"returnParameters":{"id":3476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3473,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3504,"src":"13477:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3472,"name":"bool","nodeType":"ElementaryTypeName","src":"13477:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3475,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3504,"src":"13483:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3474,"name":"uint256","nodeType":"ElementaryTypeName","src":"13483:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13476:15:19"},"scope":3754,"src":"13395:238:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3533,"nodeType":"Block","src":"13873:80:19","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":3518,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3508,"src":"13902:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$3322_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap storage pointer"}},"id":3519,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3321,"src":"13902:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":3526,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3510,"src":"13938:3:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3525,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13930:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3524,"name":"uint160","nodeType":"ElementaryTypeName","src":"13930:7:19","typeDescriptions":{}}},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13930:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3523,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13922:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3522,"name":"uint256","nodeType":"ElementaryTypeName","src":"13922:7:19","typeDescriptions":{}}},"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13922:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3521,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13914:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3520,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13914:7:19","typeDescriptions":{}}},"id":3529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13914:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3517,"name":"get","nodeType":"Identifier","overloadedDeclarations":[2839,2874,3054,3081,3285,3318,3534,3567,3729,3753],"referencedDeclaration":2839,"src":"13898:3:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bytes32)"}},"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13898:47:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3516,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13890:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3515,"name":"uint256","nodeType":"ElementaryTypeName","src":"13890:7:19","typeDescriptions":{}}},"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13890:56:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3514,"id":3532,"nodeType":"Return","src":"13883:63:19"}]},"documentation":{"id":3505,"nodeType":"StructuredDocumentation","src":"13639:141:19","text":" @dev Returns the value associated with `key`.  O(1).\n Requirements:\n - `key` must be in the map."},"id":3534,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"13794:3:19","nodeType":"FunctionDefinition","parameters":{"id":3511,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3508,"mutability":"mutable","name":"map","nameLocation":"13823:3:19","nodeType":"VariableDeclaration","scope":3534,"src":"13798:28:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$3322_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"},"typeName":{"id":3507,"nodeType":"UserDefinedTypeName","pathNode":{"id":3506,"name":"AddressToUintMap","nodeType":"IdentifierPath","referencedDeclaration":3322,"src":"13798:16:19"},"referencedDeclaration":3322,"src":"13798:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$3322_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"}},"visibility":"internal"},{"constant":false,"id":3510,"mutability":"mutable","name":"key","nameLocation":"13836:3:19","nodeType":"VariableDeclaration","scope":3534,"src":"13828:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3509,"name":"address","nodeType":"ElementaryTypeName","src":"13828:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13797:43:19"},"returnParameters":{"id":3514,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3513,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3534,"src":"13864:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3512,"name":"uint256","nodeType":"ElementaryTypeName","src":"13864:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13863:9:19"},"scope":3754,"src":"13785:168:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3566,"nodeType":"Block","src":"14379:94:19","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":3550,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3538,"src":"14408:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$3322_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap storage pointer"}},"id":3551,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3321,"src":"14408:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":3558,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3540,"src":"14444:3:19","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14436:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":3556,"name":"uint160","nodeType":"ElementaryTypeName","src":"14436:7:19","typeDescriptions":{}}},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14436:12:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3555,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14428:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3554,"name":"uint256","nodeType":"ElementaryTypeName","src":"14428:7:19","typeDescriptions":{}}},"id":3560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14428:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3553,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14420:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3552,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14420:7:19","typeDescriptions":{}}},"id":3561,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14420:30:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3562,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"14452:12:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3549,"name":"get","nodeType":"Identifier","overloadedDeclarations":[2839,2874,3054,3081,3285,3318,3534,3567,3729,3753],"referencedDeclaration":2874,"src":"14404:3:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr_$_t_bytes32_$_t_string_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,string memory) view returns (bytes32)"}},"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14404:61:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14396:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3547,"name":"uint256","nodeType":"ElementaryTypeName","src":"14396:7:19","typeDescriptions":{}}},"id":3564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14396:70:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3546,"id":3565,"nodeType":"Return","src":"14389:77:19"}]},"documentation":{"id":3535,"nodeType":"StructuredDocumentation","src":"13959:269:19","text":" @dev Same as {get}, with a custom error message when `key` is not in the map.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryGet}."},"id":3567,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"14242:3:19","nodeType":"FunctionDefinition","parameters":{"id":3543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3538,"mutability":"mutable","name":"map","nameLocation":"14280:3:19","nodeType":"VariableDeclaration","scope":3567,"src":"14255:28:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$3322_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"},"typeName":{"id":3537,"nodeType":"UserDefinedTypeName","pathNode":{"id":3536,"name":"AddressToUintMap","nodeType":"IdentifierPath","referencedDeclaration":3322,"src":"14255:16:19"},"referencedDeclaration":3322,"src":"14255:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$3322_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"}},"visibility":"internal"},{"constant":false,"id":3540,"mutability":"mutable","name":"key","nameLocation":"14301:3:19","nodeType":"VariableDeclaration","scope":3567,"src":"14293:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3539,"name":"address","nodeType":"ElementaryTypeName","src":"14293:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3542,"mutability":"mutable","name":"errorMessage","nameLocation":"14328:12:19","nodeType":"VariableDeclaration","scope":3567,"src":"14314:26:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3541,"name":"string","nodeType":"ElementaryTypeName","src":"14314:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"14245:101:19"},"returnParameters":{"id":3546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3545,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3567,"src":"14370:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3544,"name":"uint256","nodeType":"ElementaryTypeName","src":"14370:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14369:9:19"},"scope":3754,"src":"14233:240:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableMap.Bytes32ToUintMap","id":3571,"members":[{"constant":false,"id":3570,"mutability":"mutable","name":"_inner","nameLocation":"14558:6:19","nodeType":"VariableDeclaration","scope":3571,"src":"14538:26:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"},"typeName":{"id":3569,"nodeType":"UserDefinedTypeName","pathNode":{"id":3568,"name":"Bytes32ToBytes32Map","nodeType":"IdentifierPath","referencedDeclaration":2648,"src":"14538:19:19"},"referencedDeclaration":2648,"src":"14538:19:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToBytes32Map"}},"visibility":"internal"}],"name":"Bytes32ToUintMap","nameLocation":"14511:16:19","nodeType":"StructDefinition","scope":3754,"src":"14504:67:19","visibility":"public"},{"body":{"id":3594,"nodeType":"Block","src":"14923:60:19","statements":[{"expression":{"arguments":[{"expression":{"id":3585,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3575,"src":"14944:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3571_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap storage pointer"}},"id":3586,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3570,"src":"14944:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"id":3587,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3577,"src":"14956:3:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":3590,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3579,"src":"14969:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3589,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14961:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":3588,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14961:7:19","typeDescriptions":{}}},"id":3591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14961:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3584,"name":"set","nodeType":"Identifier","overloadedDeclarations":[2676,2905,3118,3355,3595],"referencedDeclaration":2676,"src":"14940:3:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,bytes32) returns (bool)"}},"id":3592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14940:36:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3583,"id":3593,"nodeType":"Return","src":"14933:43:19"}]},"documentation":{"id":3572,"nodeType":"StructuredDocumentation","src":"14577:216:19","text":" @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."},"id":3595,"implemented":true,"kind":"function","modifiers":[],"name":"set","nameLocation":"14807:3:19","nodeType":"FunctionDefinition","parameters":{"id":3580,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3575,"mutability":"mutable","name":"map","nameLocation":"14845:3:19","nodeType":"VariableDeclaration","scope":3595,"src":"14820:28:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3571_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"},"typeName":{"id":3574,"nodeType":"UserDefinedTypeName","pathNode":{"id":3573,"name":"Bytes32ToUintMap","nodeType":"IdentifierPath","referencedDeclaration":3571,"src":"14820:16:19"},"referencedDeclaration":3571,"src":"14820:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3571_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"}},"visibility":"internal"},{"constant":false,"id":3577,"mutability":"mutable","name":"key","nameLocation":"14866:3:19","nodeType":"VariableDeclaration","scope":3595,"src":"14858:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3576,"name":"bytes32","nodeType":"ElementaryTypeName","src":"14858:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3579,"mutability":"mutable","name":"value","nameLocation":"14887:5:19","nodeType":"VariableDeclaration","scope":3595,"src":"14879:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3578,"name":"uint256","nodeType":"ElementaryTypeName","src":"14879:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14810:88:19"},"returnParameters":{"id":3583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3582,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3595,"src":"14917:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3581,"name":"bool","nodeType":"ElementaryTypeName","src":"14917:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"14916:6:19"},"scope":3754,"src":"14798:185:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3612,"nodeType":"Block","src":"15225:47:19","statements":[{"expression":{"arguments":[{"expression":{"id":3607,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3599,"src":"15249:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3571_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap storage pointer"}},"id":3608,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3570,"src":"15249:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"id":3609,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3601,"src":"15261:3:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3606,"name":"remove","nodeType":"Identifier","overloadedDeclarations":[2700,2926,3139,3382,3613],"referencedDeclaration":2700,"src":"15242:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) returns (bool)"}},"id":3610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15242:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3605,"id":3611,"nodeType":"Return","src":"15235:30:19"}]},"documentation":{"id":3596,"nodeType":"StructuredDocumentation","src":"14989:148:19","text":" @dev Removes a value from a set. O(1).\n Returns true if the key was removed from the map, that is if it was present."},"id":3613,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"15151:6:19","nodeType":"FunctionDefinition","parameters":{"id":3602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3599,"mutability":"mutable","name":"map","nameLocation":"15183:3:19","nodeType":"VariableDeclaration","scope":3613,"src":"15158:28:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3571_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"},"typeName":{"id":3598,"nodeType":"UserDefinedTypeName","pathNode":{"id":3597,"name":"Bytes32ToUintMap","nodeType":"IdentifierPath","referencedDeclaration":3571,"src":"15158:16:19"},"referencedDeclaration":3571,"src":"15158:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3571_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"}},"visibility":"internal"},{"constant":false,"id":3601,"mutability":"mutable","name":"key","nameLocation":"15196:3:19","nodeType":"VariableDeclaration","scope":3613,"src":"15188:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3600,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15188:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15157:43:19"},"returnParameters":{"id":3605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3604,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3613,"src":"15219:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3603,"name":"bool","nodeType":"ElementaryTypeName","src":"15219:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15218:6:19"},"scope":3754,"src":"15142:130:19","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3630,"nodeType":"Block","src":"15441:49:19","statements":[{"expression":{"arguments":[{"expression":{"id":3625,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3617,"src":"15467:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3571_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap storage pointer"}},"id":3626,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3570,"src":"15467:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"id":3627,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3619,"src":"15479:3:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3624,"name":"contains","nodeType":"Identifier","overloadedDeclarations":[2718,2947,3160,3409,3631],"referencedDeclaration":2718,"src":"15458:8:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool)"}},"id":3628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15458:25:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3623,"id":3629,"nodeType":"Return","src":"15451:32:19"}]},"documentation":{"id":3614,"nodeType":"StructuredDocumentation","src":"15278:68:19","text":" @dev Returns true if the key is in the map. O(1)."},"id":3631,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"15360:8:19","nodeType":"FunctionDefinition","parameters":{"id":3620,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3617,"mutability":"mutable","name":"map","nameLocation":"15394:3:19","nodeType":"VariableDeclaration","scope":3631,"src":"15369:28:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3571_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"},"typeName":{"id":3616,"nodeType":"UserDefinedTypeName","pathNode":{"id":3615,"name":"Bytes32ToUintMap","nodeType":"IdentifierPath","referencedDeclaration":3571,"src":"15369:16:19"},"referencedDeclaration":3571,"src":"15369:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3571_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"}},"visibility":"internal"},{"constant":false,"id":3619,"mutability":"mutable","name":"key","nameLocation":"15407:3:19","nodeType":"VariableDeclaration","scope":3631,"src":"15399:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3618,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15399:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15368:43:19"},"returnParameters":{"id":3623,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3622,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3631,"src":"15435:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3621,"name":"bool","nodeType":"ElementaryTypeName","src":"15435:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"15434:6:19"},"scope":3754,"src":"15351:139:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3645,"nodeType":"Block","src":"15651:42:19","statements":[{"expression":{"arguments":[{"expression":{"id":3641,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3635,"src":"15675:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3571_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap storage pointer"}},"id":3642,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3570,"src":"15675:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}],"id":3640,"name":"length","nodeType":"Identifier","overloadedDeclarations":[2733,2962,3175,3424,3646],"referencedDeclaration":2733,"src":"15668:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer) view returns (uint256)"}},"id":3643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15668:18:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3639,"id":3644,"nodeType":"Return","src":"15661:25:19"}]},"documentation":{"id":3632,"nodeType":"StructuredDocumentation","src":"15496:72:19","text":" @dev Returns the number of elements in the map. O(1)."},"id":3646,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"15582:6:19","nodeType":"FunctionDefinition","parameters":{"id":3636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3635,"mutability":"mutable","name":"map","nameLocation":"15614:3:19","nodeType":"VariableDeclaration","scope":3646,"src":"15589:28:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3571_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"},"typeName":{"id":3634,"nodeType":"UserDefinedTypeName","pathNode":{"id":3633,"name":"Bytes32ToUintMap","nodeType":"IdentifierPath","referencedDeclaration":3571,"src":"15589:16:19"},"referencedDeclaration":3571,"src":"15589:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3571_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"}},"visibility":"internal"}],"src":"15588:30:19"},"returnParameters":{"id":3639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3638,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3646,"src":"15642:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3637,"name":"uint256","nodeType":"ElementaryTypeName","src":"15642:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15641:9:19"},"scope":3754,"src":"15573:120:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3676,"nodeType":"Block","src":"16128:107:19","statements":[{"assignments":[3660,3662],"declarations":[{"constant":false,"id":3660,"mutability":"mutable","name":"key","nameLocation":"16147:3:19","nodeType":"VariableDeclaration","scope":3676,"src":"16139:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3659,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16139:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3662,"mutability":"mutable","name":"value","nameLocation":"16160:5:19","nodeType":"VariableDeclaration","scope":3676,"src":"16152:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3661,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16152:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3668,"initialValue":{"arguments":[{"expression":{"id":3664,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"16172:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3571_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap storage pointer"}},"id":3665,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3570,"src":"16172:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"id":3666,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3652,"src":"16184:5:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3663,"name":"at","nodeType":"Identifier","overloadedDeclarations":[2762,2996,3215,3464,3677],"referencedDeclaration":2762,"src":"16169:2:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,uint256) view returns (bytes32,bytes32)"}},"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16169:21:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes32_$","typeString":"tuple(bytes32,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"16138:52:19"},{"expression":{"components":[{"id":3669,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3660,"src":"16208:3:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":3672,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3662,"src":"16221:5:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3671,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16213:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3670,"name":"uint256","nodeType":"ElementaryTypeName","src":"16213:7:19","typeDescriptions":{}}},"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16213:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3674,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16207:21:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_uint256_$","typeString":"tuple(bytes32,uint256)"}},"functionReturnParameters":3658,"id":3675,"nodeType":"Return","src":"16200:28:19"}]},"documentation":{"id":3647,"nodeType":"StructuredDocumentation","src":"15699:326:19","text":" @dev Returns the element stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3677,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"16039:2:19","nodeType":"FunctionDefinition","parameters":{"id":3653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3650,"mutability":"mutable","name":"map","nameLocation":"16067:3:19","nodeType":"VariableDeclaration","scope":3677,"src":"16042:28:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3571_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"},"typeName":{"id":3649,"nodeType":"UserDefinedTypeName","pathNode":{"id":3648,"name":"Bytes32ToUintMap","nodeType":"IdentifierPath","referencedDeclaration":3571,"src":"16042:16:19"},"referencedDeclaration":3571,"src":"16042:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3571_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"}},"visibility":"internal"},{"constant":false,"id":3652,"mutability":"mutable","name":"index","nameLocation":"16080:5:19","nodeType":"VariableDeclaration","scope":3677,"src":"16072:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3651,"name":"uint256","nodeType":"ElementaryTypeName","src":"16072:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16041:45:19"},"returnParameters":{"id":3658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3677,"src":"16110:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3654,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16110:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3657,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3677,"src":"16119:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3656,"name":"uint256","nodeType":"ElementaryTypeName","src":"16119:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16109:18:19"},"scope":3754,"src":"16030:205:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3707,"nodeType":"Block","src":"16474:114:19","statements":[{"assignments":[3691,3693],"declarations":[{"constant":false,"id":3691,"mutability":"mutable","name":"success","nameLocation":"16490:7:19","nodeType":"VariableDeclaration","scope":3707,"src":"16485:12:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3690,"name":"bool","nodeType":"ElementaryTypeName","src":"16485:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3693,"mutability":"mutable","name":"value","nameLocation":"16507:5:19","nodeType":"VariableDeclaration","scope":3707,"src":"16499:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3692,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16499:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3699,"initialValue":{"arguments":[{"expression":{"id":3695,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3681,"src":"16523:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3571_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap storage pointer"}},"id":3696,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3570,"src":"16523:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"id":3697,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3683,"src":"16535:3:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3694,"name":"tryGet","nodeType":"Identifier","overloadedDeclarations":[2806,3030,3255,3504,3708],"referencedDeclaration":2806,"src":"16516:6:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes32_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bool,bytes32)"}},"id":3698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16516:23:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes32_$","typeString":"tuple(bool,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"16484:55:19"},{"expression":{"components":[{"id":3700,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3691,"src":"16557:7:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"arguments":[{"id":3703,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3693,"src":"16574:5:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3702,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16566:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3701,"name":"uint256","nodeType":"ElementaryTypeName","src":"16566:7:19","typeDescriptions":{}}},"id":3704,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16566:14:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3705,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16556:25:19","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":3689,"id":3706,"nodeType":"Return","src":"16549:32:19"}]},"documentation":{"id":3678,"nodeType":"StructuredDocumentation","src":"16241:131:19","text":" @dev Tries to returns the value associated with `key`.  O(1).\n Does not revert if `key` is not in the map."},"id":3708,"implemented":true,"kind":"function","modifiers":[],"name":"tryGet","nameLocation":"16386:6:19","nodeType":"FunctionDefinition","parameters":{"id":3684,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3681,"mutability":"mutable","name":"map","nameLocation":"16418:3:19","nodeType":"VariableDeclaration","scope":3708,"src":"16393:28:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3571_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"},"typeName":{"id":3680,"nodeType":"UserDefinedTypeName","pathNode":{"id":3679,"name":"Bytes32ToUintMap","nodeType":"IdentifierPath","referencedDeclaration":3571,"src":"16393:16:19"},"referencedDeclaration":3571,"src":"16393:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3571_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"}},"visibility":"internal"},{"constant":false,"id":3683,"mutability":"mutable","name":"key","nameLocation":"16431:3:19","nodeType":"VariableDeclaration","scope":3708,"src":"16423:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3682,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16423:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16392:43:19"},"returnParameters":{"id":3689,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3686,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3708,"src":"16459:4:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3685,"name":"bool","nodeType":"ElementaryTypeName","src":"16459:4:19","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":3688,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3708,"src":"16465:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3687,"name":"uint256","nodeType":"ElementaryTypeName","src":"16465:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16458:15:19"},"scope":3754,"src":"16377:211:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3728,"nodeType":"Block","src":"16828:53:19","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":3722,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3712,"src":"16857:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3571_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap storage pointer"}},"id":3723,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3570,"src":"16857:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"id":3724,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3714,"src":"16869:3:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3721,"name":"get","nodeType":"Identifier","overloadedDeclarations":[2839,2874,3054,3081,3285,3318,3534,3567,3729,3753],"referencedDeclaration":2839,"src":"16853:3:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32) view returns (bytes32)"}},"id":3725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16853:20:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3720,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16845:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3719,"name":"uint256","nodeType":"ElementaryTypeName","src":"16845:7:19","typeDescriptions":{}}},"id":3726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16845:29:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3718,"id":3727,"nodeType":"Return","src":"16838:36:19"}]},"documentation":{"id":3709,"nodeType":"StructuredDocumentation","src":"16594:141:19","text":" @dev Returns the value associated with `key`.  O(1).\n Requirements:\n - `key` must be in the map."},"id":3729,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"16749:3:19","nodeType":"FunctionDefinition","parameters":{"id":3715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3712,"mutability":"mutable","name":"map","nameLocation":"16778:3:19","nodeType":"VariableDeclaration","scope":3729,"src":"16753:28:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3571_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"},"typeName":{"id":3711,"nodeType":"UserDefinedTypeName","pathNode":{"id":3710,"name":"Bytes32ToUintMap","nodeType":"IdentifierPath","referencedDeclaration":3571,"src":"16753:16:19"},"referencedDeclaration":3571,"src":"16753:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3571_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"}},"visibility":"internal"},{"constant":false,"id":3714,"mutability":"mutable","name":"key","nameLocation":"16791:3:19","nodeType":"VariableDeclaration","scope":3729,"src":"16783:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3713,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16783:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16752:43:19"},"returnParameters":{"id":3718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3717,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3729,"src":"16819:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3716,"name":"uint256","nodeType":"ElementaryTypeName","src":"16819:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16818:9:19"},"scope":3754,"src":"16740:141:19","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3752,"nodeType":"Block","src":"17307:67:19","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":3745,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3733,"src":"17336:3:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3571_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap storage pointer"}},"id":3746,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3570,"src":"17336:10:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"}},{"id":3747,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3735,"src":"17348:3:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3748,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3737,"src":"17353:12:19","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Bytes32ToBytes32Map_$2648_storage","typeString":"struct EnumerableMap.Bytes32ToBytes32Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3744,"name":"get","nodeType":"Identifier","overloadedDeclarations":[2839,2874,3054,3081,3285,3318,3534,3567,3729,3753],"referencedDeclaration":2874,"src":"17332:3:19","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32ToBytes32Map_$2648_storage_ptr_$_t_bytes32_$_t_string_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct EnumerableMap.Bytes32ToBytes32Map storage pointer,bytes32,string memory) view returns (bytes32)"}},"id":3749,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17332:34:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17324:7:19","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3742,"name":"uint256","nodeType":"ElementaryTypeName","src":"17324:7:19","typeDescriptions":{}}},"id":3750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17324:43:19","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3741,"id":3751,"nodeType":"Return","src":"17317:50:19"}]},"documentation":{"id":3730,"nodeType":"StructuredDocumentation","src":"16887:269:19","text":" @dev Same as {get}, with a custom error message when `key` is not in the map.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryGet}."},"id":3753,"implemented":true,"kind":"function","modifiers":[],"name":"get","nameLocation":"17170:3:19","nodeType":"FunctionDefinition","parameters":{"id":3738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3733,"mutability":"mutable","name":"map","nameLocation":"17208:3:19","nodeType":"VariableDeclaration","scope":3753,"src":"17183:28:19","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3571_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"},"typeName":{"id":3732,"nodeType":"UserDefinedTypeName","pathNode":{"id":3731,"name":"Bytes32ToUintMap","nodeType":"IdentifierPath","referencedDeclaration":3571,"src":"17183:16:19"},"referencedDeclaration":3571,"src":"17183:16:19","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32ToUintMap_$3571_storage_ptr","typeString":"struct EnumerableMap.Bytes32ToUintMap"}},"visibility":"internal"},{"constant":false,"id":3735,"mutability":"mutable","name":"key","nameLocation":"17229:3:19","nodeType":"VariableDeclaration","scope":3753,"src":"17221:11:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3734,"name":"bytes32","nodeType":"ElementaryTypeName","src":"17221:7:19","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3737,"mutability":"mutable","name":"errorMessage","nameLocation":"17256:12:19","nodeType":"VariableDeclaration","scope":3753,"src":"17242:26:19","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3736,"name":"string","nodeType":"ElementaryTypeName","src":"17242:6:19","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"17173:101:19"},"returnParameters":{"id":3741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3753,"src":"17298:7:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3739,"name":"uint256","nodeType":"ElementaryTypeName","src":"17298:7:19","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17297:9:19"},"scope":3754,"src":"17161:213:19","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":3755,"src":"1525:15851:19","usedErrors":[]}],"src":"115:17262:19"},"id":19},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[4353]},"id":4354,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3756,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"115:23:20"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSet","contractDependencies":[],"contractKind":"library","documentation":{"id":3757,"nodeType":"StructuredDocumentation","src":"140:1087:20","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.\n  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":4353,"linearizedBaseContracts":[4353],"name":"EnumerableSet","nameLocation":"1236:13:20","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":3765,"members":[{"constant":false,"id":3760,"mutability":"mutable","name":"_values","nameLocation":"1760:7:20","nodeType":"VariableDeclaration","scope":3765,"src":"1750:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3758,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1750:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3759,"nodeType":"ArrayTypeName","src":"1750:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":3764,"mutability":"mutable","name":"_indexes","nameLocation":"1928:8:20","nodeType":"VariableDeclaration","scope":3765,"src":"1900:36:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":3763,"keyType":{"id":3761,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1908:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1900:27:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueType":{"id":3762,"name":"uint256","nodeType":"ElementaryTypeName","src":"1919:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1703:3:20","nodeType":"StructDefinition","scope":4353,"src":"1696:247:20","visibility":"public"},{"body":{"id":3806,"nodeType":"Block","src":"2182:335:20","statements":[{"condition":{"id":3780,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2196:22:20","subExpression":{"arguments":[{"id":3777,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"2207:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":3778,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"2212:5:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3765_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3776,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3910,"src":"2197:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3765_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2197:21:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3804,"nodeType":"Block","src":"2474:37:20","statements":[{"expression":{"hexValue":"66616c7365","id":3802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2495:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3775,"id":3803,"nodeType":"Return","src":"2488:12:20"}]},"id":3805,"nodeType":"IfStatement","src":"2192:319:20","trueBody":{"id":3801,"nodeType":"Block","src":"2220:248:20","statements":[{"expression":{"arguments":[{"id":3786,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"2251:5:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":3781,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"2234:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3784,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3760,"src":"2234:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"2234:16:20","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2234:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3788,"nodeType":"ExpressionStatement","src":"2234:23:20"},{"expression":{"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3789,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"2392:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3792,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":3764,"src":"2392:12:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3793,"indexExpression":{"id":3791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3771,"src":"2405:5:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2392:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":3794,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3769,"src":"2414:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3795,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3760,"src":"2414:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2414:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2392:40:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3798,"nodeType":"ExpressionStatement","src":"2392:40:20"},{"expression":{"hexValue":"74727565","id":3799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2453:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3775,"id":3800,"nodeType":"Return","src":"2446:11:20"}]}}]},"documentation":{"id":3766,"nodeType":"StructuredDocumentation","src":"1949:159:20","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":3807,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2122:4:20","nodeType":"FunctionDefinition","parameters":{"id":3772,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3769,"mutability":"mutable","name":"set","nameLocation":"2139:3:20","nodeType":"VariableDeclaration","scope":3807,"src":"2127:15:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3768,"nodeType":"UserDefinedTypeName","pathNode":{"id":3767,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":3765,"src":"2127:3:20"},"referencedDeclaration":3765,"src":"2127:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":3771,"mutability":"mutable","name":"value","nameLocation":"2152:5:20","nodeType":"VariableDeclaration","scope":3807,"src":"2144:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3770,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2144:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2126:32:20"},"returnParameters":{"id":3775,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3774,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3807,"src":"2176:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3773,"name":"bool","nodeType":"ElementaryTypeName","src":"2176:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2175:6:20"},"scope":4353,"src":"2113:404:20","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3890,"nodeType":"Block","src":"2757:1316:20","statements":[{"assignments":[3819],"declarations":[{"constant":false,"id":3819,"mutability":"mutable","name":"valueIndex","nameLocation":"2875:10:20","nodeType":"VariableDeclaration","scope":3890,"src":"2867:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3818,"name":"uint256","nodeType":"ElementaryTypeName","src":"2867:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3824,"initialValue":{"baseExpression":{"expression":{"id":3820,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3811,"src":"2888:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3821,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":3764,"src":"2888:12:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3823,"indexExpression":{"id":3822,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"2901:5:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2888:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2867:40:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3825,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"2922:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3826,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2936:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2922:15:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3888,"nodeType":"Block","src":"4030:37:20","statements":[{"expression":{"hexValue":"66616c7365","id":3886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4051:5:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":3817,"id":3887,"nodeType":"Return","src":"4044:12:20"}]},"id":3889,"nodeType":"IfStatement","src":"2918:1149:20","trueBody":{"id":3885,"nodeType":"Block","src":"2939:1085:20","statements":[{"assignments":[3829],"declarations":[{"constant":false,"id":3829,"mutability":"mutable","name":"toDeleteIndex","nameLocation":"3299:13:20","nodeType":"VariableDeclaration","scope":3885,"src":"3291:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3828,"name":"uint256","nodeType":"ElementaryTypeName","src":"3291:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3833,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3830,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"3315:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3328:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3315:14:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3291:38:20"},{"assignments":[3835],"declarations":[{"constant":false,"id":3835,"mutability":"mutable","name":"lastIndex","nameLocation":"3351:9:20","nodeType":"VariableDeclaration","scope":3885,"src":"3343:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3834,"name":"uint256","nodeType":"ElementaryTypeName","src":"3343:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3841,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":3836,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3811,"src":"3363:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3837,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3760,"src":"3363:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3838,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3363:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3384:1:20","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3363:22:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3343:42:20"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3844,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3842,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"3404:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":3843,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3829,"src":"3417:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3404:26:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3869,"nodeType":"IfStatement","src":"3400:398:20","trueBody":{"id":3868,"nodeType":"Block","src":"3432:366:20","statements":[{"assignments":[3846],"declarations":[{"constant":false,"id":3846,"mutability":"mutable","name":"lastValue","nameLocation":"3458:9:20","nodeType":"VariableDeclaration","scope":3868,"src":"3450:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3845,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3450:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3851,"initialValue":{"baseExpression":{"expression":{"id":3847,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3811,"src":"3470:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3848,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3760,"src":"3470:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3850,"indexExpression":{"id":3849,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3835,"src":"3482:9:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3470:22:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3450:42:20"},{"expression":{"id":3858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3852,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3811,"src":"3592:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3855,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3760,"src":"3592:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3856,"indexExpression":{"id":3854,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3829,"src":"3604:13:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3592:26:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3857,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"3621:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3592:38:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3859,"nodeType":"ExpressionStatement","src":"3592:38:20"},{"expression":{"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":3860,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3811,"src":"3704:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3863,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":3764,"src":"3704:12:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3864,"indexExpression":{"id":3862,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"3717:9:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3704:23:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3865,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3819,"src":"3730:10:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3704:36:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3867,"nodeType":"ExpressionStatement","src":"3704:36:20"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":3870,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3811,"src":"3876:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3873,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3760,"src":"3876:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3874,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pop","nodeType":"MemberAccess","src":"3876:15:20","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":3875,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3876:17:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3876,"nodeType":"ExpressionStatement","src":"3876:17:20"},{"expression":{"id":3881,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"3961:26:20","subExpression":{"baseExpression":{"expression":{"id":3877,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3811,"src":"3968:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3878,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":3764,"src":"3968:12:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3880,"indexExpression":{"id":3879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3813,"src":"3981:5:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3968:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3882,"nodeType":"ExpressionStatement","src":"3961:26:20"},{"expression":{"hexValue":"74727565","id":3883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4009:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":3817,"id":3884,"nodeType":"Return","src":"4002:11:20"}]}}]},"documentation":{"id":3808,"nodeType":"StructuredDocumentation","src":"2523:157:20","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":3891,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2694:7:20","nodeType":"FunctionDefinition","parameters":{"id":3814,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3811,"mutability":"mutable","name":"set","nameLocation":"2714:3:20","nodeType":"VariableDeclaration","scope":3891,"src":"2702:15:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3810,"nodeType":"UserDefinedTypeName","pathNode":{"id":3809,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":3765,"src":"2702:3:20"},"referencedDeclaration":3765,"src":"2702:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":3813,"mutability":"mutable","name":"value","nameLocation":"2727:5:20","nodeType":"VariableDeclaration","scope":3891,"src":"2719:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3812,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2719:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2701:32:20"},"returnParameters":{"id":3817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3891,"src":"2751:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3815,"name":"bool","nodeType":"ElementaryTypeName","src":"2751:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2750:6:20"},"scope":4353,"src":"2685:1388:20","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":3909,"nodeType":"Block","src":"4233:48:20","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":3902,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3895,"src":"4250:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3903,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":3764,"src":"4250:12:20","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":3905,"indexExpression":{"id":3904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3897,"src":"4263:5:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4250:19:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4273:1:20","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4250:24:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3901,"id":3908,"nodeType":"Return","src":"4243:31:20"}]},"documentation":{"id":3892,"nodeType":"StructuredDocumentation","src":"4079:70:20","text":" @dev Returns true if the value is in the set. O(1)."},"id":3910,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4163:9:20","nodeType":"FunctionDefinition","parameters":{"id":3898,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3895,"mutability":"mutable","name":"set","nameLocation":"4185:3:20","nodeType":"VariableDeclaration","scope":3910,"src":"4173:15:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3894,"nodeType":"UserDefinedTypeName","pathNode":{"id":3893,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":3765,"src":"4173:3:20"},"referencedDeclaration":3765,"src":"4173:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":3897,"mutability":"mutable","name":"value","nameLocation":"4198:5:20","nodeType":"VariableDeclaration","scope":3910,"src":"4190:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3896,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4190:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4172:32:20"},"returnParameters":{"id":3901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3900,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3910,"src":"4227:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3899,"name":"bool","nodeType":"ElementaryTypeName","src":"4227:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4226:6:20"},"scope":4353,"src":"4154:127:20","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3923,"nodeType":"Block","src":"4427:42:20","statements":[{"expression":{"expression":{"expression":{"id":3919,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3914,"src":"4444:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3920,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3760,"src":"4444:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4444:18:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3918,"id":3922,"nodeType":"Return","src":"4437:25:20"}]},"documentation":{"id":3911,"nodeType":"StructuredDocumentation","src":"4287:70:20","text":" @dev Returns the number of values on the set. O(1)."},"id":3924,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4371:7:20","nodeType":"FunctionDefinition","parameters":{"id":3915,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3914,"mutability":"mutable","name":"set","nameLocation":"4391:3:20","nodeType":"VariableDeclaration","scope":3924,"src":"4379:15:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3913,"nodeType":"UserDefinedTypeName","pathNode":{"id":3912,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":3765,"src":"4379:3:20"},"referencedDeclaration":3765,"src":"4379:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4378:17:20"},"returnParameters":{"id":3918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3917,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3924,"src":"4418:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3916,"name":"uint256","nodeType":"ElementaryTypeName","src":"4418:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4417:9:20"},"scope":4353,"src":"4362:107:20","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3940,"nodeType":"Block","src":"4887:42:20","statements":[{"expression":{"baseExpression":{"expression":{"id":3935,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"4904:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3936,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3760,"src":"4904:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":3938,"indexExpression":{"id":3937,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3930,"src":"4916:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4904:18:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":3934,"id":3939,"nodeType":"Return","src":"4897:25:20"}]},"documentation":{"id":3925,"nodeType":"StructuredDocumentation","src":"4475:331:20","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":3941,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4820:3:20","nodeType":"FunctionDefinition","parameters":{"id":3931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3928,"mutability":"mutable","name":"set","nameLocation":"4836:3:20","nodeType":"VariableDeclaration","scope":3941,"src":"4824:15:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3927,"nodeType":"UserDefinedTypeName","pathNode":{"id":3926,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":3765,"src":"4824:3:20"},"referencedDeclaration":3765,"src":"4824:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":3930,"mutability":"mutable","name":"index","nameLocation":"4849:5:20","nodeType":"VariableDeclaration","scope":3941,"src":"4841:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3929,"name":"uint256","nodeType":"ElementaryTypeName","src":"4841:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4823:32:20"},"returnParameters":{"id":3934,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3933,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3941,"src":"4878:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3932,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4878:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4877:9:20"},"scope":4353,"src":"4811:118:20","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":3954,"nodeType":"Block","src":"5543:35:20","statements":[{"expression":{"expression":{"id":3951,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3945,"src":"5560:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":3952,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":3760,"src":"5560:11:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":3950,"id":3953,"nodeType":"Return","src":"5553:18:20"}]},"documentation":{"id":3942,"nodeType":"StructuredDocumentation","src":"4935:529:20","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":3955,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5478:7:20","nodeType":"FunctionDefinition","parameters":{"id":3946,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3945,"mutability":"mutable","name":"set","nameLocation":"5498:3:20","nodeType":"VariableDeclaration","scope":3955,"src":"5486:15:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3944,"nodeType":"UserDefinedTypeName","pathNode":{"id":3943,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":3765,"src":"5486:3:20"},"referencedDeclaration":3765,"src":"5486:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5485:17:20"},"returnParameters":{"id":3950,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3949,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3955,"src":"5525:16:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3947,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5525:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3948,"nodeType":"ArrayTypeName","src":"5525:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5524:18:20"},"scope":4353,"src":"5469:109:20","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":3959,"members":[{"constant":false,"id":3958,"mutability":"mutable","name":"_inner","nameLocation":"5635:6:20","nodeType":"VariableDeclaration","scope":3959,"src":"5631:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":3957,"nodeType":"UserDefinedTypeName","pathNode":{"id":3956,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":3765,"src":"5631:3:20"},"referencedDeclaration":3765,"src":"5631:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5610:10:20","nodeType":"StructDefinition","scope":4353,"src":"5603:45:20","visibility":"public"},{"body":{"id":3976,"nodeType":"Block","src":"5894:47:20","statements":[{"expression":{"arguments":[{"expression":{"id":3971,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"5916:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3959_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3972,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3958,"src":"5916:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3973,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3965,"src":"5928:5:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3765_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3970,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"5911:4:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3765_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5911:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3969,"id":3975,"nodeType":"Return","src":"5904:30:20"}]},"documentation":{"id":3960,"nodeType":"StructuredDocumentation","src":"5654:159:20","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":3977,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5827:3:20","nodeType":"FunctionDefinition","parameters":{"id":3966,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3963,"mutability":"mutable","name":"set","nameLocation":"5850:3:20","nodeType":"VariableDeclaration","scope":3977,"src":"5831:22:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3959_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3962,"nodeType":"UserDefinedTypeName","pathNode":{"id":3961,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":3959,"src":"5831:10:20"},"referencedDeclaration":3959,"src":"5831:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3959_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3965,"mutability":"mutable","name":"value","nameLocation":"5863:5:20","nodeType":"VariableDeclaration","scope":3977,"src":"5855:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3964,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5855:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5830:39:20"},"returnParameters":{"id":3969,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3968,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3977,"src":"5888:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3967,"name":"bool","nodeType":"ElementaryTypeName","src":"5888:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5887:6:20"},"scope":4353,"src":"5818:123:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3994,"nodeType":"Block","src":"6188:50:20","statements":[{"expression":{"arguments":[{"expression":{"id":3989,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3981,"src":"6213:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3959_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":3990,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3958,"src":"6213:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":3991,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"6225:5:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3765_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3988,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"6205:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3765_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":3992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6205:26:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3987,"id":3993,"nodeType":"Return","src":"6198:33:20"}]},"documentation":{"id":3978,"nodeType":"StructuredDocumentation","src":"5947:157:20","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":3995,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6118:6:20","nodeType":"FunctionDefinition","parameters":{"id":3984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3981,"mutability":"mutable","name":"set","nameLocation":"6144:3:20","nodeType":"VariableDeclaration","scope":3995,"src":"6125:22:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3959_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3980,"nodeType":"UserDefinedTypeName","pathNode":{"id":3979,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":3959,"src":"6125:10:20"},"referencedDeclaration":3959,"src":"6125:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3959_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":3983,"mutability":"mutable","name":"value","nameLocation":"6157:5:20","nodeType":"VariableDeclaration","scope":3995,"src":"6149:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3982,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6149:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6124:39:20"},"returnParameters":{"id":3987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3986,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3995,"src":"6182:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3985,"name":"bool","nodeType":"ElementaryTypeName","src":"6182:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6181:6:20"},"scope":4353,"src":"6109:129:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4012,"nodeType":"Block","src":"6405:52:20","statements":[{"expression":{"arguments":[{"expression":{"id":4007,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3999,"src":"6432:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3959_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":4008,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3958,"src":"6432:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":4009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4001,"src":"6444:5:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3765_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4006,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3910,"src":"6422:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3765_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6422:28:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4005,"id":4011,"nodeType":"Return","src":"6415:35:20"}]},"documentation":{"id":3996,"nodeType":"StructuredDocumentation","src":"6244:70:20","text":" @dev Returns true if the value is in the set. O(1)."},"id":4013,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6328:8:20","nodeType":"FunctionDefinition","parameters":{"id":4002,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3999,"mutability":"mutable","name":"set","nameLocation":"6356:3:20","nodeType":"VariableDeclaration","scope":4013,"src":"6337:22:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3959_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3998,"nodeType":"UserDefinedTypeName","pathNode":{"id":3997,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":3959,"src":"6337:10:20"},"referencedDeclaration":3959,"src":"6337:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3959_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":4001,"mutability":"mutable","name":"value","nameLocation":"6369:5:20","nodeType":"VariableDeclaration","scope":4013,"src":"6361:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4000,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6361:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6336:39:20"},"returnParameters":{"id":4005,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4004,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4013,"src":"6399:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4003,"name":"bool","nodeType":"ElementaryTypeName","src":"6399:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6398:6:20"},"scope":4353,"src":"6319:138:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4027,"nodeType":"Block","src":"6610:43:20","statements":[{"expression":{"arguments":[{"expression":{"id":4023,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4017,"src":"6635:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3959_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":4024,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3958,"src":"6635:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3765_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":4022,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"6627:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3765_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":4025,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6627:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4021,"id":4026,"nodeType":"Return","src":"6620:26:20"}]},"documentation":{"id":4014,"nodeType":"StructuredDocumentation","src":"6463:70:20","text":" @dev Returns the number of values in the set. O(1)."},"id":4028,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6547:6:20","nodeType":"FunctionDefinition","parameters":{"id":4018,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4017,"mutability":"mutable","name":"set","nameLocation":"6573:3:20","nodeType":"VariableDeclaration","scope":4028,"src":"6554:22:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3959_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":4016,"nodeType":"UserDefinedTypeName","pathNode":{"id":4015,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":3959,"src":"6554:10:20"},"referencedDeclaration":3959,"src":"6554:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3959_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"6553:24:20"},"returnParameters":{"id":4021,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4020,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4028,"src":"6601:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4019,"name":"uint256","nodeType":"ElementaryTypeName","src":"6601:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6600:9:20"},"scope":4353,"src":"6538:115:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4045,"nodeType":"Block","src":"7078:46:20","statements":[{"expression":{"arguments":[{"expression":{"id":4040,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4032,"src":"7099:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3959_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":4041,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3958,"src":"7099:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":4042,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4034,"src":"7111:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3765_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4039,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"7095:3:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3765_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":4043,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7095:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4038,"id":4044,"nodeType":"Return","src":"7088:29:20"}]},"documentation":{"id":4029,"nodeType":"StructuredDocumentation","src":"6659:331:20","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":4046,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7004:2:20","nodeType":"FunctionDefinition","parameters":{"id":4035,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4032,"mutability":"mutable","name":"set","nameLocation":"7026:3:20","nodeType":"VariableDeclaration","scope":4046,"src":"7007:22:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3959_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":4031,"nodeType":"UserDefinedTypeName","pathNode":{"id":4030,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":3959,"src":"7007:10:20"},"referencedDeclaration":3959,"src":"7007:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3959_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":4034,"mutability":"mutable","name":"index","nameLocation":"7039:5:20","nodeType":"VariableDeclaration","scope":4046,"src":"7031:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4033,"name":"uint256","nodeType":"ElementaryTypeName","src":"7031:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7006:39:20"},"returnParameters":{"id":4038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4037,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4046,"src":"7069:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4036,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7069:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7068:9:20"},"scope":4353,"src":"6995:129:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4061,"nodeType":"Block","src":"7745:43:20","statements":[{"expression":{"arguments":[{"expression":{"id":4057,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4050,"src":"7770:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3959_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":4058,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":3958,"src":"7770:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3765_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":4056,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"7762:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3765_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":4059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7762:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":4055,"id":4060,"nodeType":"Return","src":"7755:26:20"}]},"documentation":{"id":4047,"nodeType":"StructuredDocumentation","src":"7130:529:20","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":4062,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7673:6:20","nodeType":"FunctionDefinition","parameters":{"id":4051,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4050,"mutability":"mutable","name":"set","nameLocation":"7699:3:20","nodeType":"VariableDeclaration","scope":4062,"src":"7680:22:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3959_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":4049,"nodeType":"UserDefinedTypeName","pathNode":{"id":4048,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":3959,"src":"7680:10:20"},"referencedDeclaration":3959,"src":"7680:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$3959_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7679:24:20"},"returnParameters":{"id":4055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4054,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4062,"src":"7727:16:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4052,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7727:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4053,"nodeType":"ArrayTypeName","src":"7727:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7726:18:20"},"scope":4353,"src":"7664:124:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":4066,"members":[{"constant":false,"id":4065,"mutability":"mutable","name":"_inner","nameLocation":"7845:6:20","nodeType":"VariableDeclaration","scope":4066,"src":"7841:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4064,"nodeType":"UserDefinedTypeName","pathNode":{"id":4063,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":3765,"src":"7841:3:20"},"referencedDeclaration":3765,"src":"7841:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"7820:10:20","nodeType":"StructDefinition","scope":4353,"src":"7813:45:20","visibility":"public"},{"body":{"id":4092,"nodeType":"Block","src":"8104:74:20","statements":[{"expression":{"arguments":[{"expression":{"id":4078,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4070,"src":"8126:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4066_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":4079,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4065,"src":"8126:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":4086,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4072,"src":"8162:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8154:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4084,"name":"uint160","nodeType":"ElementaryTypeName","src":"8154:7:20","typeDescriptions":{}}},"id":4087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8154:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4083,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8146:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4082,"name":"uint256","nodeType":"ElementaryTypeName","src":"8146:7:20","typeDescriptions":{}}},"id":4088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8146:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8138:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4080,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8138:7:20","typeDescriptions":{}}},"id":4089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8138:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3765_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4077,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"8121:4:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3765_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":4090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8121:50:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4076,"id":4091,"nodeType":"Return","src":"8114:57:20"}]},"documentation":{"id":4067,"nodeType":"StructuredDocumentation","src":"7864:159:20","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":4093,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8037:3:20","nodeType":"FunctionDefinition","parameters":{"id":4073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4070,"mutability":"mutable","name":"set","nameLocation":"8060:3:20","nodeType":"VariableDeclaration","scope":4093,"src":"8041:22:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4066_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":4069,"nodeType":"UserDefinedTypeName","pathNode":{"id":4068,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":4066,"src":"8041:10:20"},"referencedDeclaration":4066,"src":"8041:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4066_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":4072,"mutability":"mutable","name":"value","nameLocation":"8073:5:20","nodeType":"VariableDeclaration","scope":4093,"src":"8065:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4071,"name":"address","nodeType":"ElementaryTypeName","src":"8065:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8040:39:20"},"returnParameters":{"id":4076,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4075,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4093,"src":"8098:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4074,"name":"bool","nodeType":"ElementaryTypeName","src":"8098:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8097:6:20"},"scope":4353,"src":"8028:150:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4119,"nodeType":"Block","src":"8425:77:20","statements":[{"expression":{"arguments":[{"expression":{"id":4105,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4097,"src":"8450:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4066_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":4106,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4065,"src":"8450:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":4113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4099,"src":"8486:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8478:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4111,"name":"uint160","nodeType":"ElementaryTypeName","src":"8478:7:20","typeDescriptions":{}}},"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8478:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4110,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8470:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4109,"name":"uint256","nodeType":"ElementaryTypeName","src":"8470:7:20","typeDescriptions":{}}},"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8470:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4108,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8462:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4107,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8462:7:20","typeDescriptions":{}}},"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8462:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3765_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4104,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"8442:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3765_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":4117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8442:53:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4103,"id":4118,"nodeType":"Return","src":"8435:60:20"}]},"documentation":{"id":4094,"nodeType":"StructuredDocumentation","src":"8184:157:20","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":4120,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8355:6:20","nodeType":"FunctionDefinition","parameters":{"id":4100,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4097,"mutability":"mutable","name":"set","nameLocation":"8381:3:20","nodeType":"VariableDeclaration","scope":4120,"src":"8362:22:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4066_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":4096,"nodeType":"UserDefinedTypeName","pathNode":{"id":4095,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":4066,"src":"8362:10:20"},"referencedDeclaration":4066,"src":"8362:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4066_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":4099,"mutability":"mutable","name":"value","nameLocation":"8394:5:20","nodeType":"VariableDeclaration","scope":4120,"src":"8386:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4098,"name":"address","nodeType":"ElementaryTypeName","src":"8386:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8361:39:20"},"returnParameters":{"id":4103,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4102,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4120,"src":"8419:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4101,"name":"bool","nodeType":"ElementaryTypeName","src":"8419:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8418:6:20"},"scope":4353,"src":"8346:156:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4146,"nodeType":"Block","src":"8669:79:20","statements":[{"expression":{"arguments":[{"expression":{"id":4132,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4124,"src":"8696:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4066_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":4133,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4065,"src":"8696:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":4140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4126,"src":"8732:5:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4139,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8724:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4138,"name":"uint160","nodeType":"ElementaryTypeName","src":"8724:7:20","typeDescriptions":{}}},"id":4141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8724:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4137,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8716:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4136,"name":"uint256","nodeType":"ElementaryTypeName","src":"8716:7:20","typeDescriptions":{}}},"id":4142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8716:23:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8708:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4134,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8708:7:20","typeDescriptions":{}}},"id":4143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8708:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3765_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4131,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3910,"src":"8686:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3765_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":4144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8686:55:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4130,"id":4145,"nodeType":"Return","src":"8679:62:20"}]},"documentation":{"id":4121,"nodeType":"StructuredDocumentation","src":"8508:70:20","text":" @dev Returns true if the value is in the set. O(1)."},"id":4147,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8592:8:20","nodeType":"FunctionDefinition","parameters":{"id":4127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4124,"mutability":"mutable","name":"set","nameLocation":"8620:3:20","nodeType":"VariableDeclaration","scope":4147,"src":"8601:22:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4066_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":4123,"nodeType":"UserDefinedTypeName","pathNode":{"id":4122,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":4066,"src":"8601:10:20"},"referencedDeclaration":4066,"src":"8601:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4066_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":4126,"mutability":"mutable","name":"value","nameLocation":"8633:5:20","nodeType":"VariableDeclaration","scope":4147,"src":"8625:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4125,"name":"address","nodeType":"ElementaryTypeName","src":"8625:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8600:39:20"},"returnParameters":{"id":4130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4129,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4147,"src":"8663:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4128,"name":"bool","nodeType":"ElementaryTypeName","src":"8663:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8662:6:20"},"scope":4353,"src":"8583:165:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4161,"nodeType":"Block","src":"8901:43:20","statements":[{"expression":{"arguments":[{"expression":{"id":4157,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4151,"src":"8926:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4066_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":4158,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4065,"src":"8926:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3765_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":4156,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"8918:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3765_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8918:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4155,"id":4160,"nodeType":"Return","src":"8911:26:20"}]},"documentation":{"id":4148,"nodeType":"StructuredDocumentation","src":"8754:70:20","text":" @dev Returns the number of values in the set. O(1)."},"id":4162,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"8838:6:20","nodeType":"FunctionDefinition","parameters":{"id":4152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4151,"mutability":"mutable","name":"set","nameLocation":"8864:3:20","nodeType":"VariableDeclaration","scope":4162,"src":"8845:22:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4066_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":4150,"nodeType":"UserDefinedTypeName","pathNode":{"id":4149,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":4066,"src":"8845:10:20"},"referencedDeclaration":4066,"src":"8845:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4066_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"8844:24:20"},"returnParameters":{"id":4155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4154,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4162,"src":"8892:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4153,"name":"uint256","nodeType":"ElementaryTypeName","src":"8892:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8891:9:20"},"scope":4353,"src":"8829:115:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4188,"nodeType":"Block","src":"9369:73:20","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":4180,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4166,"src":"9414:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4066_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":4181,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4065,"src":"9414:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":4182,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4168,"src":"9426:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3765_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4179,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"9410:3:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3765_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":4183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9410:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9402:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4177,"name":"uint256","nodeType":"ElementaryTypeName","src":"9402:7:20","typeDescriptions":{}}},"id":4184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9402:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9394:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4175,"name":"uint160","nodeType":"ElementaryTypeName","src":"9394:7:20","typeDescriptions":{}}},"id":4185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9394:40:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9386:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4173,"name":"address","nodeType":"ElementaryTypeName","src":"9386:7:20","typeDescriptions":{}}},"id":4186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9386:49:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4172,"id":4187,"nodeType":"Return","src":"9379:56:20"}]},"documentation":{"id":4163,"nodeType":"StructuredDocumentation","src":"8950:331:20","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":4189,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9295:2:20","nodeType":"FunctionDefinition","parameters":{"id":4169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4166,"mutability":"mutable","name":"set","nameLocation":"9317:3:20","nodeType":"VariableDeclaration","scope":4189,"src":"9298:22:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4066_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":4165,"nodeType":"UserDefinedTypeName","pathNode":{"id":4164,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":4066,"src":"9298:10:20"},"referencedDeclaration":4066,"src":"9298:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4066_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":4168,"mutability":"mutable","name":"index","nameLocation":"9330:5:20","nodeType":"VariableDeclaration","scope":4189,"src":"9322:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4167,"name":"uint256","nodeType":"ElementaryTypeName","src":"9322:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9297:39:20"},"returnParameters":{"id":4172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4189,"src":"9360:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4170,"name":"address","nodeType":"ElementaryTypeName","src":"9360:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9359:9:20"},"scope":4353,"src":"9286:156:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4218,"nodeType":"Block","src":"10063:219:20","statements":[{"assignments":[4203],"declarations":[{"constant":false,"id":4203,"mutability":"mutable","name":"store","nameLocation":"10090:5:20","nodeType":"VariableDeclaration","scope":4218,"src":"10073:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4201,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10073:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4202,"nodeType":"ArrayTypeName","src":"10073:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":4208,"initialValue":{"arguments":[{"expression":{"id":4205,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4193,"src":"10106:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4066_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":4206,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4065,"src":"10106:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3765_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":4204,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"10098:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3765_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":4207,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10098:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10073:44:20"},{"assignments":[4213],"declarations":[{"constant":false,"id":4213,"mutability":"mutable","name":"result","nameLocation":"10144:6:20","nodeType":"VariableDeclaration","scope":4218,"src":"10127:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4211,"name":"address","nodeType":"ElementaryTypeName","src":"10127:7:20","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4212,"nodeType":"ArrayTypeName","src":"10127:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":4214,"nodeType":"VariableDeclarationStatement","src":"10127:23:20"},{"AST":{"nodeType":"YulBlock","src":"10213:39:20","statements":[{"nodeType":"YulAssignment","src":"10227:15:20","value":{"name":"store","nodeType":"YulIdentifier","src":"10237:5:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10227:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":4213,"isOffset":false,"isSlot":false,"src":"10227:6:20","valueSize":1},{"declaration":4203,"isOffset":false,"isSlot":false,"src":"10237:5:20","valueSize":1}],"id":4215,"nodeType":"InlineAssembly","src":"10204:48:20"},{"expression":{"id":4216,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4213,"src":"10269:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":4198,"id":4217,"nodeType":"Return","src":"10262:13:20"}]},"documentation":{"id":4190,"nodeType":"StructuredDocumentation","src":"9448:529:20","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":4219,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"9991:6:20","nodeType":"FunctionDefinition","parameters":{"id":4194,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4193,"mutability":"mutable","name":"set","nameLocation":"10017:3:20","nodeType":"VariableDeclaration","scope":4219,"src":"9998:22:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4066_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":4192,"nodeType":"UserDefinedTypeName","pathNode":{"id":4191,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":4066,"src":"9998:10:20"},"referencedDeclaration":4066,"src":"9998:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$4066_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"9997:24:20"},"returnParameters":{"id":4198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4219,"src":"10045:16:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4195,"name":"address","nodeType":"ElementaryTypeName","src":"10045:7:20","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4196,"nodeType":"ArrayTypeName","src":"10045:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10044:18:20"},"scope":4353,"src":"9982:300:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":4223,"members":[{"constant":false,"id":4222,"mutability":"mutable","name":"_inner","nameLocation":"10333:6:20","nodeType":"VariableDeclaration","scope":4223,"src":"10329:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":4221,"nodeType":"UserDefinedTypeName","pathNode":{"id":4220,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":3765,"src":"10329:3:20"},"referencedDeclaration":3765,"src":"10329:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10311:7:20","nodeType":"StructDefinition","scope":4353,"src":"10304:42:20","visibility":"public"},{"body":{"id":4243,"nodeType":"Block","src":"10589:56:20","statements":[{"expression":{"arguments":[{"expression":{"id":4235,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"10611:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4223_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4236,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4222,"src":"10611:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":4239,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4229,"src":"10631:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4238,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10623:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4237,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10623:7:20","typeDescriptions":{}}},"id":4240,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10623:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3765_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4234,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"10606:4:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3765_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":4241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10606:32:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4233,"id":4242,"nodeType":"Return","src":"10599:39:20"}]},"documentation":{"id":4224,"nodeType":"StructuredDocumentation","src":"10352:159:20","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":4244,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10525:3:20","nodeType":"FunctionDefinition","parameters":{"id":4230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4227,"mutability":"mutable","name":"set","nameLocation":"10545:3:20","nodeType":"VariableDeclaration","scope":4244,"src":"10529:19:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4223_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4226,"nodeType":"UserDefinedTypeName","pathNode":{"id":4225,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":4223,"src":"10529:7:20"},"referencedDeclaration":4223,"src":"10529:7:20","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4223_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":4229,"mutability":"mutable","name":"value","nameLocation":"10558:5:20","nodeType":"VariableDeclaration","scope":4244,"src":"10550:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4228,"name":"uint256","nodeType":"ElementaryTypeName","src":"10550:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10528:36:20"},"returnParameters":{"id":4233,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4232,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4244,"src":"10583:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4231,"name":"bool","nodeType":"ElementaryTypeName","src":"10583:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10582:6:20"},"scope":4353,"src":"10516:129:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4264,"nodeType":"Block","src":"10889:59:20","statements":[{"expression":{"arguments":[{"expression":{"id":4256,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4248,"src":"10914:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4223_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4257,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4222,"src":"10914:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":4260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4250,"src":"10934:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10926:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4258,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10926:7:20","typeDescriptions":{}}},"id":4261,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10926:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3765_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4255,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"10906:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$3765_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":4262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10906:35:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4254,"id":4263,"nodeType":"Return","src":"10899:42:20"}]},"documentation":{"id":4245,"nodeType":"StructuredDocumentation","src":"10651:157:20","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":4265,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"10822:6:20","nodeType":"FunctionDefinition","parameters":{"id":4251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4248,"mutability":"mutable","name":"set","nameLocation":"10845:3:20","nodeType":"VariableDeclaration","scope":4265,"src":"10829:19:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4223_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4247,"nodeType":"UserDefinedTypeName","pathNode":{"id":4246,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":4223,"src":"10829:7:20"},"referencedDeclaration":4223,"src":"10829:7:20","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4223_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":4250,"mutability":"mutable","name":"value","nameLocation":"10858:5:20","nodeType":"VariableDeclaration","scope":4265,"src":"10850:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4249,"name":"uint256","nodeType":"ElementaryTypeName","src":"10850:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10828:36:20"},"returnParameters":{"id":4254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4265,"src":"10883:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4252,"name":"bool","nodeType":"ElementaryTypeName","src":"10883:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10882:6:20"},"scope":4353,"src":"10813:135:20","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4285,"nodeType":"Block","src":"11112:61:20","statements":[{"expression":{"arguments":[{"expression":{"id":4277,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4269,"src":"11139:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4223_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4278,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4222,"src":"11139:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":4281,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4271,"src":"11159:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4280,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11151:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":4279,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11151:7:20","typeDescriptions":{}}},"id":4282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11151:14:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3765_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4276,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3910,"src":"11129:9:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3765_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":4283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11129:37:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4275,"id":4284,"nodeType":"Return","src":"11122:44:20"}]},"documentation":{"id":4266,"nodeType":"StructuredDocumentation","src":"10954:70:20","text":" @dev Returns true if the value is in the set. O(1)."},"id":4286,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11038:8:20","nodeType":"FunctionDefinition","parameters":{"id":4272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4269,"mutability":"mutable","name":"set","nameLocation":"11063:3:20","nodeType":"VariableDeclaration","scope":4286,"src":"11047:19:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4223_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4268,"nodeType":"UserDefinedTypeName","pathNode":{"id":4267,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":4223,"src":"11047:7:20"},"referencedDeclaration":4223,"src":"11047:7:20","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4223_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":4271,"mutability":"mutable","name":"value","nameLocation":"11076:5:20","nodeType":"VariableDeclaration","scope":4286,"src":"11068:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4270,"name":"uint256","nodeType":"ElementaryTypeName","src":"11068:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11046:36:20"},"returnParameters":{"id":4275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4286,"src":"11106:4:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4273,"name":"bool","nodeType":"ElementaryTypeName","src":"11106:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11105:6:20"},"scope":4353,"src":"11029:144:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4300,"nodeType":"Block","src":"11323:43:20","statements":[{"expression":{"arguments":[{"expression":{"id":4296,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4290,"src":"11348:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4223_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4297,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4222,"src":"11348:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3765_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":4295,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3924,"src":"11340:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3765_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":4298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11340:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4294,"id":4299,"nodeType":"Return","src":"11333:26:20"}]},"documentation":{"id":4287,"nodeType":"StructuredDocumentation","src":"11179:70:20","text":" @dev Returns the number of values on the set. O(1)."},"id":4301,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11263:6:20","nodeType":"FunctionDefinition","parameters":{"id":4291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4290,"mutability":"mutable","name":"set","nameLocation":"11286:3:20","nodeType":"VariableDeclaration","scope":4301,"src":"11270:19:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4223_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4289,"nodeType":"UserDefinedTypeName","pathNode":{"id":4288,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":4223,"src":"11270:7:20"},"referencedDeclaration":4223,"src":"11270:7:20","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4223_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"11269:21:20"},"returnParameters":{"id":4294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4301,"src":"11314:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4292,"name":"uint256","nodeType":"ElementaryTypeName","src":"11314:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11313:9:20"},"scope":4353,"src":"11254:112:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4321,"nodeType":"Block","src":"11788:55:20","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":4315,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"11817:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4223_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4316,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4222,"src":"11817:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":4317,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4307,"src":"11829:5:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3765_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4314,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3941,"src":"11813:3:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3765_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":4318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11813:22:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":4313,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11805:7:20","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4312,"name":"uint256","nodeType":"ElementaryTypeName","src":"11805:7:20","typeDescriptions":{}}},"id":4319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11805:31:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4311,"id":4320,"nodeType":"Return","src":"11798:38:20"}]},"documentation":{"id":4302,"nodeType":"StructuredDocumentation","src":"11372:331:20","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":4322,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"11717:2:20","nodeType":"FunctionDefinition","parameters":{"id":4308,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4305,"mutability":"mutable","name":"set","nameLocation":"11736:3:20","nodeType":"VariableDeclaration","scope":4322,"src":"11720:19:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4223_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4304,"nodeType":"UserDefinedTypeName","pathNode":{"id":4303,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":4223,"src":"11720:7:20"},"referencedDeclaration":4223,"src":"11720:7:20","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4223_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":4307,"mutability":"mutable","name":"index","nameLocation":"11749:5:20","nodeType":"VariableDeclaration","scope":4322,"src":"11741:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4306,"name":"uint256","nodeType":"ElementaryTypeName","src":"11741:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11719:36:20"},"returnParameters":{"id":4311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4310,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4322,"src":"11779:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4309,"name":"uint256","nodeType":"ElementaryTypeName","src":"11779:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11778:9:20"},"scope":4353,"src":"11708:135:20","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4351,"nodeType":"Block","src":"12461:219:20","statements":[{"assignments":[4336],"declarations":[{"constant":false,"id":4336,"mutability":"mutable","name":"store","nameLocation":"12488:5:20","nodeType":"VariableDeclaration","scope":4351,"src":"12471:22:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":4334,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12471:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4335,"nodeType":"ArrayTypeName","src":"12471:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":4341,"initialValue":{"arguments":[{"expression":{"id":4338,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4326,"src":"12504:3:20","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4223_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":4339,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":4222,"src":"12504:10:20","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$3765_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$3765_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":4337,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"12496:7:20","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$3765_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":4340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12496:19:20","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12471:44:20"},{"assignments":[4346],"declarations":[{"constant":false,"id":4346,"mutability":"mutable","name":"result","nameLocation":"12542:6:20","nodeType":"VariableDeclaration","scope":4351,"src":"12525:23:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4344,"name":"uint256","nodeType":"ElementaryTypeName","src":"12525:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4345,"nodeType":"ArrayTypeName","src":"12525:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":4347,"nodeType":"VariableDeclarationStatement","src":"12525:23:20"},{"AST":{"nodeType":"YulBlock","src":"12611:39:20","statements":[{"nodeType":"YulAssignment","src":"12625:15:20","value":{"name":"store","nodeType":"YulIdentifier","src":"12635:5:20"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12625:6:20"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":4346,"isOffset":false,"isSlot":false,"src":"12625:6:20","valueSize":1},{"declaration":4336,"isOffset":false,"isSlot":false,"src":"12635:5:20","valueSize":1}],"id":4348,"nodeType":"InlineAssembly","src":"12602:48:20"},{"expression":{"id":4349,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4346,"src":"12667:6:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":4331,"id":4350,"nodeType":"Return","src":"12660:13:20"}]},"documentation":{"id":4323,"nodeType":"StructuredDocumentation","src":"11849:529:20","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":4352,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12392:6:20","nodeType":"FunctionDefinition","parameters":{"id":4327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4326,"mutability":"mutable","name":"set","nameLocation":"12415:3:20","nodeType":"VariableDeclaration","scope":4352,"src":"12399:19:20","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4223_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":4325,"nodeType":"UserDefinedTypeName","pathNode":{"id":4324,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":4223,"src":"12399:7:20"},"referencedDeclaration":4223,"src":"12399:7:20","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$4223_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12398:21:20"},"returnParameters":{"id":4331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4330,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4352,"src":"12443:16:20","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":4328,"name":"uint256","nodeType":"ElementaryTypeName","src":"12443:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4329,"nodeType":"ArrayTypeName","src":"12443:9:20","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12442:18:20"},"scope":4353,"src":"12383:297:20","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4354,"src":"1228:11454:20","usedErrors":[]}],"src":"115:12568:20"},"id":20},"contracts/BEP20/Administration.sol":{"ast":{"absolutePath":"contracts/BEP20/Administration.sol","exportedSymbols":{"AccessControl":[319],"AccessControlEnumerable":[444],"Administration":[4379],"Context":[1754],"ERC165":[2620],"EnumerableSet":[4353],"IAccessControl":[517],"IAccessControlEnumerable":[542],"IERC165":[2632],"Strings":[2054]},"id":4380,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4355,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:21"},{"absolutePath":"@openzeppelin/contracts/access/AccessControlEnumerable.sol","file":"@openzeppelin/contracts/access/AccessControlEnumerable.sol","id":4356,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4380,"sourceUnit":445,"src":"57:68:21","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4357,"name":"AccessControlEnumerable","nodeType":"IdentifierPath","referencedDeclaration":444,"src":"163:23:21"},"id":4358,"nodeType":"InheritanceSpecifier","src":"163:23:21"}],"canonicalName":"Administration","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4379,"linearizedBaseContracts":[4379,444,319,2620,2632,542,517,1754],"name":"Administration","nameLocation":"145:14:21","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"d5391393","id":4363,"mutability":"constant","name":"MINTER_ROLE","nameLocation":"218:11:21","nodeType":"VariableDeclaration","scope":4379,"src":"194:62:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4359,"name":"bytes32","nodeType":"ElementaryTypeName","src":"194:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"4d494e5445525f524f4c45","id":4361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"242:13:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""},"value":"MINTER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6","typeString":"literal_string \"MINTER_ROLE\""}],"id":4360,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"232:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4362,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"232:24:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"51bcee27","id":4368,"mutability":"constant","name":"RESTRICTOR_ROLE","nameLocation":"286:15:21","nodeType":"VariableDeclaration","scope":4379,"src":"262:70:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4364,"name":"bytes32","nodeType":"ElementaryTypeName","src":"262:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"52455354524943544f525f524f4c45","id":4366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"314:17:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_23ab0e580195340a5a67800cafa0615701edfa22f79534a52851336e3cf8376a","typeString":"literal_string \"RESTRICTOR_ROLE\""},"value":"RESTRICTOR_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_23ab0e580195340a5a67800cafa0615701edfa22f79534a52851336e3cf8376a","typeString":"literal_string \"RESTRICTOR_ROLE\""}],"id":4365,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"304:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4367,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"304:28:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"3e0b2cda","id":4373,"mutability":"constant","name":"TRANSFER_LIMIT_SETTER","nameLocation":"362:21:21","nodeType":"VariableDeclaration","scope":4379,"src":"338:82:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4369,"name":"bytes32","nodeType":"ElementaryTypeName","src":"338:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5452414e534645525f4c494d49545f534554544552","id":4371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"396:23:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_b24c1025622fe38445b605f5c1a9bb02be7f6522d24c8a159e5e47e62dbaaecf","typeString":"literal_string \"TRANSFER_LIMIT_SETTER\""},"value":"TRANSFER_LIMIT_SETTER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_b24c1025622fe38445b605f5c1a9bb02be7f6522d24c8a159e5e47e62dbaaecf","typeString":"literal_string \"TRANSFER_LIMIT_SETTER\""}],"id":4370,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"386:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4372,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"386:34:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"0ecbd033","id":4378,"mutability":"constant","name":"TRANSACTION_FEE_SETTER","nameLocation":"450:22:21","nodeType":"VariableDeclaration","scope":4379,"src":"426:84:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4374,"name":"bytes32","nodeType":"ElementaryTypeName","src":"426:7:21","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5452414e53414354494f4e5f4645455f534554544552","id":4376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"485:24:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_d0ac125722f4b4565ab5e91b234e50c4c6f541672aea816ba090a0ea349ed93f","typeString":"literal_string \"TRANSACTION_FEE_SETTER\""},"value":"TRANSACTION_FEE_SETTER"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_d0ac125722f4b4565ab5e91b234e50c4c6f541672aea816ba090a0ea349ed93f","typeString":"literal_string \"TRANSACTION_FEE_SETTER\""}],"id":4375,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"475:9:21","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":4377,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"475:35:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"}],"scope":4380,"src":"127:387:21","usedErrors":[]}],"src":"32:482:21"},"id":21},"contracts/BEP20/BLBToken.sol":{"ast":{"absolutePath":"contracts/BEP20/BLBToken.sol","exportedSymbols":{"AccessControl":[319],"AccessControlEnumerable":[444],"Administration":[4379],"BLBToken":[4566],"Context":[1754],"Counters":[1828],"ECDSA":[2442],"EIP712":[2596],"ERC165":[2620],"ERC20":[1312],"ERC20Burnable":[1434],"ERC20Capped":[1499],"ERC20Permit":[1696],"EnumerableMap":[3754],"EnumerableSet":[4353],"IAccessControl":[517],"IAccessControlEnumerable":[542],"IERC165":[2632],"IERC20":[1390],"IERC20Metadata":[1524],"IERC20Permit":[1732],"Strings":[2054],"TransactionFee":[4751],"TransferControl":[5168]},"id":4567,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4381,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:22"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":4382,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4567,"sourceUnit":1313,"src":"57:55:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol","id":4383,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4567,"sourceUnit":1500,"src":"113:72:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","id":4384,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4567,"sourceUnit":1435,"src":"186:74:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol","id":4385,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4567,"sourceUnit":1697,"src":"261:78:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/BEP20/TransferControl.sol","file":"./TransferControl.sol","id":4386,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4567,"sourceUnit":5169,"src":"340:31:22","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/BEP20/TransactionFee.sol","file":"./TransactionFee.sol","id":4387,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4567,"sourceUnit":4752,"src":"372:30:22","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4389,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":1312,"src":"476:5:22"},"id":4390,"nodeType":"InheritanceSpecifier","src":"476:5:22"},{"baseName":{"id":4391,"name":"ERC20Capped","nodeType":"IdentifierPath","referencedDeclaration":1499,"src":"488:11:22"},"id":4392,"nodeType":"InheritanceSpecifier","src":"488:11:22"},{"baseName":{"id":4393,"name":"ERC20Burnable","nodeType":"IdentifierPath","referencedDeclaration":1434,"src":"506:13:22"},"id":4394,"nodeType":"InheritanceSpecifier","src":"506:13:22"},{"baseName":{"id":4395,"name":"ERC20Permit","nodeType":"IdentifierPath","referencedDeclaration":1696,"src":"526:11:22"},"id":4396,"nodeType":"InheritanceSpecifier","src":"526:11:22"},{"baseName":{"id":4397,"name":"TransactionFee","nodeType":"IdentifierPath","referencedDeclaration":4751,"src":"544:14:22"},"id":4398,"nodeType":"InheritanceSpecifier","src":"544:14:22"},{"baseName":{"id":4399,"name":"TransferControl","nodeType":"IdentifierPath","referencedDeclaration":5168,"src":"564:15:22"},"id":4400,"nodeType":"InheritanceSpecifier","src":"564:15:22"}],"canonicalName":"BLBToken","contractDependencies":[],"contractKind":"contract","documentation":{"id":4388,"nodeType":"StructuredDocumentation","src":"404:45:22","text":" @title Boundless World (BLB) Token"},"fullyImplemented":true,"id":4566,"linearizedBaseContracts":[4566,5168,4751,4379,444,319,2620,2632,542,517,1696,2596,1732,1434,1499,1312,1524,1390,1754],"name":"BLBToken","nameLocation":"459:8:22","nodeType":"ContractDefinition","nodes":[{"body":{"id":4455,"nodeType":"Block","src":"822:274:22","statements":[{"expression":{"arguments":[{"id":4431,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"843:18:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4432,"name":"initialAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"863:12:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4430,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[419],"referencedDeclaration":419,"src":"832:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":4433,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"832:44:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4434,"nodeType":"ExpressionStatement","src":"832:44:22"},{"expression":{"arguments":[{"id":4436,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"897:11:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4437,"name":"initialAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"910:12:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4435,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[419],"referencedDeclaration":419,"src":"886:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":4438,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"886:37:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4439,"nodeType":"ExpressionStatement","src":"886:37:22"},{"expression":{"arguments":[{"id":4441,"name":"TRANSACTION_FEE_SETTER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4378,"src":"944:22:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4442,"name":"initialAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"968:12:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4440,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[419],"referencedDeclaration":419,"src":"933:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"933:48:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4444,"nodeType":"ExpressionStatement","src":"933:48:22"},{"expression":{"arguments":[{"id":4446,"name":"TRANSFER_LIMIT_SETTER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4373,"src":"1002:21:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4447,"name":"initialAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"1025:12:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4445,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[419],"referencedDeclaration":419,"src":"991:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":4448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"991:47:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4449,"nodeType":"ExpressionStatement","src":"991:47:22"},{"expression":{"arguments":[{"id":4451,"name":"RESTRICTOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4368,"src":"1059:15:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4452,"name":"initialAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4404,"src":"1076:12:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4450,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[419],"referencedDeclaration":419,"src":"1048:10:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":4453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1048:41:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4454,"nodeType":"ExpressionStatement","src":"1048:41:22"}]},"id":4456,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":4407,"name":"_monthlyTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4402,"src":"667:11:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4408,"kind":"baseConstructorSpecifier","modifierName":{"id":4406,"name":"TransferControl","nodeType":"IdentifierPath","referencedDeclaration":5168,"src":"651:15:22"},"nodeType":"ModifierInvocation","src":"651:28:22"},{"arguments":[{"hexValue":"426f756e646c65737320576f726c64","id":4410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"694:17:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_638c2cba767e7ec7b312e0ceae64c387631b2b20414c9138c458a8bd55d4d2c8","typeString":"literal_string \"Boundless World\""},"value":"Boundless World"},{"hexValue":"424c42","id":4411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"713:5:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_0a126e9359d1b2bfb5af5c5a3357fa9f35ca35e042981805904b450837803933","typeString":"literal_string \"BLB\""},"value":"BLB"}],"id":4412,"kind":"baseConstructorSpecifier","modifierName":{"id":4409,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":1312,"src":"688:5:22"},"nodeType":"ModifierInvocation","src":"688:31:22"},{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_3690000000_by_1","typeString":"int_const 3690000000"},"id":4418,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"332e3639","id":4414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"742:4:22","typeDescriptions":{"typeIdentifier":"t_rational_369_by_100","typeString":"rational_const 369 / 100"},"value":"3.69"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000000_by_1","typeString":"int_const 1000000000"},"id":4417,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4415,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"749:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"39","id":4416,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"755:1:22","typeDescriptions":{"typeIdentifier":"t_rational_9_by_1","typeString":"int_const 9"},"value":"9"},"src":"749:7:22","typeDescriptions":{"typeIdentifier":"t_rational_1000000000_by_1","typeString":"int_const 1000000000"}},"src":"742:14:22","typeDescriptions":{"typeIdentifier":"t_rational_3690000000_by_1","typeString":"int_const 3690000000"}}],"id":4419,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"741:16:22","typeDescriptions":{"typeIdentifier":"t_rational_3690000000_by_1","typeString":"int_const 3690000000"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4423,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"760:2:22","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4421,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"766:8:22","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"766:10:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"760:16:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"741:35:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4425,"kind":"baseConstructorSpecifier","modifierName":{"id":4413,"name":"ERC20Capped","nodeType":"IdentifierPath","referencedDeclaration":1499,"src":"729:11:22"},"nodeType":"ModifierInvocation","src":"729:48:22"},{"arguments":[{"hexValue":"426f756e646c65737320576f726c64","id":4427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"798:17:22","typeDescriptions":{"typeIdentifier":"t_stringliteral_638c2cba767e7ec7b312e0ceae64c387631b2b20414c9138c458a8bd55d4d2c8","typeString":"literal_string \"Boundless World\""},"value":"Boundless World"}],"id":4428,"kind":"baseConstructorSpecifier","modifierName":{"id":4426,"name":"ERC20Permit","nodeType":"IdentifierPath","referencedDeclaration":1696,"src":"786:11:22"},"nodeType":"ModifierInvocation","src":"786:30:22"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4402,"mutability":"mutable","name":"_monthlyTime","nameLocation":"607:11:22","nodeType":"VariableDeclaration","scope":4456,"src":"599:19:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4401,"name":"uint256","nodeType":"ElementaryTypeName","src":"599:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4404,"mutability":"mutable","name":"initialAdmin","nameLocation":"628:12:22","nodeType":"VariableDeclaration","scope":4456,"src":"620:20:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4403,"name":"address","nodeType":"ElementaryTypeName","src":"620:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"598:43:22"},"returnParameters":{"id":4429,"nodeType":"ParameterList","parameters":[],"src":"822:0:22"},"scope":4566,"src":"587:509:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4486,"nodeType":"Block","src":"1218:106:22","statements":[{"body":{"id":4484,"nodeType":"Block","src":"1267:51:22","statements":[{"expression":{"arguments":[{"baseExpression":{"id":4478,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"1287:8:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4480,"indexExpression":{"id":4479,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4468,"src":"1296:1:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1287:11:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4481,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4461,"src":"1300:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4477,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[4522],"referencedDeclaration":4522,"src":"1281:5:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1281:26:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4483,"nodeType":"ExpressionStatement","src":"1281:26:22"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4470,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4468,"src":"1242:1:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4471,"name":"accounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4459,"src":"1246:8:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":4472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1246:15:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1242:19:22","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4485,"initializationExpression":{"assignments":[4468],"declarations":[{"constant":false,"id":4468,"mutability":"mutable","name":"i","nameLocation":"1239:1:22","nodeType":"VariableDeclaration","scope":4485,"src":"1232:8:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":4467,"name":"uint16","nodeType":"ElementaryTypeName","src":"1232:6:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"id":4469,"nodeType":"VariableDeclarationStatement","src":"1232:8:22"},"loopExpression":{"expression":{"id":4475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1263:3:22","subExpression":{"id":4474,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4468,"src":"1263:1:22","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"id":4476,"nodeType":"ExpressionStatement","src":"1263:3:22"},"nodeType":"ForStatement","src":"1228:90:22"}]},"functionSelector":"b6afc4dc","id":4487,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":4464,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"1205:11:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4465,"kind":"modifierInvocation","modifierName":{"id":4463,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"1196:8:22"},"nodeType":"ModifierInvocation","src":"1196:21:22"}],"name":"mintBatch","nameLocation":"1111:9:22","nodeType":"FunctionDefinition","parameters":{"id":4462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4459,"mutability":"mutable","name":"accounts","nameLocation":"1149:8:22","nodeType":"VariableDeclaration","scope":4487,"src":"1130:27:22","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":4457,"name":"address","nodeType":"ElementaryTypeName","src":"1130:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4458,"nodeType":"ArrayTypeName","src":"1130:9:22","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":4461,"mutability":"mutable","name":"amount","nameLocation":"1176:6:22","nodeType":"VariableDeclaration","scope":4487,"src":"1168:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4460,"name":"uint256","nodeType":"ElementaryTypeName","src":"1168:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1120:68:22"},"returnParameters":{"id":4466,"nodeType":"ParameterList","parameters":[],"src":"1218:0:22"},"scope":4566,"src":"1102:222:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4503,"nodeType":"Block","src":"1715:39:22","statements":[{"expression":{"arguments":[{"id":4499,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4490,"src":"1731:7:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4500,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4492,"src":"1740:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4498,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[4522],"referencedDeclaration":4522,"src":"1725:5:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4501,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1725:22:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4502,"nodeType":"ExpressionStatement","src":"1725:22:22"}]},"documentation":{"id":4488,"nodeType":"StructuredDocumentation","src":"1330:304:22","text":" Creates amount tokens and assigns them to account, increasing the total supply.\n \n Emits a transfer event with from set to the zero address.\n \n Requirements:\n \n account cannot be the zero address.\n only role MINTER_ROLE can call this function."},"functionSelector":"40c10f19","id":4504,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":4495,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"1702:11:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4496,"kind":"modifierInvocation","modifierName":{"id":4494,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"1693:8:22"},"nodeType":"ModifierInvocation","src":"1693:21:22"}],"name":"mint","nameLocation":"1648:4:22","nodeType":"FunctionDefinition","parameters":{"id":4493,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4490,"mutability":"mutable","name":"account","nameLocation":"1661:7:22","nodeType":"VariableDeclaration","scope":4504,"src":"1653:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4489,"name":"address","nodeType":"ElementaryTypeName","src":"1653:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4492,"mutability":"mutable","name":"amount","nameLocation":"1678:6:22","nodeType":"VariableDeclaration","scope":4504,"src":"1670:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4491,"name":"uint256","nodeType":"ElementaryTypeName","src":"1670:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1652:33:22"},"returnParameters":{"id":4497,"nodeType":"ParameterList","parameters":[],"src":"1715:0:22"},"scope":4566,"src":"1639:115:22","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1129,1498],"body":{"id":4521,"nodeType":"Block","src":"1930:40:22","statements":[{"expression":{"arguments":[{"id":4517,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4506,"src":"1952:2:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4518,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4508,"src":"1956:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4514,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"1940:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_BLBToken_$4566_$","typeString":"type(contract super BLBToken)"}},"id":4516,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_mint","nodeType":"MemberAccess","referencedDeclaration":1498,"src":"1940:11:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1940:23:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4520,"nodeType":"ExpressionStatement","src":"1940:23:22"}]},"id":4522,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"1838:5:22","nodeType":"FunctionDefinition","overrides":{"id":4512,"nodeType":"OverrideSpecifier","overrides":[{"id":4510,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":1312,"src":"1906:5:22"},{"id":4511,"name":"ERC20Capped","nodeType":"IdentifierPath","referencedDeclaration":1499,"src":"1913:11:22"}],"src":"1897:28:22"},"parameters":{"id":4509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4506,"mutability":"mutable","name":"to","nameLocation":"1852:2:22","nodeType":"VariableDeclaration","scope":4522,"src":"1844:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4505,"name":"address","nodeType":"ElementaryTypeName","src":"1844:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4508,"mutability":"mutable","name":"amount","nameLocation":"1864:6:22","nodeType":"VariableDeclaration","scope":4522,"src":"1856:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4507,"name":"uint256","nodeType":"ElementaryTypeName","src":"1856:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1843:28:22"},"returnParameters":{"id":4513,"nodeType":"ParameterList","parameters":[],"src":"1930:0:22"},"scope":4566,"src":"1829:141:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1300,4750,5143],"body":{"id":4543,"nodeType":"Block","src":"2126:61:22","statements":[{"expression":{"arguments":[{"id":4538,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4524,"src":"2163:4:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4539,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4526,"src":"2169:2:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4540,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4528,"src":"2173:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4535,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2136:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_BLBToken_$4566_$","typeString":"type(contract super BLBToken)"}},"id":4537,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":5143,"src":"2136:26:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2136:44:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4542,"nodeType":"ExpressionStatement","src":"2136:44:22"}]},"id":4544,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"1985:20:22","nodeType":"FunctionDefinition","overrides":{"id":4533,"nodeType":"OverrideSpecifier","overrides":[{"id":4530,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":1312,"src":"2082:5:22"},{"id":4531,"name":"TransferControl","nodeType":"IdentifierPath","referencedDeclaration":5168,"src":"2089:15:22"},{"id":4532,"name":"TransactionFee","nodeType":"IdentifierPath","referencedDeclaration":4751,"src":"2106:14:22"}],"src":"2073:48:22"},"parameters":{"id":4529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4524,"mutability":"mutable","name":"from","nameLocation":"2014:4:22","nodeType":"VariableDeclaration","scope":4544,"src":"2006:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4523,"name":"address","nodeType":"ElementaryTypeName","src":"2006:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4526,"mutability":"mutable","name":"to","nameLocation":"2028:2:22","nodeType":"VariableDeclaration","scope":4544,"src":"2020:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4525,"name":"address","nodeType":"ElementaryTypeName","src":"2020:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4528,"mutability":"mutable","name":"amount","nameLocation":"2040:6:22","nodeType":"VariableDeclaration","scope":4544,"src":"2032:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4527,"name":"uint256","nodeType":"ElementaryTypeName","src":"2032:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2005:42:22"},"returnParameters":{"id":4534,"nodeType":"ParameterList","parameters":[],"src":"2126:0:22"},"scope":4566,"src":"1976:211:22","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1073,5167],"body":{"id":4564,"nodeType":"Block","src":"2339:54:22","statements":[{"expression":{"arguments":[{"id":4559,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4546,"src":"2369:4:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4560,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4548,"src":"2375:2:22","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4561,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4550,"src":"2379:6:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4556,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2349:5:22","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_BLBToken_$4566_$","typeString":"type(contract super BLBToken)"}},"id":4558,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_pureTransfer","nodeType":"MemberAccess","referencedDeclaration":5167,"src":"2349:19:22","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2349:37:22","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4563,"nodeType":"ExpressionStatement","src":"2349:37:22"}]},"id":4565,"implemented":true,"kind":"function","modifiers":[],"name":"_pureTransfer","nameLocation":"2202:13:22","nodeType":"FunctionDefinition","overrides":{"id":4554,"nodeType":"OverrideSpecifier","overrides":[{"id":4552,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":1312,"src":"2310:5:22"},{"id":4553,"name":"TransferControl","nodeType":"IdentifierPath","referencedDeclaration":5168,"src":"2317:15:22"}],"src":"2301:32:22"},"parameters":{"id":4551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4546,"mutability":"mutable","name":"from","nameLocation":"2224:4:22","nodeType":"VariableDeclaration","scope":4565,"src":"2216:12:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4545,"name":"address","nodeType":"ElementaryTypeName","src":"2216:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4548,"mutability":"mutable","name":"to","nameLocation":"2238:2:22","nodeType":"VariableDeclaration","scope":4565,"src":"2230:10:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4547,"name":"address","nodeType":"ElementaryTypeName","src":"2230:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4550,"mutability":"mutable","name":"amount","nameLocation":"2250:6:22","nodeType":"VariableDeclaration","scope":4565,"src":"2242:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4549,"name":"uint256","nodeType":"ElementaryTypeName","src":"2242:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2215:42:22"},"returnParameters":{"id":4555,"nodeType":"ParameterList","parameters":[],"src":"2339:0:22"},"scope":4566,"src":"2193:200:22","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":4567,"src":"450:1945:22","usedErrors":[]}],"src":"32:2363:22"},"id":22},"contracts/BEP20/TransactionFee.sol":{"ast":{"absolutePath":"contracts/BEP20/TransactionFee.sol","exportedSymbols":{"AccessControl":[319],"AccessControlEnumerable":[444],"Administration":[4379],"Context":[1754],"ERC165":[2620],"ERC20":[1312],"EnumerableSet":[4353],"IAccessControl":[517],"IAccessControlEnumerable":[542],"IERC165":[2632],"IERC20":[1390],"IERC20Metadata":[1524],"Strings":[2054],"TransactionFee":[4751]},"id":4752,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4568,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:23"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":4569,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4752,"sourceUnit":1313,"src":"57:55:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/BEP20/Administration.sol","file":"./Administration.sol","id":4570,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4752,"sourceUnit":4380,"src":"113:30:23","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4572,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":1312,"src":"282:5:23"},"id":4573,"nodeType":"InheritanceSpecifier","src":"282:5:23"},{"baseName":{"id":4574,"name":"Administration","nodeType":"IdentifierPath","referencedDeclaration":4379,"src":"289:14:23"},"id":4575,"nodeType":"InheritanceSpecifier","src":"289:14:23"}],"canonicalName":"TransactionFee","contractDependencies":[],"contractKind":"contract","documentation":{"id":4571,"nodeType":"StructuredDocumentation","src":"145:100:23","text":" @title deduct the transaction fee of every token transfer and send it to a third address."},"fullyImplemented":false,"id":4751,"linearizedBaseContracts":[4751,4379,444,319,2620,2632,542,517,1312,1524,1390,1754],"name":"TransactionFee","nameLocation":"264:14:23","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":4577,"mutability":"mutable","name":"feeFraction","nameLocation":"320:11:23","nodeType":"VariableDeclaration","scope":4751,"src":"312:19:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4576,"name":"uint256","nodeType":"ElementaryTypeName","src":"312:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4579,"mutability":"mutable","name":"feeAmount","nameLocation":"408:9:23","nodeType":"VariableDeclaration","scope":4751,"src":"400:17:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4578,"name":"uint256","nodeType":"ElementaryTypeName","src":"400:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4581,"mutability":"mutable","name":"feeReceiver","nameLocation":"489:11:23","nodeType":"VariableDeclaration","scope":4751,"src":"481:19:23","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4580,"name":"address","nodeType":"ElementaryTypeName","src":"481:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"anonymous":false,"documentation":{"id":4582,"nodeType":"StructuredDocumentation","src":"538:77:23","text":" @dev emits when the admin sets a new transaction fee plan."},"eventSelector":"d75a7916f83ee976ae8e04e3f9b46c9b16b546303f09f1fc20eccb6cd6bc476d","id":4590,"name":"SetTransactionFee","nameLocation":"626:17:23","nodeType":"EventDefinition","parameters":{"id":4589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4584,"indexed":false,"mutability":"mutable","name":"_feeAmount","nameLocation":"661:10:23","nodeType":"VariableDeclaration","scope":4590,"src":"653:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4583,"name":"uint256","nodeType":"ElementaryTypeName","src":"653:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4586,"indexed":false,"mutability":"mutable","name":"_feeFraction","nameLocation":"689:12:23","nodeType":"VariableDeclaration","scope":4590,"src":"681:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4585,"name":"uint256","nodeType":"ElementaryTypeName","src":"681:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4588,"indexed":false,"mutability":"mutable","name":"_feeReceiver","nameLocation":"720:12:23","nodeType":"VariableDeclaration","scope":4590,"src":"712:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4587,"name":"address","nodeType":"ElementaryTypeName","src":"712:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"643:95:23"},"src":"620:119:23"},{"body":{"id":4641,"nodeType":"Block","src":"1397:478:23","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4604,"name":"_feeFraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"1428:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1444:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1428:17:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4607,"name":"_feeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4593,"src":"1449:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1463:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1449:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1428:36:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73616374696f6e4665653a2043616e6e6f742073657420666565416d6f756e7420616e64206665654672616374696f6e206174207468652073616d652074696d65","id":4611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1478:71:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_ba6e7714f3dc9672dee4a937817bb8127b845248a8b5fa5f809e162d8db55ab5","typeString":"literal_string \"TransactionFee: Cannot set feeAmount and feeFraction at the same time\""},"value":"TransactionFee: Cannot set feeAmount and feeFraction at the same time"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ba6e7714f3dc9672dee4a937817bb8127b845248a8b5fa5f809e162d8db55ab5","typeString":"literal_string \"TransactionFee: Cannot set feeAmount and feeFraction at the same time\""}],"id":4603,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1407:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1407:152:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4613,"nodeType":"ExpressionStatement","src":"1407:152:23"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4615,"name":"_feeFraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"1590:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"id":4618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4616,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1606:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"35","id":4617,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1612:1:23","typeDescriptions":{"typeIdentifier":"t_rational_5_by_1","typeString":"int_const 5"},"value":"5"},"src":"1606:7:23","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"}},"src":"1590:23:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73616374696f6e4665653a20557020746f20313025207472616e73616374696f6e4665652063616e20626520736574","id":4620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1628:53:23","typeDescriptions":{"typeIdentifier":"t_stringliteral_7444501452abd4aa62f22c1aadb9716af04f8b5e8d1b8f876d7bf930338b4894","typeString":"literal_string \"TransactionFee: Up to 10% transactionFee can be set\""},"value":"TransactionFee: Up to 10% transactionFee can be set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7444501452abd4aa62f22c1aadb9716af04f8b5e8d1b8f876d7bf930338b4894","typeString":"literal_string \"TransactionFee: Up to 10% transactionFee can be set\""}],"id":4614,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1569:7:23","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4621,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1569:122:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4622,"nodeType":"ExpressionStatement","src":"1569:122:23"},{"expression":{"id":4625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4623,"name":"feeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4579,"src":"1701:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4624,"name":"_feeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4593,"src":"1713:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1701:22:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4626,"nodeType":"ExpressionStatement","src":"1701:22:23"},{"expression":{"id":4629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4627,"name":"feeFraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4577,"src":"1733:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4628,"name":"_feeFraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"1747:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1733:26:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4630,"nodeType":"ExpressionStatement","src":"1733:26:23"},{"expression":{"id":4633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4631,"name":"feeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4581,"src":"1769:11:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4632,"name":"_feeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"1783:12:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1769:26:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4634,"nodeType":"ExpressionStatement","src":"1769:26:23"},{"eventCall":{"arguments":[{"id":4636,"name":"_feeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4593,"src":"1829:10:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4637,"name":"_feeFraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4595,"src":"1841:12:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4638,"name":"_feeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4597,"src":"1855:12:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4635,"name":"SetTransactionFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4590,"src":"1811:17:23","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,uint256,address)"}},"id":4639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1811:57:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4640,"nodeType":"EmitStatement","src":"1806:62:23"}]},"documentation":{"id":4591,"nodeType":"StructuredDocumentation","src":"745:485:23","text":" @notice set amount or fraction and receiver of BLB transaction fees.\n @notice if transaction receiver is zero address, the transaction fee will be burned.\n @notice requirement:\n  - Only the owner of the contract can call this function.\n  - one of the feeAmount or feeFraction must be zero.\n  - fee fraction can be a maximum of 50,000 which equals 10% of the transactions\n \n @dev emits a SetTransactionFee event"},"functionSelector":"367065de","id":4642,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":4600,"name":"TRANSACTION_FEE_SETTER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4378,"src":"1373:22:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4601,"kind":"modifierInvocation","modifierName":{"id":4599,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"1364:8:23"},"nodeType":"ModifierInvocation","src":"1364:32:23"}],"name":"setTransactionFee","nameLocation":"1244:17:23","nodeType":"FunctionDefinition","parameters":{"id":4598,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4593,"mutability":"mutable","name":"_feeAmount","nameLocation":"1279:10:23","nodeType":"VariableDeclaration","scope":4642,"src":"1271:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4592,"name":"uint256","nodeType":"ElementaryTypeName","src":"1271:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4595,"mutability":"mutable","name":"_feeFraction","nameLocation":"1307:12:23","nodeType":"VariableDeclaration","scope":4642,"src":"1299:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4594,"name":"uint256","nodeType":"ElementaryTypeName","src":"1299:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4597,"mutability":"mutable","name":"_feeReceiver","nameLocation":"1338:12:23","nodeType":"VariableDeclaration","scope":4642,"src":"1330:20:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4596,"name":"address","nodeType":"ElementaryTypeName","src":"1330:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1261:95:23"},"returnParameters":{"id":4602,"nodeType":"ParameterList","parameters":[],"src":"1397:0:23"},"scope":4751,"src":"1235:640:23","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4656,"nodeType":"Block","src":"1954:61:23","statements":[{"expression":{"components":[{"id":4651,"name":"feeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4579,"src":"1972:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4652,"name":"feeFraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4577,"src":"1983:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4653,"name":"feeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4581,"src":"1996:11:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":4654,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1971:37:23","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$_t_address_$","typeString":"tuple(uint256,uint256,address)"}},"functionReturnParameters":4650,"id":4655,"nodeType":"Return","src":"1964:44:23"}]},"functionSelector":"1f2c5443","id":4657,"implemented":true,"kind":"function","modifiers":[],"name":"feeDetails","nameLocation":"1894:10:23","nodeType":"FunctionDefinition","parameters":{"id":4643,"nodeType":"ParameterList","parameters":[],"src":"1904:2:23"},"returnParameters":{"id":4650,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4645,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4657,"src":"1927:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4644,"name":"uint256","nodeType":"ElementaryTypeName","src":"1927:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4647,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4657,"src":"1936:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4646,"name":"uint256","nodeType":"ElementaryTypeName","src":"1936:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4649,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4657,"src":"1945:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4648,"name":"address","nodeType":"ElementaryTypeName","src":"1945:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1926:27:23"},"scope":4751,"src":"1885:130:23","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4687,"nodeType":"Block","src":"2314:157:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4665,"name":"feeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4579,"src":"2327:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4666,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2339:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2327:13:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4672,"name":"feeFraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4577,"src":"2388:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2402:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2388:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4685,"nodeType":"IfStatement","src":"2384:80:23","trueBody":{"expression":{"id":4683,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4675,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"2417:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4676,"name":"transferingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4660,"src":"2423:17:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4677,"name":"feeFraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4577,"src":"2443:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2423:31:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"id":4681,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2457:2:23","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"36","id":4680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2463:1:23","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"2457:7:23","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"}},"src":"2423:41:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2417:47:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4684,"nodeType":"ExpressionStatement","src":"2417:47:23"}},"id":4686,"nodeType":"IfStatement","src":"2324:140:23","trueBody":{"expression":{"id":4670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4668,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4663,"src":"2354:3:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4669,"name":"feeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4579,"src":"2360:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2354:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4671,"nodeType":"ExpressionStatement","src":"2354:15:23"}}]},"documentation":{"id":4658,"nodeType":"StructuredDocumentation","src":"2021:204:23","text":" @return fee transaction fee corresponding to the transferring amount.\n @notice if there is a fee amount, the transaction fee is not proportional to the\n  transfering amount."},"functionSelector":"5d1edb87","id":4688,"implemented":true,"kind":"function","modifiers":[],"name":"transactionFee","nameLocation":"2239:14:23","nodeType":"FunctionDefinition","parameters":{"id":4661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4660,"mutability":"mutable","name":"transferingAmount","nameLocation":"2262:17:23","nodeType":"VariableDeclaration","scope":4688,"src":"2254:25:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4659,"name":"uint256","nodeType":"ElementaryTypeName","src":"2254:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2253:27:23"},"returnParameters":{"id":4664,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4663,"mutability":"mutable","name":"fee","nameLocation":"2309:3:23","nodeType":"VariableDeclaration","scope":4688,"src":"2301:11:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4662,"name":"uint256","nodeType":"ElementaryTypeName","src":"2301:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2300:13:23"},"scope":4751,"src":"2230:241:23","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4724,"nodeType":"Block","src":"2835:261:23","statements":[{"condition":{"id":4700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2848:29:23","subExpression":{"arguments":[{"id":4697,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"2857:11:23","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4698,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"2870:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4696,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"2849:7:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":4699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2849:28:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4723,"nodeType":"IfStatement","src":"2845:245:23","trueBody":{"id":4722,"nodeType":"Block","src":"2879:211:23","statements":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4701,"name":"feeFraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4577,"src":"2896:11:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2910:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2896:15:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4704,"name":"feeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4579,"src":"2915:9:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4705,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2927:1:23","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2915:13:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2896:32:23","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4721,"nodeType":"IfStatement","src":"2893:187:23","trueBody":{"id":4720,"nodeType":"Block","src":"2930:150:23","statements":[{"assignments":[4709],"declarations":[{"constant":false,"id":4709,"mutability":"mutable","name":"_transactionFee","nameLocation":"2956:15:23","nodeType":"VariableDeclaration","scope":4720,"src":"2948:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4708,"name":"uint256","nodeType":"ElementaryTypeName","src":"2948:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4713,"initialValue":{"arguments":[{"id":4711,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4693,"src":"2989:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4710,"name":"transactionFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4688,"src":"2974:14:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":4712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2974:22:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2948:48:23"},{"expression":{"arguments":[{"id":4715,"name":"caller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4691,"src":"3028:6:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4716,"name":"feeReceiver","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4581,"src":"3036:11:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4717,"name":"_transactionFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4709,"src":"3049:15:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4714,"name":"_pureTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1073,"src":"3014:13:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4718,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3014:51:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4719,"nodeType":"ExpressionStatement","src":"3014:51:23"}]}}]}}]},"documentation":{"id":4689,"nodeType":"StructuredDocumentation","src":"2477:284:23","text":" @notice deducts the transaction fee from the caller.\n @notice it will be not deducted if the caller has the minter role.\n @notice the transaction fee is sent to the fee receiver.\n @notice if the fee receiver is zero address, fee tokens are burned."},"id":4725,"implemented":true,"kind":"function","modifiers":[],"name":"_payTransactionFee","nameLocation":"2775:18:23","nodeType":"FunctionDefinition","parameters":{"id":4694,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4691,"mutability":"mutable","name":"caller","nameLocation":"2802:6:23","nodeType":"VariableDeclaration","scope":4725,"src":"2794:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4690,"name":"address","nodeType":"ElementaryTypeName","src":"2794:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4693,"mutability":"mutable","name":"amount","nameLocation":"2818:6:23","nodeType":"VariableDeclaration","scope":4725,"src":"2810:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4692,"name":"uint256","nodeType":"ElementaryTypeName","src":"2810:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2793:32:23"},"returnParameters":{"id":4695,"nodeType":"ParameterList","parameters":[],"src":"2835:0:23"},"scope":4751,"src":"2766:330:23","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1300],"body":{"id":4749,"nodeType":"Block","src":"3232:112:23","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":4736,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"3261:10:23","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":4737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3261:12:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4738,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"3275:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4735,"name":"_payTransactionFee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4725,"src":"3242:18:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4739,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3242:40:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4740,"nodeType":"ExpressionStatement","src":"3242:40:23"},{"expression":{"arguments":[{"id":4744,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4727,"src":"3320:4:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4745,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4729,"src":"3326:2:23","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4746,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4731,"src":"3330:6:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4741,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"3293:5:23","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_TransactionFee_$4751_$","typeString":"type(contract super TransactionFee)"}},"id":4743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":1300,"src":"3293:26:23","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4747,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3293:44:23","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4748,"nodeType":"ExpressionStatement","src":"3293:44:23"}]},"id":4750,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"3115:20:23","nodeType":"FunctionDefinition","overrides":{"id":4733,"nodeType":"OverrideSpecifier","overrides":[],"src":"3219:8:23"},"parameters":{"id":4732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4727,"mutability":"mutable","name":"from","nameLocation":"3144:4:23","nodeType":"VariableDeclaration","scope":4750,"src":"3136:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4726,"name":"address","nodeType":"ElementaryTypeName","src":"3136:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4729,"mutability":"mutable","name":"to","nameLocation":"3158:2:23","nodeType":"VariableDeclaration","scope":4750,"src":"3150:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4728,"name":"address","nodeType":"ElementaryTypeName","src":"3150:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4731,"mutability":"mutable","name":"amount","nameLocation":"3170:6:23","nodeType":"VariableDeclaration","scope":4750,"src":"3162:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4730,"name":"uint256","nodeType":"ElementaryTypeName","src":"3162:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3135:42:23"},"returnParameters":{"id":4734,"nodeType":"ParameterList","parameters":[],"src":"3232:0:23"},"scope":4751,"src":"3106:238:23","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":4752,"src":"246:3100:23","usedErrors":[]}],"src":"32:3314:23"},"id":23},"contracts/BEP20/TransferControl.sol":{"ast":{"absolutePath":"contracts/BEP20/TransferControl.sol","exportedSymbols":{"AccessControl":[319],"AccessControlEnumerable":[444],"Administration":[4379],"Context":[1754],"ERC165":[2620],"ERC20":[1312],"ERC20Capped":[1499],"EnumerableMap":[3754],"EnumerableSet":[4353],"IAccessControl":[517],"IAccessControlEnumerable":[542],"IERC165":[2632],"IERC20":[1390],"IERC20Metadata":[1524],"Strings":[2054],"TransferControl":[5168]},"id":5169,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4753,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:24"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":4754,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5169,"sourceUnit":1313,"src":"57:55:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol","id":4755,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5169,"sourceUnit":1500,"src":"113:72:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableMap.sol","file":"@openzeppelin/contracts/utils/structs/EnumerableMap.sol","id":4756,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5169,"sourceUnit":3755,"src":"186:65:24","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/BEP20/Administration.sol","file":"./Administration.sol","id":4757,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5169,"sourceUnit":4380,"src":"252:30:24","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4759,"name":"ERC20Capped","nodeType":"IdentifierPath","referencedDeclaration":1499,"src":"799:11:24"},"id":4760,"nodeType":"InheritanceSpecifier","src":"799:11:24"},{"baseName":{"id":4761,"name":"Administration","nodeType":"IdentifierPath","referencedDeclaration":4379,"src":"812:14:24"},"id":4762,"nodeType":"InheritanceSpecifier","src":"812:14:24"}],"canonicalName":"TransferControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":4758,"nodeType":"StructuredDocumentation","src":"284:477:24","text":" @title control BLB transfers.\n @notice users may have access to transfer their whole BLB balance or only a \n certain fraction every monthly(it depends on monthlyLimit).\n @notice some specific addresses may have restricted access to transfer.\n @notice owner of the contract can restrict every desired address and also \n determine a spending limit for all users.\n @notice if an address is restricted then the public monthlyLimit is diactivated\n for it"},"fullyImplemented":false,"id":5168,"linearizedBaseContracts":[5168,4379,444,319,2620,2632,542,517,1499,1312,1524,1390,1754],"name":"TransferControl","nameLocation":"780:15:24","nodeType":"ContractDefinition","nodes":[{"global":false,"id":4766,"libraryName":{"id":4763,"name":"EnumerableMap","nodeType":"IdentifierPath","referencedDeclaration":3754,"src":"839:13:24"},"nodeType":"UsingForDirective","src":"833:55:24","typeName":{"id":4765,"nodeType":"UserDefinedTypeName","pathNode":{"id":4764,"name":"EnumerableMap.AddressToUintMap","nodeType":"IdentifierPath","referencedDeclaration":3322,"src":"857:30:24"},"referencedDeclaration":3322,"src":"857:30:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$3322_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"}}},{"constant":false,"id":4769,"mutability":"mutable","name":"restrictedAddresses","nameLocation":"925:19:24","nodeType":"VariableDeclaration","scope":5168,"src":"894:50:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$3322_storage","typeString":"struct EnumerableMap.AddressToUintMap"},"typeName":{"id":4768,"nodeType":"UserDefinedTypeName","pathNode":{"id":4767,"name":"EnumerableMap.AddressToUintMap","nodeType":"IdentifierPath","referencedDeclaration":3322,"src":"894:30:24"},"referencedDeclaration":3322,"src":"894:30:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$3322_storage_ptr","typeString":"struct EnumerableMap.AddressToUintMap"}},"visibility":"internal"},{"canonicalName":"TransferControl.Period","id":4774,"members":[{"constant":false,"id":4771,"mutability":"mutable","name":"spent","nameLocation":"987:5:24","nodeType":"VariableDeclaration","scope":4774,"src":"979:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4770,"name":"uint256","nodeType":"ElementaryTypeName","src":"979:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4773,"mutability":"mutable","name":"nonce","nameLocation":"1010:5:24","nodeType":"VariableDeclaration","scope":4774,"src":"1002:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4772,"name":"uint256","nodeType":"ElementaryTypeName","src":"1002:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Period","nameLocation":"962:6:24","nodeType":"StructDefinition","scope":5168,"src":"955:67:24","visibility":"public"},{"constant":false,"id":4779,"mutability":"mutable","name":"checkpoints","nameLocation":"1055:11:24","nodeType":"VariableDeclaration","scope":5168,"src":"1028:38:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Period_$4774_storage_$","typeString":"mapping(address => struct TransferControl.Period)"},"typeName":{"id":4778,"keyType":{"id":4775,"name":"address","nodeType":"ElementaryTypeName","src":"1036:7:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1028:26:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Period_$4774_storage_$","typeString":"mapping(address => struct TransferControl.Period)"},"valueType":{"id":4777,"nodeType":"UserDefinedTypeName","pathNode":{"id":4776,"name":"Period","nodeType":"IdentifierPath","referencedDeclaration":4774,"src":"1047:6:24"},"referencedDeclaration":4774,"src":"1047:6:24","typeDescriptions":{"typeIdentifier":"t_struct$_Period_$4774_storage_ptr","typeString":"struct TransferControl.Period"}}},"visibility":"internal"},{"constant":false,"functionSelector":"f74929e0","id":4781,"mutability":"mutable","name":"monthlyLimit","nameLocation":"1088:14:24","nodeType":"VariableDeclaration","scope":5168,"src":"1073:29:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4780,"name":"uint256","nodeType":"ElementaryTypeName","src":"1073:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"id":4783,"mutability":"immutable","name":"startTime","nameLocation":"1126:9:24","nodeType":"VariableDeclaration","scope":5168,"src":"1108:27:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4782,"name":"uint256","nodeType":"ElementaryTypeName","src":"1108:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4785,"mutability":"immutable","name":"monthlyTime","nameLocation":"1159:10:24","nodeType":"VariableDeclaration","scope":5168,"src":"1141:28:24","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4784,"name":"uint256","nodeType":"ElementaryTypeName","src":"1141:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"body":{"id":4799,"nodeType":"Block","src":"1209:78:24","statements":[{"expression":{"id":4793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4790,"name":"startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"1219:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4791,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1231:5:24","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"1231:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1219:27:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4794,"nodeType":"ExpressionStatement","src":"1219:27:24"},{"expression":{"id":4797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4795,"name":"monthlyTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"1256:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4796,"name":"_monthlyTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4787,"src":"1269:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1256:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4798,"nodeType":"ExpressionStatement","src":"1256:24:24"}]},"id":4800,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4788,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4787,"mutability":"mutable","name":"_monthlyTime","nameLocation":"1196:11:24","nodeType":"VariableDeclaration","scope":4800,"src":"1188:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4786,"name":"uint256","nodeType":"ElementaryTypeName","src":"1188:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1187:21:24"},"returnParameters":{"id":4789,"nodeType":"ParameterList","parameters":[],"src":"1209:0:24"},"scope":5168,"src":"1176:111:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"anonymous":false,"documentation":{"id":4801,"nodeType":"StructuredDocumentation","src":"1293:84:24","text":" @dev emits when the admin sets a new value as the monthlyLimit."},"eventSelector":"a83163ea39ecbdc3af173e3337234fbe2f88b17dca9802ec3186e557d365e2d1","id":4805,"name":"SetPeriodTransferLimit","nameLocation":"1388:25:24","nodeType":"EventDefinition","parameters":{"id":4804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4803,"indexed":false,"mutability":"mutable","name":"fraction","nameLocation":"1422:8:24","nodeType":"VariableDeclaration","scope":4805,"src":"1414:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4802,"name":"uint256","nodeType":"ElementaryTypeName","src":"1414:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1413:18:24"},"src":"1382:50:24"},{"anonymous":false,"documentation":{"id":4806,"nodeType":"StructuredDocumentation","src":"1438:66:24","text":" @dev emits when the admin restricts an address."},"eventSelector":"a1b8d777c2527547849718a04f45b8e5b0f29119c47f9298b20a85f0ad275424","id":4812,"name":"Restrict","nameLocation":"1515:8:24","nodeType":"EventDefinition","parameters":{"id":4811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4808,"indexed":false,"mutability":"mutable","name":"addr","nameLocation":"1532:4:24","nodeType":"VariableDeclaration","scope":4812,"src":"1524:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4807,"name":"address","nodeType":"ElementaryTypeName","src":"1524:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4810,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1546:6:24","nodeType":"VariableDeclaration","scope":4812,"src":"1538:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4809,"name":"uint256","nodeType":"ElementaryTypeName","src":"1538:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1523:30:24"},"src":"1509:45:24"},{"anonymous":false,"documentation":{"id":4813,"nodeType":"StructuredDocumentation","src":"1560:66:24","text":" @dev emits when the admin districts an address."},"eventSelector":"1d99f5bb86a6855a17a804b5eca7ba651739f25a3c2fff1bf22a22c1d5f6c199","id":4817,"name":"District","nameLocation":"1637:8:24","nodeType":"EventDefinition","parameters":{"id":4816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4815,"indexed":false,"mutability":"mutable","name":"addr","nameLocation":"1654:4:24","nodeType":"VariableDeclaration","scope":4817,"src":"1646:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4814,"name":"address","nodeType":"ElementaryTypeName","src":"1646:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1645:14:24"},"src":"1631:29:24"},{"body":{"id":4843,"nodeType":"Block","src":"2225:193:24","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4827,"name":"fraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4820,"src":"2243:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"id":4830,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4828,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2255:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"36","id":4829,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2261:1:24","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"2255:7:24","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"}},"src":"2243:19:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572436f6e74726f6c3a206d6178696d756d206672616374696f6e2069732031302a2a362028657175616c20746f203130302529","id":4832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2264:60:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_8404985d158493dcb8888b28d97ab7d03a6fd3b5993fc007df71079e84dcd25e","typeString":"literal_string \"TransferControl: maximum fraction is 10**6 (equal to 100%)\""},"value":"TransferControl: maximum fraction is 10**6 (equal to 100%)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8404985d158493dcb8888b28d97ab7d03a6fd3b5993fc007df71079e84dcd25e","typeString":"literal_string \"TransferControl: maximum fraction is 10**6 (equal to 100%)\""}],"id":4826,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2235:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2235:90:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4834,"nodeType":"ExpressionStatement","src":"2235:90:24"},{"expression":{"id":4837,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4835,"name":"monthlyLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4781,"src":"2335:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4836,"name":"fraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4820,"src":"2352:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2335:25:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4838,"nodeType":"ExpressionStatement","src":"2335:25:24"},{"eventCall":{"arguments":[{"id":4840,"name":"fraction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4820,"src":"2402:8:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4839,"name":"SetPeriodTransferLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4805,"src":"2376:25:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2376:35:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4842,"nodeType":"EmitStatement","src":"2371:40:24"}]},"documentation":{"id":4818,"nodeType":"StructuredDocumentation","src":"1666:439:24","text":" @notice set spend limit for monthly transfers.\n @notice there is no transfer limit if fraction is 10**6.\n @param fraction the numerator of transfer limit rate which denominator\n is 10**6.\n @notice require:\n  - only owner of contract can call this function.\n  - maximum fraction can be 10**6 (equal to 100%).\n \n @notice emits a SetPeriodTransferLimit event."},"functionSelector":"fad71be2","id":4844,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":4823,"name":"TRANSFER_LIMIT_SETTER","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4373,"src":"2197:21:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4824,"kind":"modifierInvocation","modifierName":{"id":4822,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"2188:8:24"},"nodeType":"ModifierInvocation","src":"2188:31:24"}],"name":"setPeriodTransferLimit","nameLocation":"2119:25:24","nodeType":"FunctionDefinition","parameters":{"id":4821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4820,"mutability":"mutable","name":"fraction","nameLocation":"2153:8:24","nodeType":"VariableDeclaration","scope":4844,"src":"2145:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4819,"name":"uint256","nodeType":"ElementaryTypeName","src":"2145:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2144:18:24"},"returnParameters":{"id":4825,"nodeType":"ParameterList","parameters":[],"src":"2225:0:24"},"scope":5168,"src":"2110:308:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4867,"nodeType":"Block","src":"2880:91:24","statements":[{"expression":{"arguments":[{"id":4858,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4847,"src":"2914:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4859,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"2920:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4855,"name":"restrictedAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4769,"src":"2890:19:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$3322_storage","typeString":"struct EnumerableMap.AddressToUintMap storage ref"}},"id":4857,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"set","nodeType":"MemberAccess","referencedDeclaration":3355,"src":"2890:23:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressToUintMap_$3322_storage_ptr_$_t_address_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_AddressToUintMap_$3322_storage_ptr_$","typeString":"function (struct EnumerableMap.AddressToUintMap storage pointer,address,uint256) returns (bool)"}},"id":4860,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2890:37:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4861,"nodeType":"ExpressionStatement","src":"2890:37:24"},{"eventCall":{"arguments":[{"id":4863,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4847,"src":"2951:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4864,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4849,"src":"2957:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4862,"name":"Restrict","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4812,"src":"2942:8:24","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":4865,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2942:22:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4866,"nodeType":"EmitStatement","src":"2937:27:24"}]},"documentation":{"id":4845,"nodeType":"StructuredDocumentation","src":"2424:370:24","text":" @notice restrict an address \n @notice the address `addr` will be only able to spend as much as `amount`.\n @param addr the restricted address.\n @param amount restricted spendable amount.\n @notice require:\n  - only RESTRICTOR_ROLE address can call this function.\n \n @notice emits a Restrict event."},"functionSelector":"1681f830","id":4868,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":4852,"name":"RESTRICTOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4368,"src":"2863:15:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4853,"kind":"modifierInvocation","modifierName":{"id":4851,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"2854:8:24"},"nodeType":"ModifierInvocation","src":"2854:25:24"}],"name":"restrict","nameLocation":"2808:8:24","nodeType":"FunctionDefinition","parameters":{"id":4850,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4847,"mutability":"mutable","name":"addr","nameLocation":"2825:4:24","nodeType":"VariableDeclaration","scope":4868,"src":"2817:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4846,"name":"address","nodeType":"ElementaryTypeName","src":"2817:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4849,"mutability":"mutable","name":"amount","nameLocation":"2839:6:24","nodeType":"VariableDeclaration","scope":4868,"src":"2831:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4848,"name":"uint256","nodeType":"ElementaryTypeName","src":"2831:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2816:30:24"},"returnParameters":{"id":4854,"nodeType":"ParameterList","parameters":[],"src":"2880:0:24"},"scope":5168,"src":"2799:172:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4883,"nodeType":"Block","src":"3402:49:24","statements":[{"expression":{"arguments":[{"id":4880,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4871,"src":"3439:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4877,"name":"restrictedAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4769,"src":"3412:19:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$3322_storage","typeString":"struct EnumerableMap.AddressToUintMap storage ref"}},"id":4879,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":3382,"src":"3412:26:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressToUintMap_$3322_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressToUintMap_$3322_storage_ptr_$","typeString":"function (struct EnumerableMap.AddressToUintMap storage pointer,address) returns (bool)"}},"id":4881,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3412:32:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4882,"nodeType":"ExpressionStatement","src":"3412:32:24"}]},"documentation":{"id":4869,"nodeType":"StructuredDocumentation","src":"2977:355:24","text":" @notice district an address \n @notice the address `addr` will be free to spend their BLB like regular\n addresses.\n @param addr the address that is going to be districted.\n @notice require:\n  - only RESTRICTOR_ROLE address can call this function.\n \n @notice emits a District event."},"functionSelector":"e162533c","id":4884,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":4874,"name":"RESTRICTOR_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4368,"src":"3385:15:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":4875,"kind":"modifierInvocation","modifierName":{"id":4873,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"3376:8:24"},"nodeType":"ModifierInvocation","src":"3376:25:24"}],"name":"district","nameLocation":"3346:8:24","nodeType":"FunctionDefinition","parameters":{"id":4872,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4871,"mutability":"mutable","name":"addr","nameLocation":"3363:4:24","nodeType":"VariableDeclaration","scope":4884,"src":"3355:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4870,"name":"address","nodeType":"ElementaryTypeName","src":"3355:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3354:14:24"},"returnParameters":{"id":4876,"nodeType":"ParameterList","parameters":[],"src":"3402:0:24"},"scope":5168,"src":"3337:114:24","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4897,"nodeType":"Block","src":"3660:58:24","statements":[{"expression":{"arguments":[{"id":4894,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4887,"src":"3706:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4892,"name":"restrictedAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4769,"src":"3677:19:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$3322_storage","typeString":"struct EnumerableMap.AddressToUintMap storage ref"}},"id":4893,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"contains","nodeType":"MemberAccess","referencedDeclaration":3409,"src":"3677:28:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressToUintMap_$3322_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressToUintMap_$3322_storage_ptr_$","typeString":"function (struct EnumerableMap.AddressToUintMap storage pointer,address) view returns (bool)"}},"id":4895,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3677:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4891,"id":4896,"nodeType":"Return","src":"3670:41:24"}]},"documentation":{"id":4885,"nodeType":"StructuredDocumentation","src":"3457:136:24","text":" @return boolean true if the address is restricted.\n @param addr the address that is going to be checked."},"functionSelector":"c01bc982","id":4898,"implemented":true,"kind":"function","modifiers":[],"name":"isRestricted","nameLocation":"3607:12:24","nodeType":"FunctionDefinition","parameters":{"id":4888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4887,"mutability":"mutable","name":"addr","nameLocation":"3628:4:24","nodeType":"VariableDeclaration","scope":4898,"src":"3620:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4886,"name":"address","nodeType":"ElementaryTypeName","src":"3620:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3619:14:24"},"returnParameters":{"id":4891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4890,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4898,"src":"3654:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4889,"name":"bool","nodeType":"ElementaryTypeName","src":"3654:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3653:6:24"},"scope":5168,"src":"3598:120:24","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4984,"nodeType":"Block","src":"4280:681:24","statements":[{"condition":{"arguments":[{"id":4907,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4901,"src":"4307:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4906,"name":"isRestricted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"4294:12:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":4908,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4294:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"arguments":[{"id":4916,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"4391:11:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":4917,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4901,"src":"4404:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4915,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"4383:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":4918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4383:26:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4981,"nodeType":"Block","src":"4470:485:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4926,"name":"monthlyLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4781,"src":"4487:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"id":4929,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4505:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"36","id":4928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4511:1:24","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"4505:7:24","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"}},"src":"4487:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4979,"nodeType":"Block","src":"4574:371:24","statements":[{"assignments":[4937],"declarations":[{"constant":false,"id":4937,"mutability":"mutable","name":"spentAmount","nameLocation":"4600:11:24","nodeType":"VariableDeclaration","scope":4979,"src":"4592:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4936,"name":"uint256","nodeType":"ElementaryTypeName","src":"4592:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4938,"nodeType":"VariableDeclarationStatement","src":"4592:19:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":4939,"name":"checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"4632:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Period_$4774_storage_$","typeString":"mapping(address => struct TransferControl.Period storage ref)"}},"id":4941,"indexExpression":{"id":4940,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4901,"src":"4644:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4632:17:24","typeDescriptions":{"typeIdentifier":"t_struct$_Period_$4774_storage","typeString":"struct TransferControl.Period storage ref"}},"id":4942,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":4773,"src":"4632:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4943,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4660:5:24","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":4944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"4660:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4945,"name":"startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"4678:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4660:27:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4947,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4659:29:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4948,"name":"monthlyTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"4691:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4659:42:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4632:69:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4959,"nodeType":"IfStatement","src":"4629:152:24","trueBody":{"id":4958,"nodeType":"Block","src":"4703:78:24","statements":[{"expression":{"id":4956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4951,"name":"spentAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"4725:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":4952,"name":"checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"4739:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Period_$4774_storage_$","typeString":"mapping(address => struct TransferControl.Period storage ref)"}},"id":4954,"indexExpression":{"id":4953,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4901,"src":"4751:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4739:17:24","typeDescriptions":{"typeIdentifier":"t_struct$_Period_$4774_storage","typeString":"struct TransferControl.Period storage ref"}},"id":4955,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"spent","nodeType":"MemberAccess","referencedDeclaration":4771,"src":"4739:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4725:37:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4957,"nodeType":"ExpressionStatement","src":"4725:37:24"}]}},{"assignments":[4961],"declarations":[{"constant":false,"id":4961,"mutability":"mutable","name":"monthlyAmount","nameLocation":"4806:12:24","nodeType":"VariableDeclaration","scope":4979,"src":"4798:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4960,"name":"uint256","nodeType":"ElementaryTypeName","src":"4798:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4974,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4973,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4963,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4901,"src":"4832:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4962,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"4822:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":4964,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4822:15:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4965,"name":"spentAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"4840:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4822:29:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4967,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4821:31:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4968,"name":"monthlyLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4781,"src":"4855:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4821:48:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"id":4972,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4872:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"36","id":4971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4878:1:24","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"4872:7:24","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"}},"src":"4821:58:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4798:81:24"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4975,"name":"monthlyAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4961,"src":"4904:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4976,"name":"spentAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4937,"src":"4919:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4904:26:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4905,"id":4978,"nodeType":"Return","src":"4897:33:24"}]},"id":4980,"nodeType":"IfStatement","src":"4484:461:24","trueBody":{"id":4935,"nodeType":"Block","src":"4513:55:24","statements":[{"expression":{"arguments":[{"id":4932,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4901,"src":"4548:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4931,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"4538:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4538:15:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4905,"id":4934,"nodeType":"Return","src":"4531:22:24"}]}}]},"id":4982,"nodeType":"IfStatement","src":"4380:575:24","trueBody":{"id":4925,"nodeType":"Block","src":"4411:53:24","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4919,"name":"cap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"4432:3:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4432:5:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":4921,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":740,"src":"4440:11:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":4922,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4440:13:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4432:21:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4905,"id":4924,"nodeType":"Return","src":"4425:28:24"}]}},"id":4983,"nodeType":"IfStatement","src":"4290:665:24","trueBody":{"id":4914,"nodeType":"Block","src":"4313:61:24","statements":[{"expression":{"arguments":[{"id":4911,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4901,"src":"4358:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4909,"name":"restrictedAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4769,"src":"4334:19:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$3322_storage","typeString":"struct EnumerableMap.AddressToUintMap storage ref"}},"id":4910,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"get","nodeType":"MemberAccess","referencedDeclaration":3534,"src":"4334:23:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressToUintMap_$3322_storage_ptr_$_t_address_$returns$_t_uint256_$bound_to$_t_struct$_AddressToUintMap_$3322_storage_ptr_$","typeString":"function (struct EnumerableMap.AddressToUintMap storage pointer,address) view returns (uint256)"}},"id":4912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4334:29:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4905,"id":4913,"nodeType":"Return","src":"4327:36:24"}]}}]},"documentation":{"id":4899,"nodeType":"StructuredDocumentation","src":"3724:483:24","text":" @return amount that the address can spend.\n \n @dev if the address restricted, the amount equals remaining spendable amount for the \n address. else if there is a spend limit active for the contract, the amount equals \n the address's remaining monthly spendable amount. else the amount equals balance of the\n address.\n \n @dev MINTER_ROLE can also be restricted so\n \n @param addr the address that is being checked."},"functionSelector":"234eaedc","id":4985,"implemented":true,"kind":"function","modifiers":[],"name":"canSpend","nameLocation":"4221:8:24","nodeType":"FunctionDefinition","parameters":{"id":4902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4901,"mutability":"mutable","name":"addr","nameLocation":"4238:4:24","nodeType":"VariableDeclaration","scope":4985,"src":"4230:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4900,"name":"address","nodeType":"ElementaryTypeName","src":"4230:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4229:14:24"},"returnParameters":{"id":4905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4904,"mutability":"mutable","name":"amount","nameLocation":"4272:6:24","nodeType":"VariableDeclaration","scope":4985,"src":"4264:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4903,"name":"uint256","nodeType":"ElementaryTypeName","src":"4264:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4263:16:24"},"scope":5168,"src":"4212:749:24","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":5103,"nodeType":"Block","src":"5022:965:24","statements":[{"condition":{"arguments":[{"id":4993,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4987,"src":"5048:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4992,"name":"isRestricted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4898,"src":"5035:12:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":4994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5035:18:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":5030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5019,"name":"monthlyLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4781,"src":"5309:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"id":5022,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5020,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5326:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"36","id":5021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5332:1:24","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"5326:7:24","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"}},"src":"5309:24:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"id":5029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5337:35:24","subExpression":{"arguments":[{"id":5025,"name":"MINTER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4363,"src":"5346:11:24","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":5026,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"5359:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":5027,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5359:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":5024,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"5338:7:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":5028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5338:34:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5309:63:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5101,"nodeType":"IfStatement","src":"5305:676:24","trueBody":{"id":5100,"nodeType":"Block","src":"5374:607:24","statements":[{"assignments":[5032],"declarations":[{"constant":false,"id":5032,"mutability":"mutable","name":"currentNonce","nameLocation":"5396:12:24","nodeType":"VariableDeclaration","scope":5100,"src":"5388:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5031,"name":"uint256","nodeType":"ElementaryTypeName","src":"5388:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5040,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":5033,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5412:5:24","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":5034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"5412:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5035,"name":"startTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4783,"src":"5430:9:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5412:27:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5037,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5411:29:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":5038,"name":"monthlyTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4785,"src":"5443:10:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5411:42:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5388:65:24"},{"assignments":[5042],"declarations":[{"constant":false,"id":5042,"mutability":"mutable","name":"spentAmount","nameLocation":"5475:11:24","nodeType":"VariableDeclaration","scope":5100,"src":"5467:19:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5041,"name":"uint256","nodeType":"ElementaryTypeName","src":"5467:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5047,"initialValue":{"expression":{"baseExpression":{"id":5043,"name":"checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"5489:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Period_$4774_storage_$","typeString":"mapping(address => struct TransferControl.Period storage ref)"}},"id":5045,"indexExpression":{"id":5044,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4987,"src":"5501:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5489:17:24","typeDescriptions":{"typeIdentifier":"t_struct$_Period_$4774_storage","typeString":"struct TransferControl.Period storage ref"}},"id":5046,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"spent","nodeType":"MemberAccess","referencedDeclaration":4771,"src":"5489:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5467:45:24"},{"assignments":[5049],"declarations":[{"constant":false,"id":5049,"mutability":"mutable","name":"spendingAmount","nameLocation":"5534:14:24","nodeType":"VariableDeclaration","scope":5100,"src":"5526:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5048,"name":"uint256","nodeType":"ElementaryTypeName","src":"5526:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5053,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5050,"name":"spentAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5042,"src":"5551:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5051,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4989,"src":"5565:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5551:20:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5526:45:24"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5059,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"baseExpression":{"id":5054,"name":"checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"5588:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Period_$4774_storage_$","typeString":"mapping(address => struct TransferControl.Period storage ref)"}},"id":5056,"indexExpression":{"id":5055,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4987,"src":"5600:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5588:17:24","typeDescriptions":{"typeIdentifier":"t_struct$_Period_$4774_storage","typeString":"struct TransferControl.Period storage ref"}},"id":5057,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"nonce","nodeType":"MemberAccess","referencedDeclaration":4773,"src":"5588:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":5058,"name":"currentNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"5615:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5588:39:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5068,"nodeType":"IfStatement","src":"5585:114:24","trueBody":{"id":5067,"nodeType":"Block","src":"5629:70:24","statements":[{"expression":{"id":5065,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":5060,"name":"spentAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5042,"src":"5647:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"baseExpression":{"id":5061,"name":"checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"5661:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Period_$4774_storage_$","typeString":"mapping(address => struct TransferControl.Period storage ref)"}},"id":5063,"indexExpression":{"id":5062,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4987,"src":"5673:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5661:17:24","typeDescriptions":{"typeIdentifier":"t_struct$_Period_$4774_storage","typeString":"struct TransferControl.Period storage ref"}},"id":5064,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"spent","nodeType":"MemberAccess","referencedDeclaration":4771,"src":"5661:23:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5647:37:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5066,"nodeType":"ExpressionStatement","src":"5647:37:24"}]}},{"assignments":[5070],"declarations":[{"constant":false,"id":5070,"mutability":"mutable","name":"monthlyAmount","nameLocation":"5720:12:24","nodeType":"VariableDeclaration","scope":5100,"src":"5712:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5069,"name":"uint256","nodeType":"ElementaryTypeName","src":"5712:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5083,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5072,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4987,"src":"5746:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":5071,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":754,"src":"5736:9:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view returns (uint256)"}},"id":5073,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5736:15:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":5074,"name":"spentAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5042,"src":"5754:11:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5736:29:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":5076,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5735:31:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":5077,"name":"monthlyLimit","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4781,"src":"5769:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5735:48:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"commonType":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"},"id":5081,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5786:2:24","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"36","id":5080,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5792:1:24","typeDescriptions":{"typeIdentifier":"t_rational_6_by_1","typeString":"int_const 6"},"value":"6"},"src":"5786:7:24","typeDescriptions":{"typeIdentifier":"t_rational_1000000_by_1","typeString":"int_const 1000000"}},"src":"5735:58:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5712:81:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5085,"name":"spendingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5049,"src":"5815:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5086,"name":"monthlyAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5070,"src":"5833:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5815:30:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572436f6e74726f6c3a20616d6f756e74206578636565647320706572696f64207370656e64206c696d6974","id":5088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5847:52:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_3a4f2f6554dd45b81f0d9c44a3f8e422650ccfa40cb95b75fc0a1fdd1f2216d7","typeString":"literal_string \"TransferControl: amount exceeds monthly spend limit\""},"value":"TransferControl: amount exceeds monthly spend limit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3a4f2f6554dd45b81f0d9c44a3f8e422650ccfa40cb95b75fc0a1fdd1f2216d7","typeString":"literal_string \"TransferControl: amount exceeds monthly spend limit\""}],"id":5084,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5807:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5807:93:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5090,"nodeType":"ExpressionStatement","src":"5807:93:24"},{"expression":{"id":5098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":5091,"name":"checkpoints","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4779,"src":"5914:11:24","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_Period_$4774_storage_$","typeString":"mapping(address => struct TransferControl.Period storage ref)"}},"id":5093,"indexExpression":{"id":5092,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4987,"src":"5926:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5914:17:24","typeDescriptions":{"typeIdentifier":"t_struct$_Period_$4774_storage","typeString":"struct TransferControl.Period storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":5095,"name":"spendingAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5049,"src":"5941:14:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":5096,"name":"currentNonce","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5032,"src":"5957:12:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5094,"name":"Period","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4774,"src":"5934:6:24","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Period_$4774_storage_ptr_$","typeString":"type(struct TransferControl.Period storage pointer)"}},"id":5097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5934:36:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Period_$4774_memory_ptr","typeString":"struct TransferControl.Period memory"}},"src":"5914:56:24","typeDescriptions":{"typeIdentifier":"t_struct$_Period_$4774_storage","typeString":"struct TransferControl.Period storage ref"}},"id":5099,"nodeType":"ExpressionStatement","src":"5914:56:24"}]}},"id":5102,"nodeType":"IfStatement","src":"5032:949:24","trueBody":{"id":5018,"nodeType":"Block","src":"5055:244:24","statements":[{"assignments":[4996],"declarations":[{"constant":false,"id":4996,"mutability":"mutable","name":"spendableAmount","nameLocation":"5077:15:24","nodeType":"VariableDeclaration","scope":5018,"src":"5069:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4995,"name":"uint256","nodeType":"ElementaryTypeName","src":"5069:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":5001,"initialValue":{"arguments":[{"id":4999,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4987,"src":"5119:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":4997,"name":"restrictedAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4769,"src":"5095:19:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$3322_storage","typeString":"struct EnumerableMap.AddressToUintMap storage ref"}},"id":4998,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"get","nodeType":"MemberAccess","referencedDeclaration":3534,"src":"5095:23:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_AddressToUintMap_$3322_storage_ptr_$_t_address_$returns$_t_uint256_$bound_to$_t_struct$_AddressToUintMap_$3322_storage_ptr_$","typeString":"function (struct EnumerableMap.AddressToUintMap storage pointer,address) view returns (uint256)"}},"id":5000,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5095:29:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5069:55:24"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5003,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4989,"src":"5146:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":5004,"name":"spendableAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"5156:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5146:25:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5472616e73666572436f6e74726f6c3a20616d6f756e742065786365656473207370656e64206c696d6974","id":5006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5173:45:24","typeDescriptions":{"typeIdentifier":"t_stringliteral_4a8e7a3c5a1659064fd99c67e76041fb4b802796f373261324535ea7060d295a","typeString":"literal_string \"TransferControl: amount exceeds spend limit\""},"value":"TransferControl: amount exceeds spend limit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4a8e7a3c5a1659064fd99c67e76041fb4b802796f373261324535ea7060d295a","typeString":"literal_string \"TransferControl: amount exceeds spend limit\""}],"id":5002,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5138:7:24","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":5007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5138:81:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5008,"nodeType":"ExpressionStatement","src":"5138:81:24"},{"expression":{"arguments":[{"id":5012,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4987,"src":"5257:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5013,"name":"spendableAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4996,"src":"5263:15:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":5014,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4989,"src":"5281:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5263:24:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5009,"name":"restrictedAddresses","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4769,"src":"5233:19:24","typeDescriptions":{"typeIdentifier":"t_struct$_AddressToUintMap_$3322_storage","typeString":"struct EnumerableMap.AddressToUintMap storage ref"}},"id":5011,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"set","nodeType":"MemberAccess","referencedDeclaration":3355,"src":"5233:23:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_AddressToUintMap_$3322_storage_ptr_$_t_address_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_AddressToUintMap_$3322_storage_ptr_$","typeString":"function (struct EnumerableMap.AddressToUintMap storage pointer,address,uint256) returns (bool)"}},"id":5016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5233:55:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":5017,"nodeType":"ExpressionStatement","src":"5233:55:24"}]}}]},"id":5104,"implemented":true,"kind":"function","modifiers":[],"name":"_spend","nameLocation":"4976:6:24","nodeType":"FunctionDefinition","parameters":{"id":4990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4987,"mutability":"mutable","name":"addr","nameLocation":"4991:4:24","nodeType":"VariableDeclaration","scope":5104,"src":"4983:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4986,"name":"address","nodeType":"ElementaryTypeName","src":"4983:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4989,"mutability":"mutable","name":"amount","nameLocation":"5005:6:24","nodeType":"VariableDeclaration","scope":5104,"src":"4997:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4988,"name":"uint256","nodeType":"ElementaryTypeName","src":"4997:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4982:30:24"},"returnParameters":{"id":4991,"nodeType":"ParameterList","parameters":[],"src":"5022:0:24"},"scope":5168,"src":"4967:1020:24","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1300],"body":{"id":5142,"nodeType":"Block","src":"6119:197:24","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":5119,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":5114,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5106,"src":"6132:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":5117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6148:1:24","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":5116,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6140:7:24","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":5115,"name":"address","nodeType":"ElementaryTypeName","src":"6140:7:24","typeDescriptions":{}}},"id":5118,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6140:10:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6132:18:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5132,"nodeType":"Block","src":"6210:45:24","statements":[{"expression":{"arguments":[{"id":5128,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5106,"src":"6231:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5129,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5110,"src":"6237:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5127,"name":"_spend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"6224:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6224:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5131,"nodeType":"ExpressionStatement","src":"6224:20:24"}]},"id":5133,"nodeType":"IfStatement","src":"6129:126:24","trueBody":{"id":5126,"nodeType":"Block","src":"6151:53:24","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":5121,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"6172:10:24","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":5122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6172:12:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5123,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5110,"src":"6186:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5120,"name":"_spend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"6165:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6165:28:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5125,"nodeType":"ExpressionStatement","src":"6165:28:24"}]}},{"expression":{"arguments":[{"id":5137,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5106,"src":"6292:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5138,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5108,"src":"6298:2:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5139,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5110,"src":"6302:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5134,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"6265:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_TransferControl_$5168_$","typeString":"type(contract super TransferControl)"}},"id":5136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_beforeTokenTransfer","nodeType":"MemberAccess","referencedDeclaration":1300,"src":"6265:26:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":5140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6265:44:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5141,"nodeType":"ExpressionStatement","src":"6265:44:24"}]},"id":5143,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"6002:20:24","nodeType":"FunctionDefinition","overrides":{"id":5112,"nodeType":"OverrideSpecifier","overrides":[],"src":"6106:8:24"},"parameters":{"id":5111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5106,"mutability":"mutable","name":"from","nameLocation":"6031:4:24","nodeType":"VariableDeclaration","scope":5143,"src":"6023:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5105,"name":"address","nodeType":"ElementaryTypeName","src":"6023:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5108,"mutability":"mutable","name":"to","nameLocation":"6045:2:24","nodeType":"VariableDeclaration","scope":5143,"src":"6037:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5107,"name":"address","nodeType":"ElementaryTypeName","src":"6037:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5110,"mutability":"mutable","name":"amount","nameLocation":"6057:6:24","nodeType":"VariableDeclaration","scope":5143,"src":"6049:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5109,"name":"uint256","nodeType":"ElementaryTypeName","src":"6049:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6022:42:24"},"returnParameters":{"id":5113,"nodeType":"ParameterList","parameters":[],"src":"6119:0:24"},"scope":5168,"src":"5993:323:24","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1073],"body":{"id":5166,"nodeType":"Block","src":"6444:93:24","statements":[{"expression":{"arguments":[{"id":5154,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"6461:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5155,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5149,"src":"6467:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5153,"name":"_spend","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5104,"src":"6454:6:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6454:20:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5157,"nodeType":"ExpressionStatement","src":"6454:20:24"},{"expression":{"arguments":[{"id":5161,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5145,"src":"6513:4:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5162,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5147,"src":"6519:2:24","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5163,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5149,"src":"6523:6:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5158,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"6493:5:24","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_TransferControl_$5168_$","typeString":"type(contract super TransferControl)"}},"id":5160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"_pureTransfer","nodeType":"MemberAccess","referencedDeclaration":1073,"src":"6493:19:24","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":5164,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6493:37:24","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5165,"nodeType":"ExpressionStatement","src":"6493:37:24"}]},"id":5167,"implemented":true,"kind":"function","modifiers":[],"name":"_pureTransfer","nameLocation":"6331:13:24","nodeType":"FunctionDefinition","overrides":{"id":5151,"nodeType":"OverrideSpecifier","overrides":[],"src":"6430:8:24"},"parameters":{"id":5150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5145,"mutability":"mutable","name":"from","nameLocation":"6353:4:24","nodeType":"VariableDeclaration","scope":5167,"src":"6345:12:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5144,"name":"address","nodeType":"ElementaryTypeName","src":"6345:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5147,"mutability":"mutable","name":"to","nameLocation":"6367:2:24","nodeType":"VariableDeclaration","scope":5167,"src":"6359:10:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5146,"name":"address","nodeType":"ElementaryTypeName","src":"6359:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5149,"mutability":"mutable","name":"amount","nameLocation":"6379:6:24","nodeType":"VariableDeclaration","scope":5167,"src":"6371:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5148,"name":"uint256","nodeType":"ElementaryTypeName","src":"6371:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6344:42:24"},"returnParameters":{"id":5152,"nodeType":"ParameterList","parameters":[],"src":"6444:0:24"},"scope":5168,"src":"6322:215:24","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":5169,"src":"762:5777:24","usedErrors":[]}],"src":"32:6507:24"},"id":24},"contracts/BLBIO/ERC20Test.sol":{"ast":{"absolutePath":"contracts/BLBIO/ERC20Test.sol","exportedSymbols":{"Context":[1754],"ERC20":[1312],"ERC20Burnable":[1434],"ERC20Test":[5214],"IERC20":[1390],"IERC20Metadata":[1524],"Ownable":[655]},"id":5215,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5170,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:25"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":5171,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5215,"sourceUnit":1313,"src":"57:55:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","id":5172,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5215,"sourceUnit":1435,"src":"113:74:25","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":5173,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5215,"sourceUnit":656,"src":"188:52:25","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5174,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":1312,"src":"264:5:25"},"id":5175,"nodeType":"InheritanceSpecifier","src":"264:5:25"},{"baseName":{"id":5176,"name":"ERC20Burnable","nodeType":"IdentifierPath","referencedDeclaration":1434,"src":"271:13:25"},"id":5177,"nodeType":"InheritanceSpecifier","src":"271:13:25"},{"baseName":{"id":5178,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":655,"src":"286:7:25"},"id":5179,"nodeType":"InheritanceSpecifier","src":"286:7:25"}],"canonicalName":"ERC20Test","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5214,"linearizedBaseContracts":[5214,655,1434,1312,1524,1390,1754],"name":"ERC20Test","nameLocation":"251:9:25","nodeType":"ContractDefinition","nodes":[{"body":{"id":5197,"nodeType":"Block","src":"340:58:25","statements":[{"expression":{"arguments":[{"expression":{"id":5187,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"356:3:25","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"356:10:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313030","id":5189,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"368:3:25","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"374:2:25","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":5191,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"380:8:25","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":5192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"380:10:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"374:16:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"368:22:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5186,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"350:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5195,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"350:41:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5196,"nodeType":"ExpressionStatement","src":"350:41:25"}]},"id":5198,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"4255534454657374","id":5182,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"320:10:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_747d172f2875aff716033499531cca6f041a18e998a01e665f800f0b97d2cf05","typeString":"literal_string \"BUSDTest\""},"value":"BUSDTest"},{"hexValue":"42555344","id":5183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"332:6:25","typeDescriptions":{"typeIdentifier":"t_stringliteral_54c512ac779647672b8d02e2fe2dc10f79bbf19f719d887221696215fd24e9f1","typeString":"literal_string \"BUSD\""},"value":"BUSD"}],"id":5184,"kind":"baseConstructorSpecifier","modifierName":{"id":5181,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":1312,"src":"314:5:25"},"nodeType":"ModifierInvocation","src":"314:25:25"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5180,"nodeType":"ParameterList","parameters":[],"src":"311:2:25"},"returnParameters":{"id":5185,"nodeType":"ParameterList","parameters":[],"src":"340:0:25"},"scope":5214,"src":"300:98:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5212,"nodeType":"Block","src":"463:34:25","statements":[{"expression":{"arguments":[{"id":5208,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5200,"src":"479:2:25","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5209,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5202,"src":"483:6:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5207,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"473:5:25","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"473:17:25","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5211,"nodeType":"ExpressionStatement","src":"473:17:25"}]},"functionSelector":"40c10f19","id":5213,"implemented":true,"kind":"function","modifiers":[{"id":5205,"kind":"modifierInvocation","modifierName":{"id":5204,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":574,"src":"453:9:25"},"nodeType":"ModifierInvocation","src":"453:9:25"}],"name":"mint","nameLocation":"413:4:25","nodeType":"FunctionDefinition","parameters":{"id":5203,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5200,"mutability":"mutable","name":"to","nameLocation":"426:2:25","nodeType":"VariableDeclaration","scope":5213,"src":"418:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5199,"name":"address","nodeType":"ElementaryTypeName","src":"418:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5202,"mutability":"mutable","name":"amount","nameLocation":"438:6:25","nodeType":"VariableDeclaration","scope":5213,"src":"430:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5201,"name":"uint256","nodeType":"ElementaryTypeName","src":"430:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"417:28:25"},"returnParameters":{"id":5206,"nodeType":"ParameterList","parameters":[],"src":"463:0:25"},"scope":5214,"src":"404:93:25","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":5215,"src":"242:257:25","usedErrors":[]}],"src":"32:467:25"},"id":25},"contracts/StakePool/LPToken.sol":{"ast":{"absolutePath":"contracts/StakePool/LPToken.sol","exportedSymbols":{"Context":[1754],"ERC20":[1312],"ERC20Burnable":[1434],"IERC20":[1390],"IERC20Metadata":[1524],"LPToken":[5260],"Ownable":[655]},"id":5261,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":5216,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:26"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":5217,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5261,"sourceUnit":1313,"src":"57:55:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","file":"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol","id":5218,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5261,"sourceUnit":1435,"src":"113:74:26","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":5219,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":5261,"sourceUnit":656,"src":"188:52:26","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5220,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":1312,"src":"262:5:26"},"id":5221,"nodeType":"InheritanceSpecifier","src":"262:5:26"},{"baseName":{"id":5222,"name":"ERC20Burnable","nodeType":"IdentifierPath","referencedDeclaration":1434,"src":"269:13:26"},"id":5223,"nodeType":"InheritanceSpecifier","src":"269:13:26"},{"baseName":{"id":5224,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":655,"src":"284:7:26"},"id":5225,"nodeType":"InheritanceSpecifier","src":"284:7:26"}],"canonicalName":"LPToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":5260,"linearizedBaseContracts":[5260,655,1434,1312,1524,1390,1754],"name":"LPToken","nameLocation":"251:7:26","nodeType":"ContractDefinition","nodes":[{"body":{"id":5243,"nodeType":"Block","src":"341:61:26","statements":[{"expression":{"arguments":[{"expression":{"id":5233,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"357:3:26","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":5234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"357:10:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313030303030","id":5235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"369:6:26","typeDescriptions":{"typeIdentifier":"t_rational_100000_by_1","typeString":"int_const 100000"},"value":"100000"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":5236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"378:2:26","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":5237,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":730,"src":"384:8:26","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint8_$","typeString":"function () view returns (uint8)"}},"id":5238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"384:10:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"378:16:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"369:25:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5232,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"351:5:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5241,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"351:44:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5242,"nodeType":"ExpressionStatement","src":"351:44:26"}]},"id":5244,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"424e425f424c425f546f6b656e","id":5228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"318:15:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_92cabe9766f415f81513ae710db4179f0ae1be6997320fb1e0da4ca9beeef3fe","typeString":"literal_string \"BNB_BLB_Token\""},"value":"BNB_BLB_Token"},{"hexValue":"4c50","id":5229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"335:4:26","typeDescriptions":{"typeIdentifier":"t_stringliteral_9c21acbd49d77f161dc74d87db3b4adb975d116ec37505d4dd76e89d2844ede3","typeString":"literal_string \"LP\""},"value":"LP"}],"id":5230,"kind":"baseConstructorSpecifier","modifierName":{"id":5227,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":1312,"src":"312:5:26"},"nodeType":"ModifierInvocation","src":"312:28:26"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":5226,"nodeType":"ParameterList","parameters":[],"src":"309:2:26"},"returnParameters":{"id":5231,"nodeType":"ParameterList","parameters":[],"src":"341:0:26"},"scope":5260,"src":"298:104:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":5258,"nodeType":"Block","src":"467:34:26","statements":[{"expression":{"arguments":[{"id":5254,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5246,"src":"483:2:26","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":5255,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5248,"src":"487:6:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":5253,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1129,"src":"477:5:26","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":5256,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"477:17:26","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":5257,"nodeType":"ExpressionStatement","src":"477:17:26"}]},"functionSelector":"40c10f19","id":5259,"implemented":true,"kind":"function","modifiers":[{"id":5251,"kind":"modifierInvocation","modifierName":{"id":5250,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":574,"src":"457:9:26"},"nodeType":"ModifierInvocation","src":"457:9:26"}],"name":"mint","nameLocation":"417:4:26","nodeType":"FunctionDefinition","parameters":{"id":5249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5246,"mutability":"mutable","name":"to","nameLocation":"430:2:26","nodeType":"VariableDeclaration","scope":5259,"src":"422:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":5245,"name":"address","nodeType":"ElementaryTypeName","src":"422:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":5248,"mutability":"mutable","name":"amount","nameLocation":"442:6:26","nodeType":"VariableDeclaration","scope":5259,"src":"434:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5247,"name":"uint256","nodeType":"ElementaryTypeName","src":"434:7:26","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"421:28:26"},"returnParameters":{"id":5252,"nodeType":"ParameterList","parameters":[],"src":"467:0:26"},"scope":5260,"src":"408:93:26","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":5261,"src":"242:261:26","usedErrors":[]}],"src":"32:471:26"},"id":26}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x5b35d8e68aeaccc685239bd9dd79b9ba01a0357930f8a3307ab85511733d9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba8eb2d22f9321bd4660f6617c181d9611ff30a9b089408b8c6e2216d6d5cdc5\",\"dweb:/ipfs/QmTSJvhjHfnUV1j4hsqDv8PmLvGBLRs9gHLjTUXrUJ5Y9q\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/AccessControlEnumerable.sol":{"AccessControlEnumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {AccessControl} that allows enumerating the members of each role.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":\"AccessControlEnumerable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x5b35d8e68aeaccc685239bd9dd79b9ba01a0357930f8a3307ab85511733d9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba8eb2d22f9321bd4660f6617c181d9611ff30a9b089408b8c6e2216d6d5cdc5\",\"dweb:/ipfs/QmTSJvhjHfnUV1j4hsqDv8PmLvGBLRs9gHLjTUXrUJ5Y9q\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControlEnumerable.sol":{"IAccessControlEnumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControlEnumerable declared to support ERC165 detection.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":\"IAccessControlEnumerable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_700":{"entryPoint":null,"id":700,"parameterSlots":2,"returnSlots":0},"abi_decode_string_fromMemory":{"entryPoint":112,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":295,"id":null,"parameterSlots":2,"returnSlots":2},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":461,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":544,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":401,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x41":{"entryPoint":90,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4189:27","statements":[{"nodeType":"YulBlock","src":"6:3:27","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:27"},"nodeType":"YulFunctionCall","src":"66:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:27"},"nodeType":"YulFunctionCall","src":"56:31:27"},"nodeType":"YulExpressionStatement","src":"56:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:27","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:27"},"nodeType":"YulFunctionCall","src":"96:15:27"},"nodeType":"YulExpressionStatement","src":"96:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:27"},"nodeType":"YulFunctionCall","src":"120:15:27"},"nodeType":"YulExpressionStatement","src":"120:15:27"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:27"},{"body":{"nodeType":"YulBlock","src":"210:821:27","statements":[{"body":{"nodeType":"YulBlock","src":"259:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"268:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"271:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"261:6:27"},"nodeType":"YulFunctionCall","src":"261:12:27"},"nodeType":"YulExpressionStatement","src":"261:12:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"238:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"246:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"234:3:27"},"nodeType":"YulFunctionCall","src":"234:17:27"},{"name":"end","nodeType":"YulIdentifier","src":"253:3:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"230:3:27"},"nodeType":"YulFunctionCall","src":"230:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"223:6:27"},"nodeType":"YulFunctionCall","src":"223:35:27"},"nodeType":"YulIf","src":"220:55:27"},{"nodeType":"YulVariableDeclaration","src":"284:23:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"300:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"294:5:27"},"nodeType":"YulFunctionCall","src":"294:13:27"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"288:2:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"316:28:27","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"334:2:27","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"338:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"330:3:27"},"nodeType":"YulFunctionCall","src":"330:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"342:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"326:3:27"},"nodeType":"YulFunctionCall","src":"326:18:27"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"320:2:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"367:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"369:16:27"},"nodeType":"YulFunctionCall","src":"369:18:27"},"nodeType":"YulExpressionStatement","src":"369:18:27"}]},"condition":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"359:2:27"},{"name":"_2","nodeType":"YulIdentifier","src":"363:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"356:2:27"},"nodeType":"YulFunctionCall","src":"356:10:27"},"nodeType":"YulIf","src":"353:36:27"},{"nodeType":"YulVariableDeclaration","src":"398:17:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"412:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"408:3:27"},"nodeType":"YulFunctionCall","src":"408:7:27"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"402:2:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"424:23:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"444:2:27","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"438:5:27"},"nodeType":"YulFunctionCall","src":"438:9:27"},"variables":[{"name":"memPtr","nodeType":"YulTypedName","src":"428:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"456:71:27","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"478:6:27"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"502:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"506:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"498:3:27"},"nodeType":"YulFunctionCall","src":"498:13:27"},{"name":"_3","nodeType":"YulIdentifier","src":"513:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"494:3:27"},"nodeType":"YulFunctionCall","src":"494:22:27"},{"kind":"number","nodeType":"YulLiteral","src":"518:2:27","type":"","value":"63"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"490:3:27"},"nodeType":"YulFunctionCall","src":"490:31:27"},{"name":"_3","nodeType":"YulIdentifier","src":"523:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"486:3:27"},"nodeType":"YulFunctionCall","src":"486:40:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"474:3:27"},"nodeType":"YulFunctionCall","src":"474:53:27"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"460:10:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"586:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"588:16:27"},"nodeType":"YulFunctionCall","src":"588:18:27"},"nodeType":"YulExpressionStatement","src":"588:18:27"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"545:10:27"},{"name":"_2","nodeType":"YulIdentifier","src":"557:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"542:2:27"},"nodeType":"YulFunctionCall","src":"542:18:27"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"565:10:27"},{"name":"memPtr","nodeType":"YulIdentifier","src":"577:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"562:2:27"},"nodeType":"YulFunctionCall","src":"562:22:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"539:2:27"},"nodeType":"YulFunctionCall","src":"539:46:27"},"nodeType":"YulIf","src":"536:72:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"624:2:27","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"628:10:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"617:6:27"},"nodeType":"YulFunctionCall","src":"617:22:27"},"nodeType":"YulExpressionStatement","src":"617:22:27"},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"655:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"663:2:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"648:6:27"},"nodeType":"YulFunctionCall","src":"648:18:27"},"nodeType":"YulExpressionStatement","src":"648:18:27"},{"nodeType":"YulVariableDeclaration","src":"675:14:27","value":{"kind":"number","nodeType":"YulLiteral","src":"685:4:27","type":"","value":"0x20"},"variables":[{"name":"_4","nodeType":"YulTypedName","src":"679:2:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"735:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"744:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"747:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"737:6:27"},"nodeType":"YulFunctionCall","src":"737:12:27"},"nodeType":"YulExpressionStatement","src":"737:12:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"712:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"720:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"708:3:27"},"nodeType":"YulFunctionCall","src":"708:15:27"},{"name":"_4","nodeType":"YulIdentifier","src":"725:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"704:3:27"},"nodeType":"YulFunctionCall","src":"704:24:27"},{"name":"end","nodeType":"YulIdentifier","src":"730:3:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"701:2:27"},"nodeType":"YulFunctionCall","src":"701:33:27"},"nodeType":"YulIf","src":"698:53:27"},{"nodeType":"YulVariableDeclaration","src":"760:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"769:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"764:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"825:87:27","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"854:6:27"},{"name":"i","nodeType":"YulIdentifier","src":"862:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"850:3:27"},"nodeType":"YulFunctionCall","src":"850:14:27"},{"name":"_4","nodeType":"YulIdentifier","src":"866:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"846:3:27"},"nodeType":"YulFunctionCall","src":"846:23:27"},{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"885:6:27"},{"name":"i","nodeType":"YulIdentifier","src":"893:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"881:3:27"},"nodeType":"YulFunctionCall","src":"881:14:27"},{"name":"_4","nodeType":"YulIdentifier","src":"897:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"877:3:27"},"nodeType":"YulFunctionCall","src":"877:23:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"871:5:27"},"nodeType":"YulFunctionCall","src":"871:30:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"839:6:27"},"nodeType":"YulFunctionCall","src":"839:63:27"},"nodeType":"YulExpressionStatement","src":"839:63:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"790:1:27"},{"name":"_1","nodeType":"YulIdentifier","src":"793:2:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"787:2:27"},"nodeType":"YulFunctionCall","src":"787:9:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"797:19:27","statements":[{"nodeType":"YulAssignment","src":"799:15:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"808:1:27"},{"name":"_4","nodeType":"YulIdentifier","src":"811:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"804:3:27"},"nodeType":"YulFunctionCall","src":"804:10:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"799:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"783:3:27","statements":[]},"src":"779:133:27"},{"body":{"nodeType":"YulBlock","src":"942:59:27","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"971:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"979:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"967:3:27"},"nodeType":"YulFunctionCall","src":"967:15:27"},{"name":"_4","nodeType":"YulIdentifier","src":"984:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"963:3:27"},"nodeType":"YulFunctionCall","src":"963:24:27"},{"kind":"number","nodeType":"YulLiteral","src":"989:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"956:6:27"},"nodeType":"YulFunctionCall","src":"956:35:27"},"nodeType":"YulExpressionStatement","src":"956:35:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"927:1:27"},{"name":"_1","nodeType":"YulIdentifier","src":"930:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"924:2:27"},"nodeType":"YulFunctionCall","src":"924:9:27"},"nodeType":"YulIf","src":"921:80:27"},{"nodeType":"YulAssignment","src":"1010:15:27","value":{"name":"memPtr","nodeType":"YulIdentifier","src":"1019:6:27"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"1010:5:27"}]}]},"name":"abi_decode_string_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"184:6:27","type":""},{"name":"end","nodeType":"YulTypedName","src":"192:3:27","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"200:5:27","type":""}],"src":"146:885:27"},{"body":{"nodeType":"YulBlock","src":"1154:444:27","statements":[{"body":{"nodeType":"YulBlock","src":"1200:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1209:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1212:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1202:6:27"},"nodeType":"YulFunctionCall","src":"1202:12:27"},"nodeType":"YulExpressionStatement","src":"1202:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1175:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"1184:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1171:3:27"},"nodeType":"YulFunctionCall","src":"1171:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"1196:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1167:3:27"},"nodeType":"YulFunctionCall","src":"1167:32:27"},"nodeType":"YulIf","src":"1164:52:27"},{"nodeType":"YulVariableDeclaration","src":"1225:30:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1245:9:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1239:5:27"},"nodeType":"YulFunctionCall","src":"1239:16:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1229:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1264:28:27","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1282:2:27","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1286:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1278:3:27"},"nodeType":"YulFunctionCall","src":"1278:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"1290:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1274:3:27"},"nodeType":"YulFunctionCall","src":"1274:18:27"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"1268:2:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1319:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1328:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1331:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1321:6:27"},"nodeType":"YulFunctionCall","src":"1321:12:27"},"nodeType":"YulExpressionStatement","src":"1321:12:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1307:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"1315:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1304:2:27"},"nodeType":"YulFunctionCall","src":"1304:14:27"},"nodeType":"YulIf","src":"1301:34:27"},{"nodeType":"YulAssignment","src":"1344:71:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1387:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"1398:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1383:3:27"},"nodeType":"YulFunctionCall","src":"1383:22:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1407:7:27"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1354:28:27"},"nodeType":"YulFunctionCall","src":"1354:61:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1344:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"1424:41:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1450:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1461:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1446:3:27"},"nodeType":"YulFunctionCall","src":"1446:18:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1440:5:27"},"nodeType":"YulFunctionCall","src":"1440:25:27"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"1428:8:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1494:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1503:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1506:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1496:6:27"},"nodeType":"YulFunctionCall","src":"1496:12:27"},"nodeType":"YulExpressionStatement","src":"1496:12:27"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"1480:8:27"},{"name":"_1","nodeType":"YulIdentifier","src":"1490:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1477:2:27"},"nodeType":"YulFunctionCall","src":"1477:16:27"},"nodeType":"YulIf","src":"1474:36:27"},{"nodeType":"YulAssignment","src":"1519:73:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1562:9:27"},{"name":"offset_1","nodeType":"YulIdentifier","src":"1573:8:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1558:3:27"},"nodeType":"YulFunctionCall","src":"1558:24:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1584:7:27"}],"functionName":{"name":"abi_decode_string_fromMemory","nodeType":"YulIdentifier","src":"1529:28:27"},"nodeType":"YulFunctionCall","src":"1529:63:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1519:6:27"}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1112:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1123:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1135:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1143:6:27","type":""}],"src":"1036:562:27"},{"body":{"nodeType":"YulBlock","src":"1658:325:27","statements":[{"nodeType":"YulAssignment","src":"1668:22:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1682:1:27","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"1685:4:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1678:3:27"},"nodeType":"YulFunctionCall","src":"1678:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1668:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"1699:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1729:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"1735:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1725:3:27"},"nodeType":"YulFunctionCall","src":"1725:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"1703:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1776:31:27","statements":[{"nodeType":"YulAssignment","src":"1778:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1792:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1800:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1788:3:27"},"nodeType":"YulFunctionCall","src":"1788:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1778:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1756:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1749:6:27"},"nodeType":"YulFunctionCall","src":"1749:26:27"},"nodeType":"YulIf","src":"1746:61:27"},{"body":{"nodeType":"YulBlock","src":"1866:111:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1887:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1894:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"1899:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1890:3:27"},"nodeType":"YulFunctionCall","src":"1890:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1880:6:27"},"nodeType":"YulFunctionCall","src":"1880:31:27"},"nodeType":"YulExpressionStatement","src":"1880:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1931:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"1934:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1924:6:27"},"nodeType":"YulFunctionCall","src":"1924:15:27"},"nodeType":"YulExpressionStatement","src":"1924:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1959:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1962:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1952:6:27"},"nodeType":"YulFunctionCall","src":"1952:15:27"},"nodeType":"YulExpressionStatement","src":"1952:15:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"1822:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1845:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1853:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1842:2:27"},"nodeType":"YulFunctionCall","src":"1842:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1819:2:27"},"nodeType":"YulFunctionCall","src":"1819:38:27"},"nodeType":"YulIf","src":"1816:161:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1638:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1647:6:27","type":""}],"src":"1603:380:27"},{"body":{"nodeType":"YulBlock","src":"2044:65:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2061:1:27","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2064:3:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2054:6:27"},"nodeType":"YulFunctionCall","src":"2054:14:27"},"nodeType":"YulExpressionStatement","src":"2054:14:27"},{"nodeType":"YulAssignment","src":"2077:26:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2095:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2098:4:27","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2085:9:27"},"nodeType":"YulFunctionCall","src":"2085:18:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2077:4:27"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2027:3:27","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"2035:4:27","type":""}],"src":"1988:121:27"},{"body":{"nodeType":"YulBlock","src":"2195:464:27","statements":[{"body":{"nodeType":"YulBlock","src":"2228:425:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2242:11:27","value":{"kind":"number","nodeType":"YulLiteral","src":"2252:1:27","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2246:2:27","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2273:2:27"},{"name":"array","nodeType":"YulIdentifier","src":"2277:5:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2266:6:27"},"nodeType":"YulFunctionCall","src":"2266:17:27"},"nodeType":"YulExpressionStatement","src":"2266:17:27"},{"nodeType":"YulVariableDeclaration","src":"2296:31:27","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2318:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"2322:4:27","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2308:9:27"},"nodeType":"YulFunctionCall","src":"2308:19:27"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"2300:4:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2340:57:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2363:4:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2373:1:27","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2380:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"2392:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2376:3:27"},"nodeType":"YulFunctionCall","src":"2376:19:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2369:3:27"},"nodeType":"YulFunctionCall","src":"2369:27:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2359:3:27"},"nodeType":"YulFunctionCall","src":"2359:38:27"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2344:11:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"2434:23:27","statements":[{"nodeType":"YulAssignment","src":"2436:19:27","value":{"name":"data","nodeType":"YulIdentifier","src":"2451:4:27"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"2436:11:27"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2416:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"2428:4:27","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2413:2:27"},"nodeType":"YulFunctionCall","src":"2413:20:27"},"nodeType":"YulIf","src":"2410:47:27"},{"nodeType":"YulVariableDeclaration","src":"2470:41:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2484:4:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2494:1:27","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2501:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"2506:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2497:3:27"},"nodeType":"YulFunctionCall","src":"2497:12:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2490:3:27"},"nodeType":"YulFunctionCall","src":"2490:20:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2480:3:27"},"nodeType":"YulFunctionCall","src":"2480:31:27"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"2474:2:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2524:24:27","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"2537:11:27"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"2528:5:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"2622:21:27","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2631:5:27"},{"name":"_1","nodeType":"YulIdentifier","src":"2638:2:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2624:6:27"},"nodeType":"YulFunctionCall","src":"2624:17:27"},"nodeType":"YulExpressionStatement","src":"2624:17:27"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2572:5:27"},{"name":"_2","nodeType":"YulIdentifier","src":"2579:2:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2569:2:27"},"nodeType":"YulFunctionCall","src":"2569:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2583:26:27","statements":[{"nodeType":"YulAssignment","src":"2585:22:27","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"2598:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"2605:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2594:3:27"},"nodeType":"YulFunctionCall","src":"2594:13:27"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"2585:5:27"}]}]},"pre":{"nodeType":"YulBlock","src":"2565:3:27","statements":[]},"src":"2561:82:27"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2211:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"2216:2:27","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2208:2:27"},"nodeType":"YulFunctionCall","src":"2208:11:27"},"nodeType":"YulIf","src":"2205:448:27"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2167:5:27","type":""},{"name":"len","nodeType":"YulTypedName","src":"2174:3:27","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2179:10:27","type":""}],"src":"2114:545:27"},{"body":{"nodeType":"YulBlock","src":"2749:81:27","statements":[{"nodeType":"YulAssignment","src":"2759:65:27","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2774:4:27"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2792:1:27","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"2795:3:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2788:3:27"},"nodeType":"YulFunctionCall","src":"2788:11:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2805:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2801:3:27"},"nodeType":"YulFunctionCall","src":"2801:6:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2784:3:27"},"nodeType":"YulFunctionCall","src":"2784:24:27"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2780:3:27"},"nodeType":"YulFunctionCall","src":"2780:29:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2770:3:27"},"nodeType":"YulFunctionCall","src":"2770:40:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2816:1:27","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"2819:3:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2812:3:27"},"nodeType":"YulFunctionCall","src":"2812:11:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"2767:2:27"},"nodeType":"YulFunctionCall","src":"2767:57:27"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"2759:4:27"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2726:4:27","type":""},{"name":"len","nodeType":"YulTypedName","src":"2732:3:27","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"2740:4:27","type":""}],"src":"2664:166:27"},{"body":{"nodeType":"YulBlock","src":"2931:1256:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2941:24:27","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2961:3:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2955:5:27"},"nodeType":"YulFunctionCall","src":"2955:10:27"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"2945:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"3008:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3010:16:27"},"nodeType":"YulFunctionCall","src":"3010:18:27"},"nodeType":"YulExpressionStatement","src":"3010:18:27"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"2980:6:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2996:2:27","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"3000:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2992:3:27"},"nodeType":"YulFunctionCall","src":"2992:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"3004:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2988:3:27"},"nodeType":"YulFunctionCall","src":"2988:18:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2977:2:27"},"nodeType":"YulFunctionCall","src":"2977:30:27"},"nodeType":"YulIf","src":"2974:56:27"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3083:4:27"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3121:4:27"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3115:5:27"},"nodeType":"YulFunctionCall","src":"3115:11:27"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"3089:25:27"},"nodeType":"YulFunctionCall","src":"3089:38:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"3129:6:27"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"3039:43:27"},"nodeType":"YulFunctionCall","src":"3039:97:27"},"nodeType":"YulExpressionStatement","src":"3039:97:27"},{"nodeType":"YulVariableDeclaration","src":"3145:18:27","value":{"kind":"number","nodeType":"YulLiteral","src":"3162:1:27","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"3149:9:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3172:23:27","value":{"kind":"number","nodeType":"YulLiteral","src":"3191:4:27","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"3176:11:27","type":""}]},{"nodeType":"YulAssignment","src":"3204:24:27","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3217:11:27"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3204:9:27"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"3274:656:27","statements":[{"nodeType":"YulVariableDeclaration","src":"3288:35:27","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3307:6:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3319:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3315:3:27"},"nodeType":"YulFunctionCall","src":"3315:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3303:3:27"},"nodeType":"YulFunctionCall","src":"3303:20:27"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"3292:7:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3336:49:27","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3380:4:27"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"3350:29:27"},"nodeType":"YulFunctionCall","src":"3350:35:27"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"3340:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3398:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"3407:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3402:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"3485:172:27","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3510:6:27"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3528:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3533:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3524:3:27"},"nodeType":"YulFunctionCall","src":"3524:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3518:5:27"},"nodeType":"YulFunctionCall","src":"3518:26:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3503:6:27"},"nodeType":"YulFunctionCall","src":"3503:42:27"},"nodeType":"YulExpressionStatement","src":"3503:42:27"},{"nodeType":"YulAssignment","src":"3562:24:27","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3576:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3584:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3572:3:27"},"nodeType":"YulFunctionCall","src":"3572:14:27"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3562:6:27"}]},{"nodeType":"YulAssignment","src":"3603:40:27","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3620:9:27"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3631:11:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3616:3:27"},"nodeType":"YulFunctionCall","src":"3616:27:27"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3603:9:27"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3432:1:27"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"3435:7:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3429:2:27"},"nodeType":"YulFunctionCall","src":"3429:14:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3444:28:27","statements":[{"nodeType":"YulAssignment","src":"3446:24:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"3455:1:27"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3458:11:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3451:3:27"},"nodeType":"YulFunctionCall","src":"3451:19:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"3446:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"3425:3:27","statements":[]},"src":"3421:236:27"},{"body":{"nodeType":"YulBlock","src":"3705:166:27","statements":[{"nodeType":"YulVariableDeclaration","src":"3723:43:27","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3750:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"3755:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3746:3:27"},"nodeType":"YulFunctionCall","src":"3746:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3740:5:27"},"nodeType":"YulFunctionCall","src":"3740:26:27"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"3727:9:27","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"3790:6:27"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"3802:9:27"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3829:1:27","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"3832:6:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3825:3:27"},"nodeType":"YulFunctionCall","src":"3825:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"3841:3:27","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3821:3:27"},"nodeType":"YulFunctionCall","src":"3821:24:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3851:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3847:3:27"},"nodeType":"YulFunctionCall","src":"3847:6:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3817:3:27"},"nodeType":"YulFunctionCall","src":"3817:37:27"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3813:3:27"},"nodeType":"YulFunctionCall","src":"3813:42:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3798:3:27"},"nodeType":"YulFunctionCall","src":"3798:58:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3783:6:27"},"nodeType":"YulFunctionCall","src":"3783:74:27"},"nodeType":"YulExpressionStatement","src":"3783:74:27"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"3676:7:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"3685:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3673:2:27"},"nodeType":"YulFunctionCall","src":"3673:19:27"},"nodeType":"YulIf","src":"3670:201:27"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3891:4:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3905:1:27","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"3908:6:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3901:3:27"},"nodeType":"YulFunctionCall","src":"3901:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"3917:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3897:3:27"},"nodeType":"YulFunctionCall","src":"3897:22:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3884:6:27"},"nodeType":"YulFunctionCall","src":"3884:36:27"},"nodeType":"YulExpressionStatement","src":"3884:36:27"}]},"nodeType":"YulCase","src":"3267:663:27","value":{"kind":"number","nodeType":"YulLiteral","src":"3272:1:27","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3947:234:27","statements":[{"nodeType":"YulVariableDeclaration","src":"3961:14:27","value":{"kind":"number","nodeType":"YulLiteral","src":"3974:1:27","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3965:5:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"4010:67:27","statements":[{"nodeType":"YulAssignment","src":"4028:35:27","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4047:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4052:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4043:3:27"},"nodeType":"YulFunctionCall","src":"4043:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4037:5:27"},"nodeType":"YulFunctionCall","src":"4037:26:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4028:5:27"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"3991:6:27"},"nodeType":"YulIf","src":"3988:89:27"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4097:4:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4156:5:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"4163:6:27"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"4103:52:27"},"nodeType":"YulFunctionCall","src":"4103:67:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4090:6:27"},"nodeType":"YulFunctionCall","src":"4090:81:27"},"nodeType":"YulExpressionStatement","src":"4090:81:27"}]},"nodeType":"YulCase","src":"3939:242:27","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3247:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3255:2:27","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3244:2:27"},"nodeType":"YulFunctionCall","src":"3244:14:27"},"nodeType":"YulSwitch","src":"3237:944:27"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"2916:4:27","type":""},{"name":"src","nodeType":"YulTypedName","src":"2922:3:27","type":""}],"src":"2835:1352:27"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), 0)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}","id":27,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162000b8238038062000b82833981016040819052620000349162000127565b600362000042838262000220565b50600462000051828262000220565b505050620002ec565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126200008257600080fd5b81516001600160401b03808211156200009f576200009f6200005a565b604051601f8301601f19908116603f01168101908282118183101715620000ca57620000ca6200005a565b81604052838152602092508683858801011115620000e757600080fd5b600091505b838210156200010b5785820183015181830184015290820190620000ec565b838211156200011d5760008385830101525b9695505050505050565b600080604083850312156200013b57600080fd5b82516001600160401b03808211156200015357600080fd5b620001618683870162000070565b935060208501519150808211156200017857600080fd5b50620001878582860162000070565b9150509250929050565b600181811c90821680620001a657607f821691505b602082108103620001c757634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200021b57600081815260208120601f850160051c81016020861015620001f65750805b601f850160051c820191505b81811015620002175782815560010162000202565b5050505b505050565b81516001600160401b038111156200023c576200023c6200005a565b62000254816200024d845462000191565b84620001cd565b602080601f8311600181146200028c5760008415620002735750858301515b600019600386901b1c1916600185901b17855562000217565b600085815260208120601f198616915b82811015620002bd578886015182559484019460019091019084016200029c565b5085821015620002dc5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61088680620002fc6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106c4565b60405180910390f35b6100df6100da366004610735565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461075f565b61024a565b604051601281526020016100c3565b6100df610131366004610735565b61026e565b6100f361014436600461079b565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df610175366004610735565b61029f565b6100df610188366004610735565b61031f565b6100f361019b3660046107bd565b61032d565b6060600380546101af906107f0565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107f0565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b919061082a565b610358565b6060600480546101af906107f0565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066b90849061082a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b600060208083528351808285015260005b818110156106f1578581018301518582016040015282016106d5565b81811115610703576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461073057600080fd5b919050565b6000806040838503121561074857600080fd5b61075183610719565b946020939093013593505050565b60008060006060848603121561077457600080fd5b61077d84610719565b925061078b60208501610719565b9150604084013590509250925092565b6000602082840312156107ad57600080fd5b6107b682610719565b9392505050565b600080604083850312156107d057600080fd5b6107d983610719565b91506107e760208401610719565b90509250929050565b600181811c9082168061080457607f821691505b60208210810361082457634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561084b57634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220d2f3acf5a1d43c7e2ea899a342c9ad586816f4a218c7e4306ab32d2eca132fe364736f6c634300080f0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB82 CODESIZE SUB DUP1 PUSH3 0xB82 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x127 JUMP JUMPDEST PUSH1 0x3 PUSH3 0x42 DUP4 DUP3 PUSH3 0x220 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x51 DUP3 DUP3 PUSH3 0x220 JUMP JUMPDEST POP POP POP PUSH3 0x2EC JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9F JUMPI PUSH3 0x9F PUSH3 0x5A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xCA JUMPI PUSH3 0xCA PUSH3 0x5A JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0xE7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x10B JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0xEC JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x11D JUMPI PUSH1 0x0 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x153 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x161 DUP7 DUP4 DUP8 ADD PUSH3 0x70 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x178 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x187 DUP6 DUP3 DUP7 ADD PUSH3 0x70 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x1A6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x1C7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x21B JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1F6 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x217 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x202 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x23C JUMPI PUSH3 0x23C PUSH3 0x5A JUMP JUMPDEST PUSH3 0x254 DUP2 PUSH3 0x24D DUP5 SLOAD PUSH3 0x191 JUMP JUMPDEST DUP5 PUSH3 0x1CD JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x28C JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x273 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x217 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x2BD JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x29C JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x2DC JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x886 DUP1 PUSH3 0x2FC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x75F JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7BD JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x82A JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66B SWAP1 DUP5 SWAP1 PUSH2 0x82A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6F1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6D5 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x751 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77D DUP5 PUSH2 0x719 JUMP JUMPDEST SWAP3 POP PUSH2 0x78B PUSH1 0x20 DUP6 ADD PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B6 DUP3 PUSH2 0x719 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D9 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH2 0x7E7 PUSH1 0x20 DUP5 ADD PUSH2 0x719 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x804 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x824 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x84B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 RETURN 0xAC CREATE2 LOG1 0xD4 EXTCODECOPY PUSH31 0x2EA899A342C9AD586816F4A218C7E4306AB32D2ECA132FE364736F6C634300 ADDMOD 0xF STOP CALLER ","sourceMap":"1403:11951:5:-:0;;;1978:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2044:5;:13;2052:5;2044;:13;:::i;:::-;-1:-1:-1;2067:7:5;:17;2077:7;2067;:17;:::i;:::-;;1978:113;;1403:11951;;14:127:27;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:27;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:27;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:27:o;1036:562::-;1135:6;1143;1196:2;1184:9;1175:7;1171:23;1167:32;1164:52;;;1212:1;1209;1202:12;1164:52;1239:16;;-1:-1:-1;;;;;1304:14:27;;;1301:34;;;1331:1;1328;1321:12;1301:34;1354:61;1407:7;1398:6;1387:9;1383:22;1354:61;:::i;:::-;1344:71;;1461:2;1450:9;1446:18;1440:25;1424:41;;1490:2;1480:8;1477:16;1474:36;;;1506:1;1503;1496:12;1474:36;;1529:63;1584:7;1573:8;1562:9;1558:24;1529:63;:::i;:::-;1519:73;;;1036:562;;;;;:::o;1603:380::-;1682:1;1678:12;;;;1725;;;1746:61;;1800:4;1792:6;1788:17;1778:27;;1746:61;1853:2;1845:6;1842:14;1822:18;1819:38;1816:161;;1899:10;1894:3;1890:20;1887:1;1880:31;1934:4;1931:1;1924:15;1962:4;1959:1;1952:15;1816:161;;1603:380;;;:::o;2114:545::-;2216:2;2211:3;2208:11;2205:448;;;2252:1;2277:5;2273:2;2266:17;2322:4;2318:2;2308:19;2392:2;2380:10;2376:19;2373:1;2369:27;2363:4;2359:38;2428:4;2416:10;2413:20;2410:47;;;-1:-1:-1;2451:4:27;2410:47;2506:2;2501:3;2497:12;2494:1;2490:20;2484:4;2480:31;2470:41;;2561:82;2579:2;2572:5;2569:13;2561:82;;;2624:17;;;2605:1;2594:13;2561:82;;;2565:3;;;2205:448;2114:545;;;:::o;2835:1352::-;2955:10;;-1:-1:-1;;;;;2977:30:27;;2974:56;;;3010:18;;:::i;:::-;3039:97;3129:6;3089:38;3121:4;3115:11;3089:38;:::i;:::-;3083:4;3039:97;:::i;:::-;3191:4;;3255:2;3244:14;;3272:1;3267:663;;;;3974:1;3991:6;3988:89;;;-1:-1:-1;4043:19:27;;;4037:26;3988:89;-1:-1:-1;;2792:1:27;2788:11;;;2784:24;2780:29;2770:40;2816:1;2812:11;;;2767:57;4090:81;;3237:944;;3267:663;2061:1;2054:14;;;2098:4;2085:18;;-1:-1:-1;;3303:20:27;;;3421:236;3435:7;3432:1;3429:14;3421:236;;;3524:19;;;3518:26;3503:42;;3616:27;;;;3584:1;3572:14;;;;3451:19;;3421:236;;;3425:3;3685:6;3676:7;3673:19;3670:201;;;3746:19;;;3740:26;-1:-1:-1;;3829:1:27;3825:14;;;3841:3;3821:24;3817:37;3813:42;3798:58;3783:74;;3670:201;-1:-1:-1;;;;;3917:1:27;3901:14;;;3897:22;3884:36;;-1:-1:-1;2835:1352:27:o;:::-;1403:11951:5;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_1311":{"entryPoint":null,"id":1311,"parameterSlots":3,"returnSlots":0},"@_approve_1246":{"entryPoint":856,"id":1246,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1300":{"entryPoint":null,"id":1300,"parameterSlots":3,"returnSlots":0},"@_msgSender_1744":{"entryPoint":null,"id":1744,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_1289":{"entryPoint":1148,"id":1289,"parameterSlots":3,"returnSlots":0},"@_transfer_1002":{"entryPoint":1270,"id":1002,"parameterSlots":3,"returnSlots":0},"@allowance_797":{"entryPoint":813,"id":797,"parameterSlots":2,"returnSlots":1},"@approve_822":{"entryPoint":562,"id":822,"parameterSlots":2,"returnSlots":1},"@balanceOf_754":{"entryPoint":null,"id":754,"parameterSlots":1,"returnSlots":1},"@decimals_730":{"entryPoint":null,"id":730,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_925":{"entryPoint":671,"id":925,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_884":{"entryPoint":622,"id":884,"parameterSlots":2,"returnSlots":1},"@name_710":{"entryPoint":416,"id":710,"parameterSlots":0,"returnSlots":1},"@symbol_720":{"entryPoint":656,"id":720,"parameterSlots":0,"returnSlots":1},"@totalSupply_740":{"entryPoint":null,"id":740,"parameterSlots":0,"returnSlots":1},"@transferFrom_855":{"entryPoint":586,"id":855,"parameterSlots":3,"returnSlots":1},"@transfer_779":{"entryPoint":799,"id":779,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":1817,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":1947,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":1981,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":1887,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":1845,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1732,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":2090,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":2032,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5806:27","statements":[{"nodeType":"YulBlock","src":"6:3:27","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:476:27","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:27","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:27","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:27","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:27"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:27"},"nodeType":"YulFunctionCall","src":"166:21:27"},"nodeType":"YulExpressionStatement","src":"166:21:27"},{"nodeType":"YulVariableDeclaration","src":"196:27:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:27"},"nodeType":"YulFunctionCall","src":"210:13:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:27"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:27"},"nodeType":"YulFunctionCall","src":"239:18:27"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:27"},"nodeType":"YulFunctionCall","src":"232:34:27"},"nodeType":"YulExpressionStatement","src":"232:34:27"},{"nodeType":"YulVariableDeclaration","src":"275:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:27","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:27"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:27"},"nodeType":"YulFunctionCall","src":"369:17:27"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:27"},"nodeType":"YulFunctionCall","src":"365:26:27"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:27"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:27"},"nodeType":"YulFunctionCall","src":"403:14:27"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:27"},"nodeType":"YulFunctionCall","src":"399:23:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:27"},"nodeType":"YulFunctionCall","src":"393:30:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:27"},"nodeType":"YulFunctionCall","src":"358:66:27"},"nodeType":"YulExpressionStatement","src":"358:66:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:27"},"nodeType":"YulFunctionCall","src":"302:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:27","statements":[{"nodeType":"YulAssignment","src":"318:15:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:27"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:27"},"nodeType":"YulFunctionCall","src":"323:10:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:27","statements":[]},"src":"294:140:27"},{"body":{"nodeType":"YulBlock","src":"468:66:27","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"497:9:27"},{"name":"length","nodeType":"YulIdentifier","src":"508:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"493:3:27"},"nodeType":"YulFunctionCall","src":"493:22:27"},{"kind":"number","nodeType":"YulLiteral","src":"517:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"489:3:27"},"nodeType":"YulFunctionCall","src":"489:31:27"},{"kind":"number","nodeType":"YulLiteral","src":"522:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"482:6:27"},"nodeType":"YulFunctionCall","src":"482:42:27"},"nodeType":"YulExpressionStatement","src":"482:42:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"449:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"452:6:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"446:2:27"},"nodeType":"YulFunctionCall","src":"446:13:27"},"nodeType":"YulIf","src":"443:91:27"},{"nodeType":"YulAssignment","src":"543:62:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"559:9:27"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"578:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"586:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"574:3:27"},"nodeType":"YulFunctionCall","src":"574:15:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"595:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"591:3:27"},"nodeType":"YulFunctionCall","src":"591:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"570:3:27"},"nodeType":"YulFunctionCall","src":"570:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"555:3:27"},"nodeType":"YulFunctionCall","src":"555:45:27"},{"kind":"number","nodeType":"YulLiteral","src":"602:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"551:3:27"},"nodeType":"YulFunctionCall","src":"551:54:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"543:4:27"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:27","type":""}],"src":"14:597:27"},{"body":{"nodeType":"YulBlock","src":"665:124:27","statements":[{"nodeType":"YulAssignment","src":"675:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"697:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"684:12:27"},"nodeType":"YulFunctionCall","src":"684:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"675:5:27"}]},{"body":{"nodeType":"YulBlock","src":"767:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"776:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"779:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"769:6:27"},"nodeType":"YulFunctionCall","src":"769:12:27"},"nodeType":"YulExpressionStatement","src":"769:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"726:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"737:5:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"752:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"757:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"748:3:27"},"nodeType":"YulFunctionCall","src":"748:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"761:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"744:3:27"},"nodeType":"YulFunctionCall","src":"744:19:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"733:3:27"},"nodeType":"YulFunctionCall","src":"733:31:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"723:2:27"},"nodeType":"YulFunctionCall","src":"723:42:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"716:6:27"},"nodeType":"YulFunctionCall","src":"716:50:27"},"nodeType":"YulIf","src":"713:70:27"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"655:5:27","type":""}],"src":"616:173:27"},{"body":{"nodeType":"YulBlock","src":"881:167:27","statements":[{"body":{"nodeType":"YulBlock","src":"927:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"936:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"939:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"929:6:27"},"nodeType":"YulFunctionCall","src":"929:12:27"},"nodeType":"YulExpressionStatement","src":"929:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"902:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"911:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"898:3:27"},"nodeType":"YulFunctionCall","src":"898:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"923:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"894:3:27"},"nodeType":"YulFunctionCall","src":"894:32:27"},"nodeType":"YulIf","src":"891:52:27"},{"nodeType":"YulAssignment","src":"952:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"981:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"962:18:27"},"nodeType":"YulFunctionCall","src":"962:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"952:6:27"}]},{"nodeType":"YulAssignment","src":"1000:42:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1027:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1038:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1023:3:27"},"nodeType":"YulFunctionCall","src":"1023:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1010:12:27"},"nodeType":"YulFunctionCall","src":"1010:32:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1000:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"839:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"850:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"862:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"870:6:27","type":""}],"src":"794:254:27"},{"body":{"nodeType":"YulBlock","src":"1148:92:27","statements":[{"nodeType":"YulAssignment","src":"1158:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:27"},"nodeType":"YulFunctionCall","src":"1166:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1200:9:27"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1225:6:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1218:6:27"},"nodeType":"YulFunctionCall","src":"1218:14:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1211:6:27"},"nodeType":"YulFunctionCall","src":"1211:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1193:6:27"},"nodeType":"YulFunctionCall","src":"1193:41:27"},"nodeType":"YulExpressionStatement","src":"1193:41:27"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1117:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1128:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1139:4:27","type":""}],"src":"1053:187:27"},{"body":{"nodeType":"YulBlock","src":"1346:76:27","statements":[{"nodeType":"YulAssignment","src":"1356:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1368:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1379:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1364:3:27"},"nodeType":"YulFunctionCall","src":"1364:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1356:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1398:9:27"},{"name":"value0","nodeType":"YulIdentifier","src":"1409:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1391:6:27"},"nodeType":"YulFunctionCall","src":"1391:25:27"},"nodeType":"YulExpressionStatement","src":"1391:25:27"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1315:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1326:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1337:4:27","type":""}],"src":"1245:177:27"},{"body":{"nodeType":"YulBlock","src":"1531:224:27","statements":[{"body":{"nodeType":"YulBlock","src":"1577:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1586:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1589:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1579:6:27"},"nodeType":"YulFunctionCall","src":"1579:12:27"},"nodeType":"YulExpressionStatement","src":"1579:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1552:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"1561:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1548:3:27"},"nodeType":"YulFunctionCall","src":"1548:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"1573:2:27","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1544:3:27"},"nodeType":"YulFunctionCall","src":"1544:32:27"},"nodeType":"YulIf","src":"1541:52:27"},{"nodeType":"YulAssignment","src":"1602:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1631:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1612:18:27"},"nodeType":"YulFunctionCall","src":"1612:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1602:6:27"}]},{"nodeType":"YulAssignment","src":"1650:48:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1683:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1694:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1679:3:27"},"nodeType":"YulFunctionCall","src":"1679:18:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1660:18:27"},"nodeType":"YulFunctionCall","src":"1660:38:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1650:6:27"}]},{"nodeType":"YulAssignment","src":"1707:42:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1734:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1745:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:27"},"nodeType":"YulFunctionCall","src":"1730:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1717:12:27"},"nodeType":"YulFunctionCall","src":"1717:32:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1707:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1481:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1492:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1504:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1512:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1520:6:27","type":""}],"src":"1427:328:27"},{"body":{"nodeType":"YulBlock","src":"1857:87:27","statements":[{"nodeType":"YulAssignment","src":"1867:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1879:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1890:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1875:3:27"},"nodeType":"YulFunctionCall","src":"1875:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1867:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1909:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1924:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1932:4:27","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1920:3:27"},"nodeType":"YulFunctionCall","src":"1920:17:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1902:6:27"},"nodeType":"YulFunctionCall","src":"1902:36:27"},"nodeType":"YulExpressionStatement","src":"1902:36:27"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1826:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1837:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1848:4:27","type":""}],"src":"1760:184:27"},{"body":{"nodeType":"YulBlock","src":"2019:116:27","statements":[{"body":{"nodeType":"YulBlock","src":"2065:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2074:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2077:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2067:6:27"},"nodeType":"YulFunctionCall","src":"2067:12:27"},"nodeType":"YulExpressionStatement","src":"2067:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2040:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2049:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2036:3:27"},"nodeType":"YulFunctionCall","src":"2036:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"2061:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2032:3:27"},"nodeType":"YulFunctionCall","src":"2032:32:27"},"nodeType":"YulIf","src":"2029:52:27"},{"nodeType":"YulAssignment","src":"2090:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2119:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2100:18:27"},"nodeType":"YulFunctionCall","src":"2100:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2090:6:27"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1985:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1996:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2008:6:27","type":""}],"src":"1949:186:27"},{"body":{"nodeType":"YulBlock","src":"2227:173:27","statements":[{"body":{"nodeType":"YulBlock","src":"2273:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2282:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2285:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2275:6:27"},"nodeType":"YulFunctionCall","src":"2275:12:27"},"nodeType":"YulExpressionStatement","src":"2275:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2248:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2257:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2244:3:27"},"nodeType":"YulFunctionCall","src":"2244:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"2269:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2240:3:27"},"nodeType":"YulFunctionCall","src":"2240:32:27"},"nodeType":"YulIf","src":"2237:52:27"},{"nodeType":"YulAssignment","src":"2298:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2327:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2308:18:27"},"nodeType":"YulFunctionCall","src":"2308:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2298:6:27"}]},{"nodeType":"YulAssignment","src":"2346:48:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2379:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2390:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2375:3:27"},"nodeType":"YulFunctionCall","src":"2375:18:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2356:18:27"},"nodeType":"YulFunctionCall","src":"2356:38:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2346:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2185:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2196:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2208:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2216:6:27","type":""}],"src":"2140:260:27"},{"body":{"nodeType":"YulBlock","src":"2460:325:27","statements":[{"nodeType":"YulAssignment","src":"2470:22:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2484:1:27","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2487:4:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2480:3:27"},"nodeType":"YulFunctionCall","src":"2480:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2470:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"2501:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2531:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"2537:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2527:3:27"},"nodeType":"YulFunctionCall","src":"2527:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2505:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"2578:31:27","statements":[{"nodeType":"YulAssignment","src":"2580:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2594:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2602:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2590:3:27"},"nodeType":"YulFunctionCall","src":"2590:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2580:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2558:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2551:6:27"},"nodeType":"YulFunctionCall","src":"2551:26:27"},"nodeType":"YulIf","src":"2548:61:27"},{"body":{"nodeType":"YulBlock","src":"2668:111:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2689:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2696:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2701:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2692:3:27"},"nodeType":"YulFunctionCall","src":"2692:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2682:6:27"},"nodeType":"YulFunctionCall","src":"2682:31:27"},"nodeType":"YulExpressionStatement","src":"2682:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2733:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2736:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2726:6:27"},"nodeType":"YulFunctionCall","src":"2726:15:27"},"nodeType":"YulExpressionStatement","src":"2726:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2761:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2764:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2754:6:27"},"nodeType":"YulFunctionCall","src":"2754:15:27"},"nodeType":"YulExpressionStatement","src":"2754:15:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2624:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2647:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2655:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2644:2:27"},"nodeType":"YulFunctionCall","src":"2644:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2621:2:27"},"nodeType":"YulFunctionCall","src":"2621:38:27"},"nodeType":"YulIf","src":"2618:161:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2440:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2449:6:27","type":""}],"src":"2405:380:27"},{"body":{"nodeType":"YulBlock","src":"2838:177:27","statements":[{"body":{"nodeType":"YulBlock","src":"2873:111:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2894:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2901:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2906:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2897:3:27"},"nodeType":"YulFunctionCall","src":"2897:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2887:6:27"},"nodeType":"YulFunctionCall","src":"2887:31:27"},"nodeType":"YulExpressionStatement","src":"2887:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2938:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2941:4:27","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2931:6:27"},"nodeType":"YulFunctionCall","src":"2931:15:27"},"nodeType":"YulExpressionStatement","src":"2931:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2966:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2969:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2959:6:27"},"nodeType":"YulFunctionCall","src":"2959:15:27"},"nodeType":"YulExpressionStatement","src":"2959:15:27"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2854:1:27"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"2861:1:27"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2857:3:27"},"nodeType":"YulFunctionCall","src":"2857:6:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2851:2:27"},"nodeType":"YulFunctionCall","src":"2851:13:27"},"nodeType":"YulIf","src":"2848:136:27"},{"nodeType":"YulAssignment","src":"2993:16:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3004:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"3007:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3000:3:27"},"nodeType":"YulFunctionCall","src":"3000:9:27"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"2993:3:27"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"2821:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"2824:1:27","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"2830:3:27","type":""}],"src":"2790:225:27"},{"body":{"nodeType":"YulBlock","src":"3194:227:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3211:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3222:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3204:6:27"},"nodeType":"YulFunctionCall","src":"3204:21:27"},"nodeType":"YulExpressionStatement","src":"3204:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3245:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3256:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3241:3:27"},"nodeType":"YulFunctionCall","src":"3241:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"3261:2:27","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3234:6:27"},"nodeType":"YulFunctionCall","src":"3234:30:27"},"nodeType":"YulExpressionStatement","src":"3234:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3284:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3295:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3280:3:27"},"nodeType":"YulFunctionCall","src":"3280:18:27"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"3300:34:27","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3273:6:27"},"nodeType":"YulFunctionCall","src":"3273:62:27"},"nodeType":"YulExpressionStatement","src":"3273:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3355:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3366:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3351:3:27"},"nodeType":"YulFunctionCall","src":"3351:18:27"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"3371:7:27","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3344:6:27"},"nodeType":"YulFunctionCall","src":"3344:35:27"},"nodeType":"YulExpressionStatement","src":"3344:35:27"},{"nodeType":"YulAssignment","src":"3388:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3400:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3411:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3396:3:27"},"nodeType":"YulFunctionCall","src":"3396:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3388:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3171:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3185:4:27","type":""}],"src":"3020:401:27"},{"body":{"nodeType":"YulBlock","src":"3600:226:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3617:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3628:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3610:6:27"},"nodeType":"YulFunctionCall","src":"3610:21:27"},"nodeType":"YulExpressionStatement","src":"3610:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3651:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3662:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3647:3:27"},"nodeType":"YulFunctionCall","src":"3647:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"3667:2:27","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3640:6:27"},"nodeType":"YulFunctionCall","src":"3640:30:27"},"nodeType":"YulExpressionStatement","src":"3640:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3690:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3701:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3686:3:27"},"nodeType":"YulFunctionCall","src":"3686:18:27"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"3706:34:27","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3679:6:27"},"nodeType":"YulFunctionCall","src":"3679:62:27"},"nodeType":"YulExpressionStatement","src":"3679:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3761:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3772:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3757:3:27"},"nodeType":"YulFunctionCall","src":"3757:18:27"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"3777:6:27","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3750:6:27"},"nodeType":"YulFunctionCall","src":"3750:34:27"},"nodeType":"YulExpressionStatement","src":"3750:34:27"},{"nodeType":"YulAssignment","src":"3793:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3805:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3816:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3801:3:27"},"nodeType":"YulFunctionCall","src":"3801:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3793:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3577:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3591:4:27","type":""}],"src":"3426:400:27"},{"body":{"nodeType":"YulBlock","src":"4005:224:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4022:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4033:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4015:6:27"},"nodeType":"YulFunctionCall","src":"4015:21:27"},"nodeType":"YulExpressionStatement","src":"4015:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4056:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4067:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4052:3:27"},"nodeType":"YulFunctionCall","src":"4052:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"4072:2:27","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4045:6:27"},"nodeType":"YulFunctionCall","src":"4045:30:27"},"nodeType":"YulExpressionStatement","src":"4045:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4095:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4106:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4091:3:27"},"nodeType":"YulFunctionCall","src":"4091:18:27"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"4111:34:27","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4084:6:27"},"nodeType":"YulFunctionCall","src":"4084:62:27"},"nodeType":"YulExpressionStatement","src":"4084:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4166:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4177:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4162:3:27"},"nodeType":"YulFunctionCall","src":"4162:18:27"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"4182:4:27","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4155:6:27"},"nodeType":"YulFunctionCall","src":"4155:32:27"},"nodeType":"YulExpressionStatement","src":"4155:32:27"},{"nodeType":"YulAssignment","src":"4196:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4208:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4219:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4204:3:27"},"nodeType":"YulFunctionCall","src":"4204:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4196:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3982:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3996:4:27","type":""}],"src":"3831:398:27"},{"body":{"nodeType":"YulBlock","src":"4408:179:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4425:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4436:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4418:6:27"},"nodeType":"YulFunctionCall","src":"4418:21:27"},"nodeType":"YulExpressionStatement","src":"4418:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4459:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4470:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4455:3:27"},"nodeType":"YulFunctionCall","src":"4455:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"4475:2:27","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4448:6:27"},"nodeType":"YulFunctionCall","src":"4448:30:27"},"nodeType":"YulExpressionStatement","src":"4448:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4498:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4509:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4494:3:27"},"nodeType":"YulFunctionCall","src":"4494:18:27"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"4514:31:27","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4487:6:27"},"nodeType":"YulFunctionCall","src":"4487:59:27"},"nodeType":"YulExpressionStatement","src":"4487:59:27"},{"nodeType":"YulAssignment","src":"4555:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4567:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4578:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4563:3:27"},"nodeType":"YulFunctionCall","src":"4563:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4555:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4385:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4399:4:27","type":""}],"src":"4234:353:27"},{"body":{"nodeType":"YulBlock","src":"4766:227:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4783:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4794:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4776:6:27"},"nodeType":"YulFunctionCall","src":"4776:21:27"},"nodeType":"YulExpressionStatement","src":"4776:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4817:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4828:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4813:3:27"},"nodeType":"YulFunctionCall","src":"4813:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"4833:2:27","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4806:6:27"},"nodeType":"YulFunctionCall","src":"4806:30:27"},"nodeType":"YulExpressionStatement","src":"4806:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4856:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4867:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4852:3:27"},"nodeType":"YulFunctionCall","src":"4852:18:27"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"4872:34:27","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4845:6:27"},"nodeType":"YulFunctionCall","src":"4845:62:27"},"nodeType":"YulExpressionStatement","src":"4845:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4927:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4938:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4923:3:27"},"nodeType":"YulFunctionCall","src":"4923:18:27"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"4943:7:27","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4916:6:27"},"nodeType":"YulFunctionCall","src":"4916:35:27"},"nodeType":"YulExpressionStatement","src":"4916:35:27"},{"nodeType":"YulAssignment","src":"4960:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4972:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4983:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4968:3:27"},"nodeType":"YulFunctionCall","src":"4968:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4960:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4743:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4757:4:27","type":""}],"src":"4592:401:27"},{"body":{"nodeType":"YulBlock","src":"5172:225:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5189:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5200:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5182:6:27"},"nodeType":"YulFunctionCall","src":"5182:21:27"},"nodeType":"YulExpressionStatement","src":"5182:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5223:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5234:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5219:3:27"},"nodeType":"YulFunctionCall","src":"5219:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"5239:2:27","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5212:6:27"},"nodeType":"YulFunctionCall","src":"5212:30:27"},"nodeType":"YulExpressionStatement","src":"5212:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5262:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5273:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5258:3:27"},"nodeType":"YulFunctionCall","src":"5258:18:27"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"5278:34:27","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5251:6:27"},"nodeType":"YulFunctionCall","src":"5251:62:27"},"nodeType":"YulExpressionStatement","src":"5251:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5333:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5344:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5329:3:27"},"nodeType":"YulFunctionCall","src":"5329:18:27"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"5349:5:27","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5322:6:27"},"nodeType":"YulFunctionCall","src":"5322:33:27"},"nodeType":"YulExpressionStatement","src":"5322:33:27"},{"nodeType":"YulAssignment","src":"5364:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5376:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5387:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5372:3:27"},"nodeType":"YulFunctionCall","src":"5372:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5364:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5149:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5163:4:27","type":""}],"src":"4998:399:27"},{"body":{"nodeType":"YulBlock","src":"5576:228:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5593:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5604:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5586:6:27"},"nodeType":"YulFunctionCall","src":"5586:21:27"},"nodeType":"YulExpressionStatement","src":"5586:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5627:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5638:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5623:3:27"},"nodeType":"YulFunctionCall","src":"5623:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"5643:2:27","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5616:6:27"},"nodeType":"YulFunctionCall","src":"5616:30:27"},"nodeType":"YulExpressionStatement","src":"5616:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5666:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5677:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5662:3:27"},"nodeType":"YulFunctionCall","src":"5662:18:27"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"5682:34:27","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5655:6:27"},"nodeType":"YulFunctionCall","src":"5655:62:27"},"nodeType":"YulExpressionStatement","src":"5655:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5737:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5748:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5733:3:27"},"nodeType":"YulFunctionCall","src":"5733:18:27"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"5753:8:27","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5726:6:27"},"nodeType":"YulFunctionCall","src":"5726:36:27"},"nodeType":"YulExpressionStatement","src":"5726:36:27"},{"nodeType":"YulAssignment","src":"5771:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5783:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5794:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5779:3:27"},"nodeType":"YulFunctionCall","src":"5779:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5771:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5553:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5567:4:27","type":""}],"src":"5402:402:27"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n}","id":27,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c391906106c4565b60405180910390f35b6100df6100da366004610735565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f36600461075f565b61024a565b604051601281526020016100c3565b6100df610131366004610735565b61026e565b6100f361014436600461079b565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df610175366004610735565b61029f565b6100df610188366004610735565b61031f565b6100f361019b3660046107bd565b61032d565b6060600380546101af906107f0565b80601f01602080910402602001604051908101604052809291908181526020018280546101db906107f0565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b919061082a565b610358565b6060600480546101af906107f0565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066b90849061082a565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b600060208083528351808285015260005b818110156106f1578581018301518582016040015282016106d5565b81811115610703576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461073057600080fd5b919050565b6000806040838503121561074857600080fd5b61075183610719565b946020939093013593505050565b60008060006060848603121561077457600080fd5b61077d84610719565b925061078b60208501610719565b9150604084013590509250925092565b6000602082840312156107ad57600080fd5b6107b682610719565b9392505050565b600080604083850312156107d057600080fd5b6107d983610719565b91506107e760208401610719565b90509250929050565b600181811c9082168061080457607f821691505b60208210810361082457634e487b7160e01b600052602260045260246000fd5b50919050565b6000821982111561084b57634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220d2f3acf5a1d43c7e2ea899a342c9ad586816f4a218c7e4306ab32d2eca132fe364736f6c634300080f0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x6C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x75F JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x79B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x735 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x7BD JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x7F0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x82A JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x7F0 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66B SWAP1 DUP5 SWAP1 PUSH2 0x82A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6F1 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x6D5 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x703 JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x730 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x751 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x774 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x77D DUP5 PUSH2 0x719 JUMP JUMPDEST SWAP3 POP PUSH2 0x78B PUSH1 0x20 DUP6 ADD PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x7AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7B6 DUP3 PUSH2 0x719 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7D9 DUP4 PUSH2 0x719 JUMP JUMPDEST SWAP2 POP PUSH2 0x7E7 PUSH1 0x20 DUP5 ADD PUSH2 0x719 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x804 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x824 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x84B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD2 RETURN 0xAC CREATE2 LOG1 0xD4 EXTCODECOPY PUSH31 0x2EA899A342C9AD586816F4A218C7E4306AB32D2ECA132FE364736F6C634300 ADDMOD 0xF STOP CALLER ","sourceMap":"1403:11951:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:27;;1211:22;1193:41;;1181:2;1166:18;4433:197:5;1053:187:27;3244:106:5;3331:12;;3244:106;;;1391:25:27;;;1379:2;1364:18;3244:106:5;1245:177:27;5192:286:5;;;;;;:::i;:::-;;:::i;3093:91::-;;;3175:2;1902:36:27;;1890:2;1875:18;3093:91:5;1760:184:27;5873:234:5;;;;;;:::i;:::-;;:::i;3408:125::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:5;3482:7;3508:18;;;;;;;;;;;;3408:125;2367:102;;;:::i;6594:427::-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;3976:149::-;;;;;;:::i;:::-;;:::i;2156:98::-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:12;4570:32:5;719:10:12;4586:7:5;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:5;;4433:197;-1:-1:-1;;;4433:197:5:o;5192:286::-;5319:4;719:10:12;5375:38:5;5391:4;719:10:12;5406:6:5;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:5;;5192:286;-1:-1:-1;;;;5192:286:5:o;5873:234::-;5961:4;719:10:12;6015:64:5;719:10:12;6031:7:5;6068:10;6040:25;719:10:12;6031:7:5;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;2367:102::-;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;6687:4;719:10:12;6687:4:5;6768:25;719:10:12;6785:7:5;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:5;;3222:2:27;6803:85:5;;;3204:21:27;3261:2;3241:18;;;3234:30;3300:34;3280:18;;;3273:62;-1:-1:-1;;;3351:18:27;;;3344:35;3396:19;;6803:85:5;;;;;;;;;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;3729:189::-;3808:4;719:10:12;3862:28:5;719:10:12;3879:2:5;3883:6;3862:9;:28::i;3976:149::-;-1:-1:-1;;;;;4091:18:5;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149::o;10847:370::-;-1:-1:-1;;;;;10978:19:5;;10970:68;;;;-1:-1:-1;;;10970:68:5;;3628:2:27;10970:68:5;;;3610:21:27;3667:2;3647:18;;;3640:30;3706:34;3686:18;;;3679:62;-1:-1:-1;;;3757:18:27;;;3750:34;3801:19;;10970:68:5;3426:400:27;10970:68:5;-1:-1:-1;;;;;11056:21:5;;11048:68;;;;-1:-1:-1;;;11048:68:5;;4033:2:27;11048:68:5;;;4015:21:27;4072:2;4052:18;;;4045:30;4111:34;4091:18;;;4084:62;-1:-1:-1;;;4162:18:27;;;4155:32;4204:19;;11048:68:5;3831:398:27;11048:68:5;-1:-1:-1;;;;;11127:18:5;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11178:32;;1391:25:27;;;11178:32:5;;1364:18:27;11178:32:5;;;;;;;10847:370;;;:::o;11498:441::-;11628:24;11655:25;11665:5;11672:7;11655:9;:25::i;:::-;11628:52;;-1:-1:-1;;11694:16:5;:37;11690:243;;11775:6;11755:16;:26;;11747:68;;;;-1:-1:-1;;;11747:68:5;;4436:2:27;11747:68:5;;;4418:21:27;4475:2;4455:18;;;4448:30;4514:31;4494:18;;;4487:59;4563:18;;11747:68:5;4234:353:27;11747:68:5;11857:51;11866:5;11873:7;11901:6;11882:16;:25;11857:8;:51::i;:::-;11618:321;11498:441;;;:::o;7475:651::-;-1:-1:-1;;;;;7601:18:5;;7593:68;;;;-1:-1:-1;;;7593:68:5;;4794:2:27;7593:68:5;;;4776:21:27;4833:2;4813:18;;;4806:30;4872:34;4852:18;;;4845:62;-1:-1:-1;;;4923:18:27;;;4916:35;4968:19;;7593:68:5;4592:401:27;7593:68:5;-1:-1:-1;;;;;7679:16:5;;7671:64;;;;-1:-1:-1;;;7671:64:5;;5200:2:27;7671:64:5;;;5182:21:27;5239:2;5219:18;;;5212:30;5278:34;5258:18;;;5251:62;-1:-1:-1;;;5329:18:27;;;5322:33;5372:19;;7671:64:5;4998:399:27;7671:64:5;-1:-1:-1;;;;;7817:15:5;;7795:19;7817:15;;;;;;;;;;;7850:21;;;;7842:72;;;;-1:-1:-1;;;7842:72:5;;5604:2:27;7842:72:5;;;5586:21:27;5643:2;5623:18;;;5616:30;5682:34;5662:18;;;5655:62;-1:-1:-1;;;5733:18:27;;;5726:36;5779:19;;7842:72:5;5402:402:27;7842:72:5;-1:-1:-1;;;;;7948:15:5;;;:9;:15;;;;;;;;;;;7966:20;;;7948:38;;8006:13;;;;;;;;:23;;7980:6;;7948:9;8006:23;;7980:6;;8006:23;:::i;:::-;;;;;;;;8060:2;-1:-1:-1;;;;;8045:26:5;8054:4;-1:-1:-1;;;;;8045:26:5;;8064:6;8045:26;;;;1391:25:27;;1379:2;1364:18;;1245:177;8045:26:5;;;;;;;;8082:37;12523:121;14:597:27;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:27;574:15;-1:-1:-1;;570:29:27;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:27:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:27;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:27:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:186::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;2100:29;2119:9;2100:29;:::i;:::-;2090:39;1949:186;-1:-1:-1;;;1949:186:27:o;2140:260::-;2208:6;2216;2269:2;2257:9;2248:7;2244:23;2240:32;2237:52;;;2285:1;2282;2275:12;2237:52;2308:29;2327:9;2308:29;:::i;:::-;2298:39;;2356:38;2390:2;2379:9;2375:18;2356:38;:::i;:::-;2346:48;;2140:260;;;;;:::o;2405:380::-;2484:1;2480:12;;;;2527;;;2548:61;;2602:4;2594:6;2590:17;2580:27;;2548:61;2655:2;2647:6;2644:14;2624:18;2621:38;2618:161;;2701:10;2696:3;2692:20;2689:1;2682:31;2736:4;2733:1;2726:15;2764:4;2761:1;2754:15;2618:161;;2405:380;;;:::o;2790:225::-;2830:3;2861:1;2857:6;2854:1;2851:13;2848:136;;;2906:10;2901:3;2897:20;2894:1;2887:31;2941:4;2938:1;2931:15;2969:4;2966:1;2959:15;2848:136;-1:-1:-1;3000:9:27;;2790:225::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x35cee07c3e7af2a8519a396e15387ca497061bb84a72200c65b0a12a3126c461\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68f1d6ba548c796f8f31e0a445175f8a8d486891a59010e13b4f9b37cc5d50c2\",\"dweb:/ipfs/QmZRjUcHU8RoarhfrqTUeUMye2yFgpoJSBPDHeNcm9YXtk\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol":{"ERC20Burnable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x35cee07c3e7af2a8519a396e15387ca497061bb84a72200c65b0a12a3126c461\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68f1d6ba548c796f8f31e0a445175f8a8d486891a59010e13b4f9b37cc5d50c2\",\"dweb:/ipfs/QmZRjUcHU8RoarhfrqTUeUMye2yFgpoJSBPDHeNcm9YXtk\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol":{"ERC20Capped":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"cap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","cap()":"355274ea","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that adds a cap to the supply of tokens.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"constructor\":{\"details\":\"Sets the value of the `cap`. This value is immutable, it can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":\"ERC20Capped\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x35cee07c3e7af2a8519a396e15387ca497061bb84a72200c65b0a12a3126c461\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68f1d6ba548c796f8f31e0a445175f8a8d486891a59010e13b4f9b37cc5d50c2\",\"dweb:/ipfs/QmZRjUcHU8RoarhfrqTUeUMye2yFgpoJSBPDHeNcm9YXtk\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":{\"keccak256\":\"0x3fe04ed1daf0f12454333fde982a25b103860d8a010dd5d8479b83ebf1dfb788\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8322152771e94c9e28a3bd9e7c9d5dd4fdd00ae214f95915962a6638d8dfc7d6\",\"dweb:/ipfs/QmaXJvF3UjRHacx3nPgt94DwAuXCkEoz6fS7MLr2jbuJyW\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol":{"ERC20Permit":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the {EIP712} domain separator using the `name` parameter, and setting `version` to `\\\"1\\\"`. It's a good idea to use the same `name` that is defined as the ERC20 token name.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"stateVariables\":{\"_PERMIT_TYPEHASH_DEPRECATED_SLOT\":{\"custom:oz-renamed-from\":\"_PERMIT_TYPEHASH\",\"details\":\"In previous versions `_PERMIT_TYPEHASH` was declared as `immutable`. However, to ensure consistency with the upgradeable transpiler, we will continue to reserve a slot.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x35cee07c3e7af2a8519a396e15387ca497061bb84a72200c65b0a12a3126c461\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68f1d6ba548c796f8f31e0a445175f8a8d486891a59010e13b4f9b37cc5d50c2\",\"dweb:/ipfs/QmZRjUcHU8RoarhfrqTUeUMye2yFgpoJSBPDHeNcm9YXtk\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\":{\"keccak256\":\"0x07536242e24ee7067295d32c08e495a33e605f3c52f8ee4ec3bdcb7a351313d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01f99dbf2ce567a64a03fc4d38b76d64d52bf1a2302922971446b1cf777220ec\",\"dweb:/ipfs/QmSiotbcG2KMuXfbKyKTcHu9ujBp67jmbULJyYLDpsrpC1\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900\",\"dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2\"]},\"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba\",\"dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol":{"IERC20Permit":{"abi":[{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Counters.sol":{"Counters":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202519b698b95a55717c679529cd2e9683233be19b205ff0aac55dbf49d6009ca564736f6c634300080f0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 NOT 0xB6 SWAP9 0xB9 GAS SSTORE PUSH18 0x7C679529CD2E9683233BE19B205FF0AAC55D 0xBF 0x49 0xD6 STOP SWAP13 0xA5 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ","sourceMap":"424:971:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;424:971:13;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202519b698b95a55717c679529cd2e9683233be19b205ff0aac55dbf49d6009ca564736f6c634300080f0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x25 NOT 0xB6 SWAP9 0xB9 GAS SSTORE PUSH18 0x7C679529CD2E9683233BE19B205FF0AAC55D 0xBF 0x49 0xD6 STOP SWAP13 0xA5 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ","sourceMap":"424:971:13:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented, decremented or reset. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids. Include with `using Counters for Counters.Counter;`\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Counters\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Counters.sol\":\"Counters\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220135f000899299ab267caad295b37c7091712213d7616d034a45fd1b0833dc69e64736f6c634300080f0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0x5F STOP ADDMOD SWAP10 0x29 SWAP11 0xB2 PUSH8 0xCAAD295B37C70917 SLT 0x21 RETURNDATASIZE PUSH23 0x16D034A45FD1B0833DC69E64736F6C634300080F003300 ","sourceMap":"161:2235:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;161:2235:14;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220135f000899299ab267caad295b37c7091712213d7616d034a45fd1b0833dc69e64736f6c634300080f0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0x5F STOP ADDMOD SWAP10 0x29 SWAP11 0xB2 PUSH8 0xCAAD295B37C70917 SLT 0x21 RETURNDATASIZE PUSH23 0x16D034A45FD1B0833DC69E64736F6C634300080F003300 ","sourceMap":"161:2235:14:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/ECDSA.sol":{"ECDSA":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207ed746b3cbb329b9308d76d8b847bbd0feb9c6e8c055ce1632d96483a6843a0164736f6c634300080f0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0xD746B3CBB329B9308D76D8B847BBD0FEB9C6E8C055CE1632D96483A6843A01 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ","sourceMap":"369:8375:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;369:8375:15;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207ed746b3cbb329b9308d76d8b847bbd0feb9c6e8c055ce1632d96483a6843a0164736f6c634300080f0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH31 0xD746B3CBB329B9308D76D8B847BBD0FEB9C6E8C055CE1632D96483A6843A01 PUSH5 0x736F6C6343 STOP ADDMOD 0xF STOP CALLER ","sourceMap":"369:8375:15:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Elliptic Curve Digital Signature Algorithm (ECDSA) operations. These functions can be used to verify that a message was signed by the holder of the private keys of a given address.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":\"ECDSA\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900\",\"dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol":{"EIP712":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-712[EIP 712] is a standard for hashing and signing of typed structured data. The encoding specified in the EIP is very generic, and such a generic implementation in Solidity is not feasible, thus this contract does not implement the encoding itself. Protocols need to implement the type-specific encoding they need in their contracts using a combination of `abi.encode` and `keccak256`. This contract implements the EIP 712 domain separator ({_domainSeparatorV4}) that is used as part of the encoding scheme, and the final step of the encoding to obtain the message digest that is then signed via ECDSA ({_hashTypedDataV4}). The implementation of the domain separator was designed to be as efficient as possible while still properly updating the chain id to protect against replay attacks on an eventual fork of the chain. NOTE: This contract implements the version of the encoding known as \\\"v4\\\", as implemented by the JSON RPC method https://docs.metamask.io/guide/signing-data.html[`eth_signTypedDataV4` in MetaMask]. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the domain separator and parameter caches. The meaning of `name` and `version` is specified in https://eips.ethereum.org/EIPS/eip-712#definition-of-domainseparator[EIP 712]: - `name`: the user readable name of the signing domain, i.e. the name of the DApp or the protocol. - `version`: the current major version of the signing domain. NOTE: These parameters cannot be changed except through a xref:learn::upgrading-smart-contracts.adoc[smart contract upgrade].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol\":\"EIP712\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900\",\"dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2\"]},\"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba\",\"dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/structs/EnumerableMap.sol":{"EnumerableMap":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122042b546103e7a225f8d2f80f52daff02a04838992afb5708f6e1c1e1cc502d4b664736f6c634300080f0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP 0xB5 CHAINID LT RETURNDATACOPY PUSH27 0x225F8D2F80F52DAFF02A04838992AFB5708F6E1C1E1CC502D4B664 PUSH20 0x6F6C634300080F00330000000000000000000000 ","sourceMap":"1525:15851:19:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1525:15851:19;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122042b546103e7a225f8d2f80f52daff02a04838992afb5708f6e1c1e1cc502d4b664736f6c634300080f0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TIMESTAMP 0xB5 CHAINID LT RETURNDATACOPY PUSH27 0x225F8D2F80F52DAFF02A04838992AFB5708F6E1C1E1CC502D4B664 PUSH20 0x6F6C634300080F00330000000000000000000000 ","sourceMap":"1525:15851:19:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing an enumerable variant of Solidity's https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`] type. Maps have the following properties: - Entries are added, removed, and checked for existence in constant time (O(1)). - Entries are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableMap for EnumerableMap.UintToAddressMap;     // Declare a set state variable     EnumerableMap.UintToAddressMap private myMap; } ``` The following map types are supported: - `uint256 -> address` (`UintToAddressMap`) since v3.0.0 - `address -> uint256` (`AddressToUintMap`) since v4.6.0 - `bytes32 -> bytes32` (`Bytes32ToBytes32`) since v4.6.0 - `uint256 -> uint256` (`UintToUintMap`) since v4.7.0 - `bytes32 -> uint256` (`Bytes32ToUintMap`) since v4.7.0 [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableMap, you can either remove all elements one by one or create a fresh instance using an array of EnumerableMap. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":\"EnumerableMap\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":{\"keccak256\":\"0x1b8ac5ffdb80c20c9188267455197d9dcfeef46379aeb1b3a6cc622e879895ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e531d0792e4774e2edabb34a5bed8e96ac80a84e08ebd5ebf7a0d15185e4f37\",\"dweb:/ipfs/QmPwWjhL1phGiGfP5R8Kzp3bQuVigkornTcSy9KaQnou1E\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122012b5dd5bfb657e7150fcf7c20340f2167c82169d1a0e71b59d55c0d6721bdb9064736f6c634300080f0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0xB5 0xDD JUMPDEST 0xFB PUSH6 0x7E7150FCF7C2 SUB BLOCKHASH CALLCODE AND PUSH29 0x82169D1A0E71B59D55C0D6721BDB9064736F6C634300080F0033000000 ","sourceMap":"1228:11454:20:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1228:11454:20;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122012b5dd5bfb657e7150fcf7c20340f2167c82169d1a0e71b59d55c0d6721bdb9064736f6c634300080f0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLT 0xB5 0xDD JUMPDEST 0xFB PUSH6 0x7E7150FCF7C2 SUB BLOCKHASH CALLCODE AND PUSH29 0x82169D1A0E71B59D55C0D6721BDB9064736F6C634300080F0033000000 ","sourceMap":"1228:11454:20:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ====  Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable.  See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.  In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]}},\"version\":1}"}},"contracts/BEP20/Administration.sol":{"Administration":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"RESTRICTOR_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TRANSACTION_FEE_SETTER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TRANSFER_LIMIT_SETTER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","MINTER_ROLE()":"d5391393","RESTRICTOR_ROLE()":"51bcee27","TRANSACTION_FEE_SETTER()":"0ecbd033","TRANSFER_LIMIT_SETTER()":"3e0b2cda","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RESTRICTOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRANSACTION_FEE_SETTER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRANSFER_LIMIT_SETTER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BEP20/Administration.sol\":\"Administration\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x5b35d8e68aeaccc685239bd9dd79b9ba01a0357930f8a3307ab85511733d9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba8eb2d22f9321bd4660f6617c181d9611ff30a9b089408b8c6e2216d6d5cdc5\",\"dweb:/ipfs/QmTSJvhjHfnUV1j4hsqDv8PmLvGBLRs9gHLjTUXrUJ5Y9q\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]},\"contracts/BEP20/Administration.sol\":{\"keccak256\":\"0x5d0575eac94ef4cd012eadde236909f398cd173ebe001eba2eeead410d8ae103\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41d0dd1e3975ece95ee437b8c5ba9635c71a36b3d1432138770765c4d45319e9\",\"dweb:/ipfs/QmXAnmX4ddRy4i5LSa2SxcXgkJpPEoWp43FyHUh8CaqbxJ\"]}},\"version\":1}"}},"contracts/BEP20/BLBToken.sol":{"BLBToken":{"abi":[{"inputs":[{"internalType":"uint256","name":"_monthlyTime","type":"uint256"},{"internalType":"address","name":"initialAdmin","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"addr","type":"address"}],"name":"District","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"addr","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Restrict","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"fraction","type":"uint256"}],"name":"SetPeriodTransferLimit","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_feeAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_feeFraction","type":"uint256"},{"indexed":false,"internalType":"address","name":"_feeReceiver","type":"address"}],"name":"SetTransactionFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"RESTRICTOR_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TRANSACTION_FEE_SETTER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TRANSFER_LIMIT_SETTER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"canSpend","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"cap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"district","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"feeDetails","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"isRestricted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"accounts","type":"address[]"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mintBatch","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"monthlyLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"restrict","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"fraction","type":"uint256"}],"name":"setPeriodTransferLimit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_feeAmount","type":"uint256"},{"internalType":"uint256","name":"_feeFraction","type":"uint256"},{"internalType":"address","name":"_feeReceiver","type":"address"}],"name":"setTransactionFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"transferingAmount","type":"uint256"}],"name":"transactionFee","outputs":[{"internalType":"uint256","name":"fee","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_1460":{"entryPoint":null,"id":1460,"parameterSlots":1,"returnSlots":0},"@_1566":{"entryPoint":null,"id":1566,"parameterSlots":1,"returnSlots":0},"@_2523":{"entryPoint":null,"id":2523,"parameterSlots":2,"returnSlots":0},"@_4456":{"entryPoint":null,"id":4456,"parameterSlots":2,"returnSlots":0},"@_4800":{"entryPoint":null,"id":4800,"parameterSlots":1,"returnSlots":0},"@_700":{"entryPoint":null,"id":700,"parameterSlots":2,"returnSlots":0},"@_add_3807":{"entryPoint":997,"id":3807,"parameterSlots":2,"returnSlots":1},"@_buildDomainSeparator_2579":{"entryPoint":null,"id":2579,"parameterSlots":3,"returnSlots":1},"@_contains_3910":{"entryPoint":null,"id":3910,"parameterSlots":2,"returnSlots":1},"@_grantRole_287":{"entryPoint":800,"id":287,"parameterSlots":2,"returnSlots":0},"@_grantRole_419":{"entryPoint":733,"id":419,"parameterSlots":2,"returnSlots":0},"@_msgSender_1744":{"entryPoint":null,"id":1744,"parameterSlots":0,"returnSlots":1},"@add_4093":{"entryPoint":965,"id":4093,"parameterSlots":2,"returnSlots":1},"@decimals_730":{"entryPoint":728,"id":730,"parameterSlots":0,"returnSlots":1},"@hasRole_79":{"entryPoint":null,"id":79,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address_fromMemory":{"entryPoint":1079,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_stringliteral_073f3193e2b9c9099973df1adea790edf33994edcd3f57beae2487f3c5bd8828__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_exp_helper":{"entryPoint":1164,"id":null,"parameterSlots":2,"returnSlots":2},"checked_exp_t_uint256_t_uint8":{"entryPoint":1417,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":1237,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":1434,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":1550,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":1632,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":1490,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":1142,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":1468,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5620:27","statements":[{"nodeType":"YulBlock","src":"6:3:27","statements":[]},{"body":{"nodeType":"YulBlock","src":"112:253:27","statements":[{"body":{"nodeType":"YulBlock","src":"158:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"167:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"170:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"160:6:27"},"nodeType":"YulFunctionCall","src":"160:12:27"},"nodeType":"YulExpressionStatement","src":"160:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"133:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"142:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"129:3:27"},"nodeType":"YulFunctionCall","src":"129:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"154:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"125:3:27"},"nodeType":"YulFunctionCall","src":"125:32:27"},"nodeType":"YulIf","src":"122:52:27"},{"nodeType":"YulAssignment","src":"183:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"199:9:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"193:5:27"},"nodeType":"YulFunctionCall","src":"193:16:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"183:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"218:38:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"241:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"252:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"237:3:27"},"nodeType":"YulFunctionCall","src":"237:18:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"231:5:27"},"nodeType":"YulFunctionCall","src":"231:25:27"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"222:5:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"319:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"328:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"331:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"321:6:27"},"nodeType":"YulFunctionCall","src":"321:12:27"},"nodeType":"YulExpressionStatement","src":"321:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"278:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"289:5:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"304:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"309:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"300:3:27"},"nodeType":"YulFunctionCall","src":"300:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"313:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"296:3:27"},"nodeType":"YulFunctionCall","src":"296:19:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"285:3:27"},"nodeType":"YulFunctionCall","src":"285:31:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"275:2:27"},"nodeType":"YulFunctionCall","src":"275:42:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"268:6:27"},"nodeType":"YulFunctionCall","src":"268:50:27"},"nodeType":"YulIf","src":"265:70:27"},{"nodeType":"YulAssignment","src":"344:15:27","value":{"name":"value","nodeType":"YulIdentifier","src":"354:5:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"344:6:27"}]}]},"name":"abi_decode_tuple_t_uint256t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"70:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"81:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"93:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"101:6:27","type":""}],"src":"14:351:27"},{"body":{"nodeType":"YulBlock","src":"402:95:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"419:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"426:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"431:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"422:3:27"},"nodeType":"YulFunctionCall","src":"422:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"412:6:27"},"nodeType":"YulFunctionCall","src":"412:31:27"},"nodeType":"YulExpressionStatement","src":"412:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"459:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"462:4:27","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"452:6:27"},"nodeType":"YulFunctionCall","src":"452:15:27"},"nodeType":"YulExpressionStatement","src":"452:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"483:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"486:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"476:6:27"},"nodeType":"YulFunctionCall","src":"476:15:27"},"nodeType":"YulExpressionStatement","src":"476:15:27"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"370:127:27"},{"body":{"nodeType":"YulBlock","src":"566:358:27","statements":[{"nodeType":"YulVariableDeclaration","src":"576:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"591:1:27","type":"","value":"1"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"580:7:27","type":""}]},{"nodeType":"YulAssignment","src":"601:16:27","value":{"name":"power_1","nodeType":"YulIdentifier","src":"610:7:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"601:5:27"}]},{"nodeType":"YulAssignment","src":"626:13:27","value":{"name":"_base","nodeType":"YulIdentifier","src":"634:5:27"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"626:4:27"}]},{"body":{"nodeType":"YulBlock","src":"690:228:27","statements":[{"body":{"nodeType":"YulBlock","src":"735:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"737:16:27"},"nodeType":"YulFunctionCall","src":"737:18:27"},"nodeType":"YulExpressionStatement","src":"737:18:27"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"710:4:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"724:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"720:3:27"},"nodeType":"YulFunctionCall","src":"720:6:27"},{"name":"base","nodeType":"YulIdentifier","src":"728:4:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"716:3:27"},"nodeType":"YulFunctionCall","src":"716:17:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"707:2:27"},"nodeType":"YulFunctionCall","src":"707:27:27"},"nodeType":"YulIf","src":"704:53:27"},{"body":{"nodeType":"YulBlock","src":"796:29:27","statements":[{"nodeType":"YulAssignment","src":"798:25:27","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"811:5:27"},{"name":"base","nodeType":"YulIdentifier","src":"818:4:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"807:3:27"},"nodeType":"YulFunctionCall","src":"807:16:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"798:5:27"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"777:8:27"},{"name":"power_1","nodeType":"YulIdentifier","src":"787:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"773:3:27"},"nodeType":"YulFunctionCall","src":"773:22:27"},"nodeType":"YulIf","src":"770:55:27"},{"nodeType":"YulAssignment","src":"838:23:27","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"850:4:27"},{"name":"base","nodeType":"YulIdentifier","src":"856:4:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"846:3:27"},"nodeType":"YulFunctionCall","src":"846:15:27"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"838:4:27"}]},{"nodeType":"YulAssignment","src":"874:34:27","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"890:7:27"},{"name":"exponent","nodeType":"YulIdentifier","src":"899:8:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"886:3:27"},"nodeType":"YulFunctionCall","src":"886:22:27"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"874:8:27"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"659:8:27"},{"name":"power_1","nodeType":"YulIdentifier","src":"669:7:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"656:2:27"},"nodeType":"YulFunctionCall","src":"656:21:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"678:3:27","statements":[]},"pre":{"nodeType":"YulBlock","src":"652:3:27","statements":[]},"src":"648:270:27"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nodeType":"YulTypedName","src":"530:5:27","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"537:8:27","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"550:5:27","type":""},{"name":"base","nodeType":"YulTypedName","src":"557:4:27","type":""}],"src":"502:422:27"},{"body":{"nodeType":"YulBlock","src":"988:747:27","statements":[{"body":{"nodeType":"YulBlock","src":"1026:52:27","statements":[{"nodeType":"YulAssignment","src":"1040:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1049:1:27","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"1040:5:27"}]},{"nodeType":"YulLeave","src":"1063:5:27"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"1008:8:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1001:6:27"},"nodeType":"YulFunctionCall","src":"1001:16:27"},"nodeType":"YulIf","src":"998:80:27"},{"body":{"nodeType":"YulBlock","src":"1111:52:27","statements":[{"nodeType":"YulAssignment","src":"1125:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1134:1:27","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"1125:5:27"}]},{"nodeType":"YulLeave","src":"1148:5:27"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"1097:4:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1090:6:27"},"nodeType":"YulFunctionCall","src":"1090:12:27"},"nodeType":"YulIf","src":"1087:76:27"},{"cases":[{"body":{"nodeType":"YulBlock","src":"1199:52:27","statements":[{"nodeType":"YulAssignment","src":"1213:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1222:1:27","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"1213:5:27"}]},{"nodeType":"YulLeave","src":"1236:5:27"}]},"nodeType":"YulCase","src":"1192:59:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1197:1:27","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"1267:123:27","statements":[{"body":{"nodeType":"YulBlock","src":"1302:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"1304:16:27"},"nodeType":"YulFunctionCall","src":"1304:18:27"},"nodeType":"YulExpressionStatement","src":"1304:18:27"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"1287:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"1297:3:27","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1284:2:27"},"nodeType":"YulFunctionCall","src":"1284:17:27"},"nodeType":"YulIf","src":"1281:43:27"},{"nodeType":"YulAssignment","src":"1337:25:27","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"1350:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"1360:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1346:3:27"},"nodeType":"YulFunctionCall","src":"1346:16:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"1337:5:27"}]},{"nodeType":"YulLeave","src":"1375:5:27"}]},"nodeType":"YulCase","src":"1260:130:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1265:1:27","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"1179:4:27"},"nodeType":"YulSwitch","src":"1172:218:27"},{"body":{"nodeType":"YulBlock","src":"1488:70:27","statements":[{"nodeType":"YulAssignment","src":"1502:28:27","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"1515:4:27"},{"name":"exponent","nodeType":"YulIdentifier","src":"1521:8:27"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"1511:3:27"},"nodeType":"YulFunctionCall","src":"1511:19:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"1502:5:27"}]},{"nodeType":"YulLeave","src":"1543:5:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"1412:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"1418:2:27","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1409:2:27"},"nodeType":"YulFunctionCall","src":"1409:12:27"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"1426:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"1436:2:27","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1423:2:27"},"nodeType":"YulFunctionCall","src":"1423:16:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1405:3:27"},"nodeType":"YulFunctionCall","src":"1405:35:27"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"1449:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"1455:3:27","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1446:2:27"},"nodeType":"YulFunctionCall","src":"1446:13:27"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"1464:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"1474:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1461:2:27"},"nodeType":"YulFunctionCall","src":"1461:16:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1442:3:27"},"nodeType":"YulFunctionCall","src":"1442:36:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1402:2:27"},"nodeType":"YulFunctionCall","src":"1402:77:27"},"nodeType":"YulIf","src":"1399:159:27"},{"nodeType":"YulVariableDeclaration","src":"1567:57:27","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"1609:4:27"},{"name":"exponent","nodeType":"YulIdentifier","src":"1615:8:27"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"1590:18:27"},"nodeType":"YulFunctionCall","src":"1590:34:27"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"1571:7:27","type":""},{"name":"base_1","nodeType":"YulTypedName","src":"1580:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1669:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"1671:16:27"},"nodeType":"YulFunctionCall","src":"1671:18:27"},"nodeType":"YulExpressionStatement","src":"1671:18:27"}]},"condition":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"1639:7:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1656:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1652:3:27"},"nodeType":"YulFunctionCall","src":"1652:6:27"},{"name":"base_1","nodeType":"YulIdentifier","src":"1660:6:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1648:3:27"},"nodeType":"YulFunctionCall","src":"1648:19:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1636:2:27"},"nodeType":"YulFunctionCall","src":"1636:32:27"},"nodeType":"YulIf","src":"1633:58:27"},{"nodeType":"YulAssignment","src":"1700:29:27","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"1713:7:27"},{"name":"base_1","nodeType":"YulIdentifier","src":"1722:6:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"1709:3:27"},"nodeType":"YulFunctionCall","src":"1709:20:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"1700:5:27"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"959:4:27","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"965:8:27","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"978:5:27","type":""}],"src":"929:806:27"},{"body":{"nodeType":"YulBlock","src":"1808:72:27","statements":[{"nodeType":"YulAssignment","src":"1818:56:27","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"1848:4:27"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"1858:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"1868:4:27","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1854:3:27"},"nodeType":"YulFunctionCall","src":"1854:19:27"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"1827:20:27"},"nodeType":"YulFunctionCall","src":"1827:47:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"1818:5:27"}]}]},"name":"checked_exp_t_uint256_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"1779:4:27","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"1785:8:27","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"1798:5:27","type":""}],"src":"1740:140:27"},{"body":{"nodeType":"YulBlock","src":"1937:116:27","statements":[{"body":{"nodeType":"YulBlock","src":"1996:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"1998:16:27"},"nodeType":"YulFunctionCall","src":"1998:18:27"},"nodeType":"YulExpressionStatement","src":"1998:18:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"1968:1:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1961:6:27"},"nodeType":"YulFunctionCall","src":"1961:9:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1954:6:27"},"nodeType":"YulFunctionCall","src":"1954:17:27"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"1976:1:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1987:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1983:3:27"},"nodeType":"YulFunctionCall","src":"1983:6:27"},{"name":"x","nodeType":"YulIdentifier","src":"1991:1:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"1979:3:27"},"nodeType":"YulFunctionCall","src":"1979:14:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1973:2:27"},"nodeType":"YulFunctionCall","src":"1973:21:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1950:3:27"},"nodeType":"YulFunctionCall","src":"1950:45:27"},"nodeType":"YulIf","src":"1947:71:27"},{"nodeType":"YulAssignment","src":"2027:20:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2042:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"2045:1:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2038:3:27"},"nodeType":"YulFunctionCall","src":"2038:9:27"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"2027:7:27"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"1916:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"1919:1:27","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"1925:7:27","type":""}],"src":"1885:168:27"},{"body":{"nodeType":"YulBlock","src":"2090:95:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2107:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2114:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2119:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2110:3:27"},"nodeType":"YulFunctionCall","src":"2110:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2100:6:27"},"nodeType":"YulFunctionCall","src":"2100:31:27"},"nodeType":"YulExpressionStatement","src":"2100:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2147:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2150:4:27","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2140:6:27"},"nodeType":"YulFunctionCall","src":"2140:15:27"},"nodeType":"YulExpressionStatement","src":"2140:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2171:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2174:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2164:6:27"},"nodeType":"YulFunctionCall","src":"2164:15:27"},"nodeType":"YulExpressionStatement","src":"2164:15:27"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"2058:127:27"},{"body":{"nodeType":"YulBlock","src":"2245:325:27","statements":[{"nodeType":"YulAssignment","src":"2255:22:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2269:1:27","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2272:4:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2265:3:27"},"nodeType":"YulFunctionCall","src":"2265:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2255:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"2286:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2316:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"2322:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2312:3:27"},"nodeType":"YulFunctionCall","src":"2312:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2290:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"2363:31:27","statements":[{"nodeType":"YulAssignment","src":"2365:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2379:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2387:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2375:3:27"},"nodeType":"YulFunctionCall","src":"2375:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2365:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2343:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2336:6:27"},"nodeType":"YulFunctionCall","src":"2336:26:27"},"nodeType":"YulIf","src":"2333:61:27"},{"body":{"nodeType":"YulBlock","src":"2453:111:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2474:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2481:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2486:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2477:3:27"},"nodeType":"YulFunctionCall","src":"2477:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2467:6:27"},"nodeType":"YulFunctionCall","src":"2467:31:27"},"nodeType":"YulExpressionStatement","src":"2467:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2518:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2521:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2511:6:27"},"nodeType":"YulFunctionCall","src":"2511:15:27"},"nodeType":"YulExpressionStatement","src":"2511:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2546:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2549:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2539:6:27"},"nodeType":"YulFunctionCall","src":"2539:15:27"},"nodeType":"YulExpressionStatement","src":"2539:15:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2409:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2432:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2440:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2429:2:27"},"nodeType":"YulFunctionCall","src":"2429:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2406:2:27"},"nodeType":"YulFunctionCall","src":"2406:38:27"},"nodeType":"YulIf","src":"2403:161:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2225:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2234:6:27","type":""}],"src":"2190:380:27"},{"body":{"nodeType":"YulBlock","src":"2631:65:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2648:1:27","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2651:3:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2641:6:27"},"nodeType":"YulFunctionCall","src":"2641:14:27"},"nodeType":"YulExpressionStatement","src":"2641:14:27"},{"nodeType":"YulAssignment","src":"2664:26:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2682:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2685:4:27","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2672:9:27"},"nodeType":"YulFunctionCall","src":"2672:18:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2664:4:27"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2614:3:27","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"2622:4:27","type":""}],"src":"2575:121:27"},{"body":{"nodeType":"YulBlock","src":"2782:464:27","statements":[{"body":{"nodeType":"YulBlock","src":"2815:425:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2829:11:27","value":{"kind":"number","nodeType":"YulLiteral","src":"2839:1:27","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2833:2:27","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2860:2:27"},{"name":"array","nodeType":"YulIdentifier","src":"2864:5:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2853:6:27"},"nodeType":"YulFunctionCall","src":"2853:17:27"},"nodeType":"YulExpressionStatement","src":"2853:17:27"},{"nodeType":"YulVariableDeclaration","src":"2883:31:27","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"2905:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"2909:4:27","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"2895:9:27"},"nodeType":"YulFunctionCall","src":"2895:19:27"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"2887:4:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2927:57:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2950:4:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2960:1:27","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"2967:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"2979:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2963:3:27"},"nodeType":"YulFunctionCall","src":"2963:19:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2956:3:27"},"nodeType":"YulFunctionCall","src":"2956:27:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2946:3:27"},"nodeType":"YulFunctionCall","src":"2946:38:27"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"2931:11:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"3021:23:27","statements":[{"nodeType":"YulAssignment","src":"3023:19:27","value":{"name":"data","nodeType":"YulIdentifier","src":"3038:4:27"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"3023:11:27"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"3003:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"3015:4:27","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3000:2:27"},"nodeType":"YulFunctionCall","src":"3000:20:27"},"nodeType":"YulIf","src":"2997:47:27"},{"nodeType":"YulVariableDeclaration","src":"3057:41:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3071:4:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3081:1:27","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"3088:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"3093:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3084:3:27"},"nodeType":"YulFunctionCall","src":"3084:12:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3077:3:27"},"nodeType":"YulFunctionCall","src":"3077:20:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3067:3:27"},"nodeType":"YulFunctionCall","src":"3067:31:27"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"3061:2:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3111:24:27","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"3124:11:27"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"3115:5:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"3209:21:27","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3218:5:27"},{"name":"_1","nodeType":"YulIdentifier","src":"3225:2:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"3211:6:27"},"nodeType":"YulFunctionCall","src":"3211:17:27"},"nodeType":"YulExpressionStatement","src":"3211:17:27"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3159:5:27"},{"name":"_2","nodeType":"YulIdentifier","src":"3166:2:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3156:2:27"},"nodeType":"YulFunctionCall","src":"3156:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3170:26:27","statements":[{"nodeType":"YulAssignment","src":"3172:22:27","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"3185:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"3192:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3181:3:27"},"nodeType":"YulFunctionCall","src":"3181:13:27"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"3172:5:27"}]}]},"pre":{"nodeType":"YulBlock","src":"3152:3:27","statements":[]},"src":"3148:82:27"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"2798:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"2803:2:27","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2795:2:27"},"nodeType":"YulFunctionCall","src":"2795:11:27"},"nodeType":"YulIf","src":"2792:448:27"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"2754:5:27","type":""},{"name":"len","nodeType":"YulTypedName","src":"2761:3:27","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"2766:10:27","type":""}],"src":"2701:545:27"},{"body":{"nodeType":"YulBlock","src":"3336:81:27","statements":[{"nodeType":"YulAssignment","src":"3346:65:27","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3361:4:27"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3379:1:27","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"3382:3:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3375:3:27"},"nodeType":"YulFunctionCall","src":"3375:11:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3392:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3388:3:27"},"nodeType":"YulFunctionCall","src":"3388:6:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3371:3:27"},"nodeType":"YulFunctionCall","src":"3371:24:27"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3367:3:27"},"nodeType":"YulFunctionCall","src":"3367:29:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3357:3:27"},"nodeType":"YulFunctionCall","src":"3357:40:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3403:1:27","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"3406:3:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3399:3:27"},"nodeType":"YulFunctionCall","src":"3399:11:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3354:2:27"},"nodeType":"YulFunctionCall","src":"3354:57:27"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"3346:4:27"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3313:4:27","type":""},{"name":"len","nodeType":"YulTypedName","src":"3319:3:27","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"3327:4:27","type":""}],"src":"3251:166:27"},{"body":{"nodeType":"YulBlock","src":"3518:1256:27","statements":[{"nodeType":"YulVariableDeclaration","src":"3528:24:27","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"3548:3:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3542:5:27"},"nodeType":"YulFunctionCall","src":"3542:10:27"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"3532:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"3595:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3597:16:27"},"nodeType":"YulFunctionCall","src":"3597:18:27"},"nodeType":"YulExpressionStatement","src":"3597:18:27"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3567:6:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3583:2:27","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"3587:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3579:3:27"},"nodeType":"YulFunctionCall","src":"3579:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"3591:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3575:3:27"},"nodeType":"YulFunctionCall","src":"3575:18:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3564:2:27"},"nodeType":"YulFunctionCall","src":"3564:30:27"},"nodeType":"YulIf","src":"3561:56:27"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3670:4:27"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3708:4:27"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"3702:5:27"},"nodeType":"YulFunctionCall","src":"3702:11:27"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"3676:25:27"},"nodeType":"YulFunctionCall","src":"3676:38:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"3716:6:27"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"3626:43:27"},"nodeType":"YulFunctionCall","src":"3626:97:27"},"nodeType":"YulExpressionStatement","src":"3626:97:27"},{"nodeType":"YulVariableDeclaration","src":"3732:18:27","value":{"kind":"number","nodeType":"YulLiteral","src":"3749:1:27","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"3736:9:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3759:23:27","value":{"kind":"number","nodeType":"YulLiteral","src":"3778:4:27","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"3763:11:27","type":""}]},{"nodeType":"YulAssignment","src":"3791:24:27","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"3804:11:27"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"3791:9:27"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"3861:656:27","statements":[{"nodeType":"YulVariableDeclaration","src":"3875:35:27","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3894:6:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3906:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3902:3:27"},"nodeType":"YulFunctionCall","src":"3902:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3890:3:27"},"nodeType":"YulFunctionCall","src":"3890:20:27"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"3879:7:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3923:49:27","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"3967:4:27"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"3937:29:27"},"nodeType":"YulFunctionCall","src":"3937:35:27"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"3927:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"3985:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"3994:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"3989:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"4072:172:27","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4097:6:27"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4115:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4120:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4111:3:27"},"nodeType":"YulFunctionCall","src":"4111:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4105:5:27"},"nodeType":"YulFunctionCall","src":"4105:26:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4090:6:27"},"nodeType":"YulFunctionCall","src":"4090:42:27"},"nodeType":"YulExpressionStatement","src":"4090:42:27"},{"nodeType":"YulAssignment","src":"4149:24:27","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4163:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"4171:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4159:3:27"},"nodeType":"YulFunctionCall","src":"4159:14:27"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4149:6:27"}]},{"nodeType":"YulAssignment","src":"4190:40:27","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4207:9:27"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"4218:11:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4203:3:27"},"nodeType":"YulFunctionCall","src":"4203:27:27"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"4190:9:27"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4019:1:27"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"4022:7:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4016:2:27"},"nodeType":"YulFunctionCall","src":"4016:14:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4031:28:27","statements":[{"nodeType":"YulAssignment","src":"4033:24:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4042:1:27"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"4045:11:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4038:3:27"},"nodeType":"YulFunctionCall","src":"4038:19:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4033:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"4012:3:27","statements":[]},"src":"4008:236:27"},{"body":{"nodeType":"YulBlock","src":"4292:166:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4310:43:27","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4337:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4342:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4333:3:27"},"nodeType":"YulFunctionCall","src":"4333:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4327:5:27"},"nodeType":"YulFunctionCall","src":"4327:26:27"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"4314:9:27","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"4377:6:27"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"4389:9:27"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4416:1:27","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"4419:6:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4412:3:27"},"nodeType":"YulFunctionCall","src":"4412:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"4428:3:27","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4408:3:27"},"nodeType":"YulFunctionCall","src":"4408:24:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4438:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4434:3:27"},"nodeType":"YulFunctionCall","src":"4434:6:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4404:3:27"},"nodeType":"YulFunctionCall","src":"4404:37:27"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4400:3:27"},"nodeType":"YulFunctionCall","src":"4400:42:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4385:3:27"},"nodeType":"YulFunctionCall","src":"4385:58:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4370:6:27"},"nodeType":"YulFunctionCall","src":"4370:74:27"},"nodeType":"YulExpressionStatement","src":"4370:74:27"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"4263:7:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"4272:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4260:2:27"},"nodeType":"YulFunctionCall","src":"4260:19:27"},"nodeType":"YulIf","src":"4257:201:27"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4478:4:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4492:1:27","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"4495:6:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4488:3:27"},"nodeType":"YulFunctionCall","src":"4488:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"4504:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4484:3:27"},"nodeType":"YulFunctionCall","src":"4484:22:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4471:6:27"},"nodeType":"YulFunctionCall","src":"4471:36:27"},"nodeType":"YulExpressionStatement","src":"4471:36:27"}]},"nodeType":"YulCase","src":"3854:663:27","value":{"kind":"number","nodeType":"YulLiteral","src":"3859:1:27","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"4534:234:27","statements":[{"nodeType":"YulVariableDeclaration","src":"4548:14:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4561:1:27","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4552:5:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"4597:67:27","statements":[{"nodeType":"YulAssignment","src":"4615:35:27","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4634:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"4639:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4630:3:27"},"nodeType":"YulFunctionCall","src":"4630:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4624:5:27"},"nodeType":"YulFunctionCall","src":"4624:26:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4615:5:27"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"4578:6:27"},"nodeType":"YulIf","src":"4575:89:27"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"4684:4:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4743:5:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"4750:6:27"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"4690:52:27"},"nodeType":"YulFunctionCall","src":"4690:67:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"4677:6:27"},"nodeType":"YulFunctionCall","src":"4677:81:27"},"nodeType":"YulExpressionStatement","src":"4677:81:27"}]},"nodeType":"YulCase","src":"4526:242:27","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"3834:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3842:2:27","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3831:2:27"},"nodeType":"YulFunctionCall","src":"3831:14:27"},"nodeType":"YulSwitch","src":"3824:944:27"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"3503:4:27","type":""},{"name":"src","nodeType":"YulTypedName","src":"3509:3:27","type":""}],"src":"3422:1352:27"},{"body":{"nodeType":"YulBlock","src":"4953:171:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4970:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4981:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4963:6:27"},"nodeType":"YulFunctionCall","src":"4963:21:27"},"nodeType":"YulExpressionStatement","src":"4963:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5004:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5015:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5000:3:27"},"nodeType":"YulFunctionCall","src":"5000:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"5020:2:27","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4993:6:27"},"nodeType":"YulFunctionCall","src":"4993:30:27"},"nodeType":"YulExpressionStatement","src":"4993:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5043:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5054:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5039:3:27"},"nodeType":"YulFunctionCall","src":"5039:18:27"},{"hexValue":"45524332304361707065643a206361702069732030","kind":"string","nodeType":"YulLiteral","src":"5059:23:27","type":"","value":"ERC20Capped: cap is 0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5032:6:27"},"nodeType":"YulFunctionCall","src":"5032:51:27"},"nodeType":"YulExpressionStatement","src":"5032:51:27"},{"nodeType":"YulAssignment","src":"5092:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5104:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5115:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5100:3:27"},"nodeType":"YulFunctionCall","src":"5100:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5092:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_073f3193e2b9c9099973df1adea790edf33994edcd3f57beae2487f3c5bd8828__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4930:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4944:4:27","type":""}],"src":"4779:345:27"},{"body":{"nodeType":"YulBlock","src":"5342:276:27","statements":[{"nodeType":"YulAssignment","src":"5352:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5364:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5375:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5360:3:27"},"nodeType":"YulFunctionCall","src":"5360:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5352:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5395:9:27"},{"name":"value0","nodeType":"YulIdentifier","src":"5406:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5388:6:27"},"nodeType":"YulFunctionCall","src":"5388:25:27"},"nodeType":"YulExpressionStatement","src":"5388:25:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5433:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5444:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5429:3:27"},"nodeType":"YulFunctionCall","src":"5429:18:27"},{"name":"value1","nodeType":"YulIdentifier","src":"5449:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5422:6:27"},"nodeType":"YulFunctionCall","src":"5422:34:27"},"nodeType":"YulExpressionStatement","src":"5422:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5476:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5487:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5472:3:27"},"nodeType":"YulFunctionCall","src":"5472:18:27"},{"name":"value2","nodeType":"YulIdentifier","src":"5492:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5465:6:27"},"nodeType":"YulFunctionCall","src":"5465:34:27"},"nodeType":"YulExpressionStatement","src":"5465:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5519:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5530:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5515:3:27"},"nodeType":"YulFunctionCall","src":"5515:18:27"},{"name":"value3","nodeType":"YulIdentifier","src":"5535:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5508:6:27"},"nodeType":"YulFunctionCall","src":"5508:34:27"},"nodeType":"YulExpressionStatement","src":"5508:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5562:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5573:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5558:3:27"},"nodeType":"YulFunctionCall","src":"5558:19:27"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"5583:6:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5599:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"5604:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5595:3:27"},"nodeType":"YulFunctionCall","src":"5595:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"5608:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5591:3:27"},"nodeType":"YulFunctionCall","src":"5591:19:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5579:3:27"},"nodeType":"YulFunctionCall","src":"5579:32:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5551:6:27"},"nodeType":"YulFunctionCall","src":"5551:61:27"},"nodeType":"YulExpressionStatement","src":"5551:61:27"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5279:9:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5290:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5298:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5306:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5314:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5322:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5333:4:27","type":""}],"src":"5129:489:27"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := mload(headStart)\n        let value := mload(add(headStart, 32))\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_073f3193e2b9c9099973df1adea790edf33994edcd3f57beae2487f3c5bd8828__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"ERC20Capped: cap is 0\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n}","id":27,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"6101a06040523480156200001257600080fd5b506040516200321a3803806200321a833981016040819052620000359162000437565b816040518060400160405280600f81526020016e109bdd5b991b195cdcc815dbdc9b19608a1b81525080604051806040016040528060018152602001603160f81b81525062000089620002d860201b60201c565b6200009690600a62000589565b620000a69063dbf0ee806200059a565b6040518060400160405280600f81526020016e109bdd5b991b195cdcc815dbdc9b19608a1b8152506040518060400160405280600381526020016221262160e91b8152508160039081620000fb919062000660565b5060046200010a828262000660565b50505060008111620001625760405162461bcd60e51b815260206004820152601560248201527f45524332304361707065643a2063617020697320300000000000000000000000604482015260640160405180910390fd5b60805281516020808401919091208251918301919091206101008290526101208190524660c0527f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f620001fa8184846040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b60a0523060e05261014052505042610160525050506101805262000220600082620002dd565b6200024c7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a682620002dd565b620002787fd0ac125722f4b4565ab5e91b234e50c4c6f541672aea816ba090a0ea349ed93f82620002dd565b620002a47fb24c1025622fe38445b605f5c1a9bb02be7f6522d24c8a159e5e47e62dbaaecf82620002dd565b620002d07f23ab0e580195340a5a67800cafa0615701edfa22f79534a52851336e3cf8376a82620002dd565b50506200072c565b601290565b620002f482826200032060201b6200103f1760201c565b60008281526008602090815260409091206200031b918390620010c5620003c5821b17901c565b505050565b60008281526007602090815260408083206001600160a01b038516845290915290205460ff16620003c15760008281526007602090815260408083206001600160a01b03851684529091529020805460ff19166001179055620003803390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6000620003dc836001600160a01b038416620003e5565b90505b92915050565b60008181526001830160205260408120546200042e57508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155620003df565b506000620003df565b600080604083850312156200044b57600080fd5b825160208401519092506001600160a01b03811681146200046b57600080fd5b809150509250929050565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620004cd578160001904821115620004b157620004b162000476565b80851615620004bf57918102915b93841c939080029062000491565b509250929050565b600082620004e657506001620003df565b81620004f557506000620003df565b81600181146200050e5760028114620005195762000539565b6001915050620003df565b60ff8411156200052d576200052d62000476565b50506001821b620003df565b5060208310610133831016604e8410600b84101617156200055e575081810a620003df565b6200056a83836200048c565b806000190482111562000581576200058162000476565b029392505050565b6000620003dc60ff841683620004d5565b6000816000190483118215151615620005b757620005b762000476565b500290565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620005e757607f821691505b6020821081036200060857634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200031b57600081815260208120601f850160051c81016020861015620006375750805b601f850160051c820191505b81811015620006585782815560010162000643565b505050505050565b81516001600160401b038111156200067c576200067c620005bc565b62000694816200068d8454620005d2565b846200060e565b602080601f831160018114620006cc5760008415620006b35750858301515b600019600386901b1c1916600185901b17855562000658565b600085815260208120601f198616915b82811015620006fd57888601518255948401946001909101908401620006dc565b50858210156200071c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60805160a05160c05160e0516101005161012051610140516101605161018051612a61620007b9600039600081816107df01526121e401526000818161080301526122080152600061151701526000611566015260006115410152600061149a015260006114c4015260006114ee0152600081816103940152818161078d01526119cf0152612a616000f3fe608060405234801561001057600080fd5b50600436106102535760003560e01c806351bcee2711610146578063a9059cbb116100c3578063d539139311610087578063d53913931461058f578063d547741f146105a4578063dd62ed3e146105b7578063e162533c146105ca578063f74929e0146105dd578063fad71be2146105e657600080fd5b8063a9059cbb14610530578063b6afc4dc14610543578063c01bc98214610556578063ca15c87314610569578063d505accf1461057c57600080fd5b80639010d07c1161010a5780639010d07c146104cf57806391d14854146104fa57806395d89b411461050d578063a217fddf14610515578063a457c2d71461051d57600080fd5b806351bcee27146104465780635d1edb871461046d57806370a082311461048057806379cc6790146104a95780637ecebe00146104bc57600080fd5b80632f2ff15d116101d4578063367065de11610198578063367065de146103d357806339509351146103e65780633e0b2cda146103f957806340c10f191461042057806342966c681461043357600080fd5b80632f2ff15d14610370578063313ce56714610383578063355274ea146103925780633644e515146103b857806336568abe146103c057600080fd5b806318160ddd1161021b57806318160ddd146102f25780631f2c5443146102fa578063234eaedc1461032757806323b872dd1461033a578063248a9ca31461034d57600080fd5b806301ffc9a71461025857806306fdde0314610280578063095ea7b3146102955780630ecbd033146102a85780631681f830146102dd575b600080fd5b61026b610266366004612511565b6105f9565b60405190151581526020015b60405180910390f35b610288610624565b6040516102779190612567565b61026b6102a33660046125b1565b6106b6565b6102cf7fd0ac125722f4b4565ab5e91b234e50c4c6f541672aea816ba090a0ea349ed93f81565b604051908152602001610277565b6102f06102eb3660046125b1565b6106ce565b005b6002546102cf565b600a54600954600b546040805193845260208401929092526001600160a01b031690820152606001610277565b6102cf6103353660046125db565b61074c565b61026b6103483660046125f6565b6108ce565b6102cf61035b366004612632565b60009081526007602052604090206001015490565b6102f061037e36600461264b565b6108f2565b60405160128152602001610277565b7f00000000000000000000000000000000000000000000000000000000000000006102cf565b6102cf61091c565b6102f06103ce36600461264b565b61092b565b6102f06103e1366004612677565b6109ae565b61026b6103f43660046125b1565b610b42565b6102cf7fb24c1025622fe38445b605f5c1a9bb02be7f6522d24c8a159e5e47e62dbaaecf81565b6102f061042e3660046125b1565b610b64565b6102f0610441366004612632565b610b86565b6102cf7f23ab0e580195340a5a67800cafa0615701edfa22f79534a52851336e3cf8376a81565b6102cf61047b366004612632565b610b93565b6102cf61048e3660046125db565b6001600160a01b031660009081526020819052604090205490565b6102f06104b73660046125b1565b610bca565b6102cf6104ca3660046125db565b610bdf565b6104e26104dd3660046126ac565b610bfd565b6040516001600160a01b039091168152602001610277565b61026b61050836600461264b565b610c1c565b610288610c47565b6102cf600081565b61026b61052b3660046125b1565b610c56565b61026b61053e3660046125b1565b610cd1565b6102f06105513660046126ce565b610cdf565b61026b6105643660046125db565b610d53565b6102cf610577366004612632565b610d60565b6102f061058a366004612749565b610d77565b6102cf6000805160206129ec83398151915281565b6102f06105b236600461264b565b610edb565b6102cf6105c53660046127bc565b610f00565b6102f06105d83660046125db565b610f2b565b6102cf60105481565b6102f06105f4366004612632565b610f60565b60006001600160e01b03198216635a05180f60e01b148061061e575061061e826110da565b92915050565b606060038054610633906127e6565b80601f016020809104026020016040519081016040528092919081815260200182805461065f906127e6565b80156106ac5780601f10610681576101008083540402835291602001916106ac565b820191906000526020600020905b81548152906001019060200180831161068f57829003601f168201915b5050505050905090565b6000336106c481858561110f565b5060019392505050565b7f23ab0e580195340a5a67800cafa0615701edfa22f79534a52851336e3cf8376a6106f881611234565b610704600c848461123e565b50604080516001600160a01b0385168152602081018490527fa1b8d777c2527547849718a04f45b8e5b0f29119c47f9298b20a85f0ad275424910160405180910390a1505050565b600061075782610d53565b156107675761061e600c83611254565b61077f6000805160206129ec83398151915283610c1c565b156107b15760025461061e907f0000000000000000000000000000000000000000000000000000000000000000612830565b601054620f4240036107db576001600160a01b03821660009081526020819052604090205461061e565b60007f00000000000000000000000000000000000000000000000000000000000000006108287f000000000000000000000000000000000000000000000000000000000000000042612830565b6108329190612847565b6001600160a01b0384166000908152600f60205260409020600101540361086e57506001600160a01b0382166000908152600f60205260409020545b6000620f424060105483610897876001600160a01b031660009081526020819052604090205490565b6108a19190612869565b6108ab9190612881565b6108b59190612847565b90506108c18282612830565b949350505050565b919050565b6000336108dc858285611269565b6108e78585856112e3565b506001949350505050565b60008281526007602052604090206001015461090d81611234565b610917838361146b565b505050565b600061092661148d565b905090565b6001600160a01b03811633146109a05760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6109aa82826115b4565b5050565b7fd0ac125722f4b4565ab5e91b234e50c4c6f541672aea816ba090a0ea349ed93f6109d881611234565b8215806109e3575083155b610a635760405162461bcd60e51b815260206004820152604560248201527f5472616e73616374696f6e4665653a2043616e6e6f742073657420666565416d60448201527f6f756e7420616e64206665654672616374696f6e206174207468652073616d656064820152642074696d6560d81b608482015260a401610997565b620186a0831115610ad25760405162461bcd60e51b815260206004820152603360248201527f5472616e73616374696f6e4665653a20557020746f20313025207472616e736160448201527218dd1a5bdb9199594818d85b881899481cd95d606a1b6064820152608401610997565b600a8490556009839055600b80546001600160a01b0319166001600160a01b0384169081179091556040805186815260208101869052908101919091527fd75a7916f83ee976ae8e04e3f9b46c9b16b546303f09f1fc20eccb6cd6bc476d9060600160405180910390a150505050565b6000336106c4818585610b558383610f00565b610b5f9190612869565b61110f565b6000805160206129ec833981519152610b7c81611234565b61091783836115d6565b610b9033826115e0565b50565b600a5460009015610ba6575050600a5490565b600954156108c957620f424060095483610bc09190612881565b61061e9190612847565b610bd5823383611269565b6109aa82826115e0565b6001600160a01b03811660009081526005602052604081205461061e565b6000828152600860205260408120610c159083611728565b9392505050565b60009182526007602090815260408084206001600160a01b0393909316845291905290205460ff1690565b606060048054610633906127e6565b60003381610c648286610f00565b905083811015610cc45760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610997565b6108e7828686840361110f565b6000336106c48185856112e3565b6000805160206129ec833981519152610cf781611234565b60005b61ffff8116841115610d4c57610d3a85858361ffff16818110610d1f57610d1f6128a0565b9050602002016020810190610d3491906125db565b846115d6565b80610d44816128b6565b915050610cfa565b5050505050565b600061061e600c83611734565b600081815260086020526040812061061e90611749565b83421115610dc75760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e650000006044820152606401610997565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9888888610df68c611753565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e0016040516020818303038152906040528051906020012090506000610e518261177b565b90506000610e61828787876117c9565b9050896001600160a01b0316816001600160a01b031614610ec45760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e617475726500006044820152606401610997565b610ecf8a8a8a61110f565b50505050505050505050565b600082815260076020526040902060010154610ef681611234565b61091783836115b4565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b7f23ab0e580195340a5a67800cafa0615701edfa22f79534a52851336e3cf8376a610f5581611234565b610917600c836117f1565b7fb24c1025622fe38445b605f5c1a9bb02be7f6522d24c8a159e5e47e62dbaaecf610f8a81611234565b620f42408211156110035760405162461bcd60e51b815260206004820152603a60248201527f5472616e73666572436f6e74726f6c3a206d6178696d756d206672616374696f60448201527f6e2069732031302a2a362028657175616c20746f2031303025290000000000006064820152608401610997565b60108290556040518281527fa83163ea39ecbdc3af173e3337234fbe2f88b17dca9802ec3186e557d365e2d19060200160405180910390a15050565b6110498282610c1c565b6109aa5760008281526007602090815260408083206001600160a01b03851684529091529020805460ff191660011790556110813390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610c15836001600160a01b038416611806565b60006001600160e01b03198216637965db0b60e01b148061061e57506301ffc9a760e01b6001600160e01b031983161461061e565b6001600160a01b0383166111715760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610997565b6001600160a01b0382166111d25760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610997565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b610b908133611855565b60006108c1846001600160a01b038516846118b9565b6000610c15836001600160a01b0384166118d6565b60006112758484610f00565b905060001981146112dd57818110156112d05760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610997565b6112dd848484840361110f565b50505050565b6001600160a01b0383166113475760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610997565b6001600160a01b0382166113a95760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610997565b6113b4838383611946565b6001600160a01b038316600090815260208190526040902054818110156113ed5760405162461bcd60e51b8152600401610997906128d7565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290611424908490612869565b92505081905550826001600160a01b0316846001600160a01b0316600080516020612a0c8339815191528460405161145e91815260200190565b60405180910390a36112dd565b611475828261103f565b600082815260086020526040902061091790826110c5565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156114e657507f000000000000000000000000000000000000000000000000000000000000000046145b1561151057507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6115be8282611951565b600082815260086020526040902061091790826119b8565b6109aa82826119cd565b6001600160a01b0382166116405760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610997565b61164c82600083611946565b6001600160a01b038216600090815260208190526040902054818110156116c05760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610997565b6001600160a01b03831660009081526020819052604081208383039055600280548492906116ef908490612830565b90915550506040518281526000906001600160a01b03851690600080516020612a0c8339815191529060200160405180910390a3505050565b6000610c158383611a5a565b6000610c15836001600160a01b038416611a84565b600061061e825490565b6001600160a01b03811660009081526005602052604090208054600181018255905b50919050565b600061061e61178861148d565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b60008060006117da87878787611a90565b915091506117e781611b7d565b5095945050505050565b6000610c15836001600160a01b038416611d33565b600081815260018301602052604081205461184d5750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561061e565b50600061061e565b61185f8282610c1c565b6109aa57611877816001600160a01b03166014611d50565b611882836020611d50565b60405160200161189392919061291d565b60408051601f198184030181529082905262461bcd60e51b825261099791600401612567565b600082815260028401602052604081208290556108c18484611eec565b6000818152600283016020526040812054801515806118fa57506118fa8484611a84565b610c155760405162461bcd60e51b815260206004820152601e60248201527f456e756d657261626c654d61703a206e6f6e6578697374656e74206b657900006044820152606401610997565b610917838383611ef8565b61195b8282610c1c565b156109aa5760008281526007602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610c15836001600160a01b038416611f2a565b7f0000000000000000000000000000000000000000000000000000000000000000816119f860025490565b611a029190612869565b1115611a505760405162461bcd60e51b815260206004820152601960248201527f45524332304361707065643a20636170206578636565646564000000000000006044820152606401610997565b6109aa828261201d565b6000826000018281548110611a7157611a716128a0565b9060005260206000200154905092915050565b6000610c1583836120f6565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611ac75750600090506003611b74565b8460ff16601b14158015611adf57508460ff16601c14155b15611af05750600090506004611b74565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611b44573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116611b6d57600060019250925050611b74565b9150600090505b94509492505050565b6000816004811115611b9157611b91612992565b03611b995750565b6001816004811115611bad57611bad612992565b03611bfa5760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610997565b6002816004811115611c0e57611c0e612992565b03611c5b5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610997565b6003816004811115611c6f57611c6f612992565b03611cc75760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610997565b6004816004811115611cdb57611cdb612992565b03610b905760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610997565b60008181526002830160205260408120819055610c15838361210e565b60606000611d5f836002612881565b611d6a906002612869565b67ffffffffffffffff811115611d8257611d826129a8565b6040519080825280601f01601f191660200182016040528015611dac576020820181803683370190505b509050600360fc1b81600081518110611dc757611dc76128a0565b60200101906001600160f81b031916908160001a905350600f60fb1b81600181518110611df657611df66128a0565b60200101906001600160f81b031916908160001a9053506000611e1a846002612881565b611e25906001612869565b90505b6001811115611e9d576f181899199a1a9b1b9c1cb0b131b232b360811b85600f1660108110611e5957611e596128a0565b1a60f81b828281518110611e6f57611e6f6128a0565b60200101906001600160f81b031916908160001a90535060049490941c93611e96816129be565b9050611e28565b508315610c155760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610997565b6000610c158383611806565b6001600160a01b038316611f1557611f10338261211a565b611f1f565b611f1f838261211a565b610917838383612391565b60008181526001830160205260408120548015612013576000611f4e600183612830565b8554909150600090611f6290600190612830565b9050818114611fc7576000866000018281548110611f8257611f826128a0565b9060005260206000200154905080876000018481548110611fa557611fa56128a0565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080611fd857611fd86129d5565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061061e565b600091505061061e565b6001600160a01b0382166120735760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610997565b61207f60008383611946565b80600260008282546120919190612869565b90915550506001600160a01b038216600090815260208190526040812080548392906120be908490612869565b90915550506040518181526001600160a01b03831690600090600080516020612a0c8339815191529060200160405180910390a35050565b60008181526001830160205260408120541515610c15565b6000610c158383611f2a565b61212382610d53565b156121b2576000612135600c84611254565b90508082111561219b5760405162461bcd60e51b815260206004820152602b60248201527f5472616e73666572436f6e74726f6c3a20616d6f756e7420657863656564732060448201526a1cdc195b99081b1a5b5a5d60aa1b6064820152608401610997565b6112dd836121a98484612830565b600c919061123e565b620f42406010541080156121db57506121d96000805160206129ec83398151915233610c1c565b155b156109aa5760007f000000000000000000000000000000000000000000000000000000000000000061222d7f000000000000000000000000000000000000000000000000000000000000000042612830565b6122379190612847565b6001600160a01b0384166000908152600f602052604081205491925061225d8483612869565b6001600160a01b0386166000908152600f602052604090206001015490915083900361229f576001600160a01b0385166000908152600f602052604090205491505b6000620f4240601054846122c8896001600160a01b031660009081526020819052604090205490565b6122d29190612869565b6122dc9190612881565b6122e69190612847565b9050808211156123535760405162461bcd60e51b815260206004820152603260248201527f5472616e73666572436f6e74726f6c3a20616d6f756e742065786365656473206044820152711c195c9a5bd9081cdc195b99081b1a5b5a5d60721b6064820152608401610997565b5060408051808201825291825260208083019485526001600160a01b0387166000908152600f90915220905181559151600190920191909155505050565b61091733826123ae6000805160206129ec83398151915283610c1c565b6109aa57600060095411806123c557506000600a54115b156109aa5760006123d582610b93565b600b549091506109179084906001600160a01b0316836109178383836123fb838261211a565b6109178383836001600160a01b0383161561246c576001600160a01b038316600090815260208190526040902054818110156124495760405162461bcd60e51b8152600401610997906128d7565b6001600160a01b0384166000908152602081905260409020908290039055612484565b806002600082825461247e9190612869565b90915550505b6001600160a01b038216156124c6576001600160a01b038216600090815260208190526040812080548392906124bb908490612869565b909155506124de9050565b80600260008282546124d89190612830565b90915550505b816001600160a01b0316836001600160a01b0316600080516020612a0c8339815191528360405161122791815260200190565b60006020828403121561252357600080fd5b81356001600160e01b031981168114610c1557600080fd5b60005b8381101561255657818101518382015260200161253e565b838111156112dd5750506000910152565b602081526000825180602084015261258681604085016020870161253b565b601f01601f19169190910160400192915050565b80356001600160a01b03811681146108c957600080fd5b600080604083850312156125c457600080fd5b6125cd8361259a565b946020939093013593505050565b6000602082840312156125ed57600080fd5b610c158261259a565b60008060006060848603121561260b57600080fd5b6126148461259a565b92506126226020850161259a565b9150604084013590509250925092565b60006020828403121561264457600080fd5b5035919050565b6000806040838503121561265e57600080fd5b8235915061266e6020840161259a565b90509250929050565b60008060006060848603121561268c57600080fd5b83359250602084013591506126a36040850161259a565b90509250925092565b600080604083850312156126bf57600080fd5b50508035926020909101359150565b6000806000604084860312156126e357600080fd5b833567ffffffffffffffff808211156126fb57600080fd5b818601915086601f83011261270f57600080fd5b81358181111561271e57600080fd5b8760208260051b850101111561273357600080fd5b6020928301989097509590910135949350505050565b600080600080600080600060e0888a03121561276457600080fd5b61276d8861259a565b965061277b6020890161259a565b95506040880135945060608801359350608088013560ff8116811461279f57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b600080604083850312156127cf57600080fd5b6127d88361259a565b915061266e6020840161259a565b600181811c908216806127fa57607f821691505b60208210810361177557634e487b7160e01b600052602260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000828210156128425761284261281a565b500390565b60008261286457634e487b7160e01b600052601260045260246000fd5b500490565b6000821982111561287c5761287c61281a565b500190565b600081600019048311821515161561289b5761289b61281a565b500290565b634e487b7160e01b600052603260045260246000fd5b600061ffff8083168181036128cd576128cd61281a565b6001019392505050565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604082015265616c616e636560d01b606082015260800190565b7f416363657373436f6e74726f6c3a206163636f756e742000000000000000000081526000835161295581601785016020880161253b565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161298681602884016020880161253b565b01602801949350505050565b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6000816129cd576129cd61281a565b506000190190565b634e487b7160e01b600052603160045260246000fdfe9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa26469706673582212208cfdb01aaeacfe784c0bb692588bb7d71e9e4f4dd18017d1aec146ea5e0232ac64736f6c634300080f0033","opcodes":"PUSH2 0x1A0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x321A CODESIZE SUB DUP1 PUSH3 0x321A DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x35 SWAP2 PUSH3 0x437 JUMP JUMPDEST DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH15 0x109BDD5B991B195CDCC815DBDC9B19 PUSH1 0x8A SHL DUP2 MSTORE POP DUP1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x31 PUSH1 0xF8 SHL DUP2 MSTORE POP PUSH3 0x89 PUSH3 0x2D8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x96 SWAP1 PUSH1 0xA PUSH3 0x589 JUMP JUMPDEST PUSH3 0xA6 SWAP1 PUSH4 0xDBF0EE80 PUSH3 0x59A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xF DUP2 MSTORE PUSH1 0x20 ADD PUSH15 0x109BDD5B991B195CDCC815DBDC9B19 PUSH1 0x8A SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x212621 PUSH1 0xE9 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xFB SWAP2 SWAP1 PUSH3 0x660 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x10A DUP3 DUP3 PUSH3 0x660 JUMP JUMPDEST POP POP POP PUSH1 0x0 DUP2 GT PUSH3 0x162 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332304361707065643A2063617020697320300000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x80 MSTORE DUP2 MLOAD PUSH1 0x20 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH2 0x100 DUP3 SWAP1 MSTORE PUSH2 0x120 DUP2 SWAP1 MSTORE CHAINID PUSH1 0xC0 MSTORE PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH3 0x1FA DUP2 DUP5 DUP5 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE SWAP1 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE CHAINID PUSH1 0x80 DUP3 ADD MSTORE ADDRESS PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0xC0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xA0 MSTORE ADDRESS PUSH1 0xE0 MSTORE PUSH2 0x140 MSTORE POP POP TIMESTAMP PUSH2 0x160 MSTORE POP POP POP PUSH2 0x180 MSTORE PUSH3 0x220 PUSH1 0x0 DUP3 PUSH3 0x2DD JUMP JUMPDEST PUSH3 0x24C PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP3 PUSH3 0x2DD JUMP JUMPDEST PUSH3 0x278 PUSH32 0xD0AC125722F4B4565AB5E91B234E50C4C6F541672AEA816BA090A0EA349ED93F DUP3 PUSH3 0x2DD JUMP JUMPDEST PUSH3 0x2A4 PUSH32 0xB24C1025622FE38445B605F5C1A9BB02BE7F6522D24C8A159E5E47E62DBAAECF DUP3 PUSH3 0x2DD JUMP JUMPDEST PUSH3 0x2D0 PUSH32 0x23AB0E580195340A5A67800CAFA0615701EDFA22F79534A52851336E3CF8376A DUP3 PUSH3 0x2DD JUMP JUMPDEST POP POP PUSH3 0x72C JUMP JUMPDEST PUSH1 0x12 SWAP1 JUMP JUMPDEST PUSH3 0x2F4 DUP3 DUP3 PUSH3 0x320 PUSH1 0x20 SHL PUSH3 0x103F OR PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH3 0x31B SWAP2 DUP4 SWAP1 PUSH3 0x10C5 PUSH3 0x3C5 DUP3 SHL OR SWAP1 SHR JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH3 0x3C1 JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH3 0x380 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3DC DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH3 0x3E5 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH3 0x42E JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH3 0x3DF JUMP JUMPDEST POP PUSH1 0x0 PUSH3 0x3DF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x44B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x46B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x4CD JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x4B1 JUMPI PUSH3 0x4B1 PUSH3 0x476 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x4BF JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x491 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x4E6 JUMPI POP PUSH1 0x1 PUSH3 0x3DF JUMP JUMPDEST DUP2 PUSH3 0x4F5 JUMPI POP PUSH1 0x0 PUSH3 0x3DF JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x50E JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x519 JUMPI PUSH3 0x539 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x3DF JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x52D JUMPI PUSH3 0x52D PUSH3 0x476 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x3DF JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x55E JUMPI POP DUP2 DUP2 EXP PUSH3 0x3DF JUMP JUMPDEST PUSH3 0x56A DUP4 DUP4 PUSH3 0x48C JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x581 JUMPI PUSH3 0x581 PUSH3 0x476 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3DC PUSH1 0xFF DUP5 AND DUP4 PUSH3 0x4D5 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x5B7 JUMPI PUSH3 0x5B7 PUSH3 0x476 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x5E7 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x608 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x31B JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x637 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x658 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x643 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x67C JUMPI PUSH3 0x67C PUSH3 0x5BC JUMP JUMPDEST PUSH3 0x694 DUP2 PUSH3 0x68D DUP5 SLOAD PUSH3 0x5D2 JUMP JUMPDEST DUP5 PUSH3 0x60E JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x6CC JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x6B3 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x658 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x6FD JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x6DC JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x71C JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH2 0x120 MLOAD PUSH2 0x140 MLOAD PUSH2 0x160 MLOAD PUSH2 0x180 MLOAD PUSH2 0x2A61 PUSH3 0x7B9 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x7DF ADD MSTORE PUSH2 0x21E4 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x803 ADD MSTORE PUSH2 0x2208 ADD MSTORE PUSH1 0x0 PUSH2 0x1517 ADD MSTORE PUSH1 0x0 PUSH2 0x1566 ADD MSTORE PUSH1 0x0 PUSH2 0x1541 ADD MSTORE PUSH1 0x0 PUSH2 0x149A ADD MSTORE PUSH1 0x0 PUSH2 0x14C4 ADD MSTORE PUSH1 0x0 PUSH2 0x14EE ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x394 ADD MSTORE DUP2 DUP2 PUSH2 0x78D ADD MSTORE PUSH2 0x19CF ADD MSTORE PUSH2 0x2A61 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x253 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x51BCEE27 GT PUSH2 0x146 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xD5391393 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x58F JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x5A4 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5B7 JUMPI DUP1 PUSH4 0xE162533C EQ PUSH2 0x5CA JUMPI DUP1 PUSH4 0xF74929E0 EQ PUSH2 0x5DD JUMPI DUP1 PUSH4 0xFAD71BE2 EQ PUSH2 0x5E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x530 JUMPI DUP1 PUSH4 0xB6AFC4DC EQ PUSH2 0x543 JUMPI DUP1 PUSH4 0xC01BC982 EQ PUSH2 0x556 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x569 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x57C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9010D07C GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x4FA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x50D JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x51D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x51BCEE27 EQ PUSH2 0x446 JUMPI DUP1 PUSH4 0x5D1EDB87 EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x480 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x4A9 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x4BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x367065DE GT PUSH2 0x198 JUMPI DUP1 PUSH4 0x367065DE EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0x3E0B2CDA EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x420 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x3B8 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x3C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x21B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x1F2C5443 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x234EAEDC EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0xECBD033 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x1681F830 EQ PUSH2 0x2DD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26B PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0x2511 JUMP JUMPDEST PUSH2 0x5F9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x288 PUSH2 0x624 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x2567 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x2A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x25B1 JUMP JUMPDEST PUSH2 0x6B6 JUMP JUMPDEST PUSH2 0x2CF PUSH32 0xD0AC125722F4B4565AB5E91B234E50C4C6F541672AEA816BA090A0EA349ED93F DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x277 JUMP JUMPDEST PUSH2 0x2F0 PUSH2 0x2EB CALLDATASIZE PUSH1 0x4 PUSH2 0x25B1 JUMP JUMPDEST PUSH2 0x6CE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x2CF JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x9 SLOAD PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x277 JUMP JUMPDEST PUSH2 0x2CF PUSH2 0x335 CALLDATASIZE PUSH1 0x4 PUSH2 0x25DB JUMP JUMPDEST PUSH2 0x74C JUMP JUMPDEST PUSH2 0x26B PUSH2 0x348 CALLDATASIZE PUSH1 0x4 PUSH2 0x25F6 JUMP JUMPDEST PUSH2 0x8CE JUMP JUMPDEST PUSH2 0x2CF PUSH2 0x35B CALLDATASIZE PUSH1 0x4 PUSH2 0x2632 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2F0 PUSH2 0x37E CALLDATASIZE PUSH1 0x4 PUSH2 0x264B JUMP JUMPDEST PUSH2 0x8F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x277 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x2CF JUMP JUMPDEST PUSH2 0x2CF PUSH2 0x91C JUMP JUMPDEST PUSH2 0x2F0 PUSH2 0x3CE CALLDATASIZE PUSH1 0x4 PUSH2 0x264B JUMP JUMPDEST PUSH2 0x92B JUMP JUMPDEST PUSH2 0x2F0 PUSH2 0x3E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2677 JUMP JUMPDEST PUSH2 0x9AE JUMP JUMPDEST PUSH2 0x26B PUSH2 0x3F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x25B1 JUMP JUMPDEST PUSH2 0xB42 JUMP JUMPDEST PUSH2 0x2CF PUSH32 0xB24C1025622FE38445B605F5C1A9BB02BE7F6522D24C8A159E5E47E62DBAAECF DUP2 JUMP JUMPDEST PUSH2 0x2F0 PUSH2 0x42E CALLDATASIZE PUSH1 0x4 PUSH2 0x25B1 JUMP JUMPDEST PUSH2 0xB64 JUMP JUMPDEST PUSH2 0x2F0 PUSH2 0x441 CALLDATASIZE PUSH1 0x4 PUSH2 0x2632 JUMP JUMPDEST PUSH2 0xB86 JUMP JUMPDEST PUSH2 0x2CF PUSH32 0x23AB0E580195340A5A67800CAFA0615701EDFA22F79534A52851336E3CF8376A DUP2 JUMP JUMPDEST PUSH2 0x2CF PUSH2 0x47B CALLDATASIZE PUSH1 0x4 PUSH2 0x2632 JUMP JUMPDEST PUSH2 0xB93 JUMP JUMPDEST PUSH2 0x2CF PUSH2 0x48E CALLDATASIZE PUSH1 0x4 PUSH2 0x25DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2F0 PUSH2 0x4B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x25B1 JUMP JUMPDEST PUSH2 0xBCA JUMP JUMPDEST PUSH2 0x2CF PUSH2 0x4CA CALLDATASIZE PUSH1 0x4 PUSH2 0x25DB JUMP JUMPDEST PUSH2 0xBDF JUMP JUMPDEST PUSH2 0x4E2 PUSH2 0x4DD CALLDATASIZE PUSH1 0x4 PUSH2 0x26AC JUMP JUMPDEST PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x277 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x508 CALLDATASIZE PUSH1 0x4 PUSH2 0x264B JUMP JUMPDEST PUSH2 0xC1C JUMP JUMPDEST PUSH2 0x288 PUSH2 0xC47 JUMP JUMPDEST PUSH2 0x2CF PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x52B CALLDATASIZE PUSH1 0x4 PUSH2 0x25B1 JUMP JUMPDEST PUSH2 0xC56 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x53E CALLDATASIZE PUSH1 0x4 PUSH2 0x25B1 JUMP JUMPDEST PUSH2 0xCD1 JUMP JUMPDEST PUSH2 0x2F0 PUSH2 0x551 CALLDATASIZE PUSH1 0x4 PUSH2 0x26CE JUMP JUMPDEST PUSH2 0xCDF JUMP JUMPDEST PUSH2 0x26B PUSH2 0x564 CALLDATASIZE PUSH1 0x4 PUSH2 0x25DB JUMP JUMPDEST PUSH2 0xD53 JUMP JUMPDEST PUSH2 0x2CF PUSH2 0x577 CALLDATASIZE PUSH1 0x4 PUSH2 0x2632 JUMP JUMPDEST PUSH2 0xD60 JUMP JUMPDEST PUSH2 0x2F0 PUSH2 0x58A CALLDATASIZE PUSH1 0x4 PUSH2 0x2749 JUMP JUMPDEST PUSH2 0xD77 JUMP JUMPDEST PUSH2 0x2CF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x29EC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x2F0 PUSH2 0x5B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x264B JUMP JUMPDEST PUSH2 0xEDB JUMP JUMPDEST PUSH2 0x2CF PUSH2 0x5C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x27BC JUMP JUMPDEST PUSH2 0xF00 JUMP JUMPDEST PUSH2 0x2F0 PUSH2 0x5D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x25DB JUMP JUMPDEST PUSH2 0xF2B JUMP JUMPDEST PUSH2 0x2CF PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2F0 PUSH2 0x5F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2632 JUMP JUMPDEST PUSH2 0xF60 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5A05180F PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x61E JUMPI POP PUSH2 0x61E DUP3 PUSH2 0x10DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x633 SWAP1 PUSH2 0x27E6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x65F SWAP1 PUSH2 0x27E6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6AC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x681 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6AC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x68F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x6C4 DUP2 DUP6 DUP6 PUSH2 0x110F JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x23AB0E580195340A5A67800CAFA0615701EDFA22F79534A52851336E3CF8376A PUSH2 0x6F8 DUP2 PUSH2 0x1234 JUMP JUMPDEST PUSH2 0x704 PUSH1 0xC DUP5 DUP5 PUSH2 0x123E JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xA1B8D777C2527547849718A04F45B8E5B0F29119C47F9298B20A85F0AD275424 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x757 DUP3 PUSH2 0xD53 JUMP JUMPDEST ISZERO PUSH2 0x767 JUMPI PUSH2 0x61E PUSH1 0xC DUP4 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0x77F PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x29EC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0xC1C JUMP JUMPDEST ISZERO PUSH2 0x7B1 JUMPI PUSH1 0x2 SLOAD PUSH2 0x61E SWAP1 PUSH32 0x0 PUSH2 0x2830 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH3 0xF4240 SUB PUSH2 0x7DB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x61E JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH2 0x828 PUSH32 0x0 TIMESTAMP PUSH2 0x2830 JUMP JUMPDEST PUSH2 0x832 SWAP2 SWAP1 PUSH2 0x2847 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0x86E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST PUSH1 0x0 PUSH3 0xF4240 PUSH1 0x10 SLOAD DUP4 PUSH2 0x897 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x8A1 SWAP2 SWAP1 PUSH2 0x2869 JUMP JUMPDEST PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0x2881 JUMP JUMPDEST PUSH2 0x8B5 SWAP2 SWAP1 PUSH2 0x2847 JUMP JUMPDEST SWAP1 POP PUSH2 0x8C1 DUP3 DUP3 PUSH2 0x2830 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x8DC DUP6 DUP3 DUP6 PUSH2 0x1269 JUMP JUMPDEST PUSH2 0x8E7 DUP6 DUP6 DUP6 PUSH2 0x12E3 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x90D DUP2 PUSH2 0x1234 JUMP JUMPDEST PUSH2 0x917 DUP4 DUP4 PUSH2 0x146B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x926 PUSH2 0x148D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x9A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9AA DUP3 DUP3 PUSH2 0x15B4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0xD0AC125722F4B4565AB5E91B234E50C4C6F541672AEA816BA090A0EA349ED93F PUSH2 0x9D8 DUP2 PUSH2 0x1234 JUMP JUMPDEST DUP3 ISZERO DUP1 PUSH2 0x9E3 JUMPI POP DUP4 ISZERO JUMPDEST PUSH2 0xA63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x45 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E4665653A2043616E6E6F742073657420666565416D PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F756E7420616E64206665654672616374696F6E206174207468652073616D65 PUSH1 0x64 DUP3 ADD MSTORE PUSH5 0x2074696D65 PUSH1 0xD8 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x997 JUMP JUMPDEST PUSH3 0x186A0 DUP4 GT ISZERO PUSH2 0xAD2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E4665653A20557020746F20313025207472616E7361 PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x18DD1A5BDB9199594818D85B881899481CD95D PUSH1 0x6A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x997 JUMP JUMPDEST PUSH1 0xA DUP5 SWAP1 SSTORE PUSH1 0x9 DUP4 SWAP1 SSTORE PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xD75A7916F83EE976AE8E04E3F9B46C9B16B546303F09F1FC20ECCB6CD6BC476D SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x6C4 DUP2 DUP6 DUP6 PUSH2 0xB55 DUP4 DUP4 PUSH2 0xF00 JUMP JUMPDEST PUSH2 0xB5F SWAP2 SWAP1 PUSH2 0x2869 JUMP JUMPDEST PUSH2 0x110F JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x29EC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xB7C DUP2 PUSH2 0x1234 JUMP JUMPDEST PUSH2 0x917 DUP4 DUP4 PUSH2 0x15D6 JUMP JUMPDEST PUSH2 0xB90 CALLER DUP3 PUSH2 0x15E0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 ISZERO PUSH2 0xBA6 JUMPI POP POP PUSH1 0xA SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD ISZERO PUSH2 0x8C9 JUMPI PUSH3 0xF4240 PUSH1 0x9 SLOAD DUP4 PUSH2 0xBC0 SWAP2 SWAP1 PUSH2 0x2881 JUMP JUMPDEST PUSH2 0x61E SWAP2 SWAP1 PUSH2 0x2847 JUMP JUMPDEST PUSH2 0xBD5 DUP3 CALLER DUP4 PUSH2 0x1269 JUMP JUMPDEST PUSH2 0x9AA DUP3 DUP3 PUSH2 0x15E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x61E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xC15 SWAP1 DUP4 PUSH2 0x1728 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x633 SWAP1 PUSH2 0x27E6 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0xC64 DUP3 DUP7 PUSH2 0xF00 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xCC4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x997 JUMP JUMPDEST PUSH2 0x8E7 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x110F JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x6C4 DUP2 DUP6 DUP6 PUSH2 0x12E3 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x29EC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xCF7 DUP2 PUSH2 0x1234 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH2 0xFFFF DUP2 AND DUP5 GT ISZERO PUSH2 0xD4C JUMPI PUSH2 0xD3A DUP6 DUP6 DUP4 PUSH2 0xFFFF AND DUP2 DUP2 LT PUSH2 0xD1F JUMPI PUSH2 0xD1F PUSH2 0x28A0 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xD34 SWAP2 SWAP1 PUSH2 0x25DB JUMP JUMPDEST DUP5 PUSH2 0x15D6 JUMP JUMPDEST DUP1 PUSH2 0xD44 DUP2 PUSH2 0x28B6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xCFA JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x61E PUSH1 0xC DUP4 PUSH2 0x1734 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x61E SWAP1 PUSH2 0x1749 JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xDC7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305065726D69743A206578706972656420646561646C696E65000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x997 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xDF6 DUP13 PUSH2 0x1753 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xE51 DUP3 PUSH2 0x177B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE61 DUP3 DUP8 DUP8 DUP8 PUSH2 0x17C9 JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xEC4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x997 JUMP JUMPDEST PUSH2 0xECF DUP11 DUP11 DUP11 PUSH2 0x110F JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xEF6 DUP2 PUSH2 0x1234 JUMP JUMPDEST PUSH2 0x917 DUP4 DUP4 PUSH2 0x15B4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH32 0x23AB0E580195340A5A67800CAFA0615701EDFA22F79534A52851336E3CF8376A PUSH2 0xF55 DUP2 PUSH2 0x1234 JUMP JUMPDEST PUSH2 0x917 PUSH1 0xC DUP4 PUSH2 0x17F1 JUMP JUMPDEST PUSH32 0xB24C1025622FE38445B605F5C1A9BB02BE7F6522D24C8A159E5E47E62DBAAECF PUSH2 0xF8A DUP2 PUSH2 0x1234 JUMP JUMPDEST PUSH3 0xF4240 DUP3 GT ISZERO PUSH2 0x1003 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73666572436F6E74726F6C3A206D6178696D756D206672616374696F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E2069732031302A2A362028657175616C20746F203130302529000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x997 JUMP JUMPDEST PUSH1 0x10 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xA83163EA39ECBDC3AF173E3337234FBE2F88B17DCA9802EC3186E557D365E2D1 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x1049 DUP3 DUP3 PUSH2 0xC1C JUMP JUMPDEST PUSH2 0x9AA JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1081 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC15 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1806 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x61E JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x61E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1171 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x997 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x11D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x997 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xB90 DUP2 CALLER PUSH2 0x1855 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 PUSH2 0x18B9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC15 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x18D6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1275 DUP5 DUP5 PUSH2 0xF00 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x12DD JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x12D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x997 JUMP JUMPDEST PUSH2 0x12DD DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x110F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1347 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x997 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x13A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x997 JUMP JUMPDEST PUSH2 0x13B4 DUP4 DUP4 DUP4 PUSH2 0x1946 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x13ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x997 SWAP1 PUSH2 0x28D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1424 SWAP1 DUP5 SWAP1 PUSH2 0x2869 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A0C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH1 0x40 MLOAD PUSH2 0x145E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x12DD JUMP JUMPDEST PUSH2 0x1475 DUP3 DUP3 PUSH2 0x103F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x917 SWAP1 DUP3 PUSH2 0x10C5 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0x14E6 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x1510 JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH32 0x0 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 DUP3 DUP5 ADD MSTORE PUSH32 0x0 PUSH1 0x60 DUP4 ADD MSTORE CHAINID PUSH1 0x80 DUP4 ADD MSTORE ADDRESS PUSH1 0xA0 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x15BE DUP3 DUP3 PUSH2 0x1951 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x917 SWAP1 DUP3 PUSH2 0x19B8 JUMP JUMPDEST PUSH2 0x9AA DUP3 DUP3 PUSH2 0x19CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1640 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x997 JUMP JUMPDEST PUSH2 0x164C DUP3 PUSH1 0x0 DUP4 PUSH2 0x1946 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x16C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x997 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x16EF SWAP1 DUP5 SWAP1 PUSH2 0x2830 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A0C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC15 DUP4 DUP4 PUSH2 0x1A5A JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC15 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1A84 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x61E DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x61E PUSH2 0x1788 PUSH2 0x148D JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x22 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x42 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x62 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x17DA DUP8 DUP8 DUP8 DUP8 PUSH2 0x1A90 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x17E7 DUP2 PUSH2 0x1B7D JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC15 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1D33 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x184D JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x61E JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x185F DUP3 DUP3 PUSH2 0xC1C JUMP JUMPDEST PUSH2 0x9AA JUMPI PUSH2 0x1877 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x14 PUSH2 0x1D50 JUMP JUMPDEST PUSH2 0x1882 DUP4 PUSH1 0x20 PUSH2 0x1D50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1893 SWAP3 SWAP2 SWAP1 PUSH2 0x291D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x997 SWAP2 PUSH1 0x4 ADD PUSH2 0x2567 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH2 0x8C1 DUP5 DUP5 PUSH2 0x1EEC JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0x18FA JUMPI POP PUSH2 0x18FA DUP5 DUP5 PUSH2 0x1A84 JUMP JUMPDEST PUSH2 0xC15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E756D657261626C654D61703A206E6F6E6578697374656E74206B65790000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x997 JUMP JUMPDEST PUSH2 0x917 DUP4 DUP4 DUP4 PUSH2 0x1EF8 JUMP JUMPDEST PUSH2 0x195B DUP3 DUP3 PUSH2 0xC1C JUMP JUMPDEST ISZERO PUSH2 0x9AA JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC15 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1F2A JUMP JUMPDEST PUSH32 0x0 DUP2 PUSH2 0x19F8 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A02 SWAP2 SWAP1 PUSH2 0x2869 JUMP JUMPDEST GT ISZERO PUSH2 0x1A50 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332304361707065643A2063617020657863656564656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x997 JUMP JUMPDEST PUSH2 0x9AA DUP3 DUP3 PUSH2 0x201D JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1A71 JUMPI PUSH2 0x1A71 PUSH2 0x28A0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC15 DUP4 DUP4 PUSH2 0x20F6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT ISZERO PUSH2 0x1AC7 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0x1B74 JUMP JUMPDEST DUP5 PUSH1 0xFF AND PUSH1 0x1B EQ ISZERO DUP1 ISZERO PUSH2 0x1ADF JUMPI POP DUP5 PUSH1 0xFF AND PUSH1 0x1C EQ ISZERO JUMPDEST ISZERO PUSH2 0x1AF0 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x4 PUSH2 0x1B74 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B44 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1B6D JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x1B74 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1B91 JUMPI PUSH2 0x1B91 PUSH2 0x2992 JUMP JUMPDEST SUB PUSH2 0x1B99 JUMPI POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1BAD JUMPI PUSH2 0x1BAD PUSH2 0x2992 JUMP JUMPDEST SUB PUSH2 0x1BFA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x997 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1C0E JUMPI PUSH2 0x1C0E PUSH2 0x2992 JUMP JUMPDEST SUB PUSH2 0x1C5B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x997 JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1C6F JUMPI PUSH2 0x1C6F PUSH2 0x2992 JUMP JUMPDEST SUB PUSH2 0x1CC7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x997 JUMP JUMPDEST PUSH1 0x4 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1CDB JUMPI PUSH2 0x1CDB PUSH2 0x2992 JUMP JUMPDEST SUB PUSH2 0xB90 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202776272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x997 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0xC15 DUP4 DUP4 PUSH2 0x210E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1D5F DUP4 PUSH1 0x2 PUSH2 0x2881 JUMP JUMPDEST PUSH2 0x1D6A SWAP1 PUSH1 0x2 PUSH2 0x2869 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D82 JUMPI PUSH2 0x1D82 PUSH2 0x29A8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1DAC JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1DC7 JUMPI PUSH2 0x1DC7 PUSH2 0x28A0 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1DF6 JUMPI PUSH2 0x1DF6 PUSH2 0x28A0 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x1E1A DUP5 PUSH1 0x2 PUSH2 0x2881 JUMP JUMPDEST PUSH2 0x1E25 SWAP1 PUSH1 0x1 PUSH2 0x2869 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1E9D JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x1E59 JUMPI PUSH2 0x1E59 PUSH2 0x28A0 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1E6F JUMPI PUSH2 0x1E6F PUSH2 0x28A0 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x1E96 DUP2 PUSH2 0x29BE JUMP JUMPDEST SWAP1 POP PUSH2 0x1E28 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0xC15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x997 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC15 DUP4 DUP4 PUSH2 0x1806 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1F15 JUMPI PUSH2 0x1F10 CALLER DUP3 PUSH2 0x211A JUMP JUMPDEST PUSH2 0x1F1F JUMP JUMPDEST PUSH2 0x1F1F DUP4 DUP3 PUSH2 0x211A JUMP JUMPDEST PUSH2 0x917 DUP4 DUP4 DUP4 PUSH2 0x2391 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x2013 JUMPI PUSH1 0x0 PUSH2 0x1F4E PUSH1 0x1 DUP4 PUSH2 0x2830 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x1F62 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2830 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x1FC7 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1F82 JUMPI PUSH2 0x1F82 PUSH2 0x28A0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1FA5 JUMPI PUSH2 0x1FA5 PUSH2 0x28A0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x1FD8 JUMPI PUSH2 0x1FD8 PUSH2 0x29D5 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x61E JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x61E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2073 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x997 JUMP JUMPDEST PUSH2 0x207F PUSH1 0x0 DUP4 DUP4 PUSH2 0x1946 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2091 SWAP2 SWAP1 PUSH2 0x2869 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x20BE SWAP1 DUP5 SWAP1 PUSH2 0x2869 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A0C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0xC15 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC15 DUP4 DUP4 PUSH2 0x1F2A JUMP JUMPDEST PUSH2 0x2123 DUP3 PUSH2 0xD53 JUMP JUMPDEST ISZERO PUSH2 0x21B2 JUMPI PUSH1 0x0 PUSH2 0x2135 PUSH1 0xC DUP5 PUSH2 0x1254 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x219B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73666572436F6E74726F6C3A20616D6F756E74206578636565647320 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1CDC195B99081B1A5B5A5D PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x997 JUMP JUMPDEST PUSH2 0x12DD DUP4 PUSH2 0x21A9 DUP5 DUP5 PUSH2 0x2830 JUMP JUMPDEST PUSH1 0xC SWAP2 SWAP1 PUSH2 0x123E JUMP JUMPDEST PUSH3 0xF4240 PUSH1 0x10 SLOAD LT DUP1 ISZERO PUSH2 0x21DB JUMPI POP PUSH2 0x21D9 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x29EC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xC1C JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x9AA JUMPI PUSH1 0x0 PUSH32 0x0 PUSH2 0x222D PUSH32 0x0 TIMESTAMP PUSH2 0x2830 JUMP JUMPDEST PUSH2 0x2237 SWAP2 SWAP1 PUSH2 0x2847 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP PUSH2 0x225D DUP5 DUP4 PUSH2 0x2869 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 SWAP2 POP DUP4 SWAP1 SUB PUSH2 0x229F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 POP JUMPDEST PUSH1 0x0 PUSH3 0xF4240 PUSH1 0x10 SLOAD DUP5 PUSH2 0x22C8 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x22D2 SWAP2 SWAP1 PUSH2 0x2869 JUMP JUMPDEST PUSH2 0x22DC SWAP2 SWAP1 PUSH2 0x2881 JUMP JUMPDEST PUSH2 0x22E6 SWAP2 SWAP1 PUSH2 0x2847 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2353 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73666572436F6E74726F6C3A20616D6F756E74206578636565647320 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1C195C9A5BD9081CDC195B99081B1A5B5A5D PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x997 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP5 DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF SWAP1 SWAP2 MSTORE KECCAK256 SWAP1 MLOAD DUP2 SSTORE SWAP2 MLOAD PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x917 CALLER DUP3 PUSH2 0x23AE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x29EC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0xC1C JUMP JUMPDEST PUSH2 0x9AA JUMPI PUSH1 0x0 PUSH1 0x9 SLOAD GT DUP1 PUSH2 0x23C5 JUMPI POP PUSH1 0x0 PUSH1 0xA SLOAD GT JUMPDEST ISZERO PUSH2 0x9AA JUMPI PUSH1 0x0 PUSH2 0x23D5 DUP3 PUSH2 0xB93 JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 SWAP2 POP PUSH2 0x917 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x917 DUP4 DUP4 DUP4 PUSH2 0x23FB DUP4 DUP3 PUSH2 0x211A JUMP JUMPDEST PUSH2 0x917 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x246C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x2449 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x997 SWAP1 PUSH2 0x28D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x2484 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x247E SWAP2 SWAP1 PUSH2 0x2869 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x24C6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x24BB SWAP1 DUP5 SWAP1 PUSH2 0x2869 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x24DE SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x24D8 SWAP2 SWAP1 PUSH2 0x2830 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A0C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH1 0x40 MLOAD PUSH2 0x1227 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2523 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xC15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2556 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x253E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x12DD JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2586 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x253B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25CD DUP4 PUSH2 0x259A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC15 DUP3 PUSH2 0x259A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x260B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2614 DUP5 PUSH2 0x259A JUMP JUMPDEST SWAP3 POP PUSH2 0x2622 PUSH1 0x20 DUP6 ADD PUSH2 0x259A JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2644 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x265E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x266E PUSH1 0x20 DUP5 ADD PUSH2 0x259A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x268C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x26A3 PUSH1 0x40 DUP6 ADD PUSH2 0x259A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x26E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x26FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x270F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x271E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x2733 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP9 SWAP1 SWAP8 POP SWAP6 SWAP1 SWAP2 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2764 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x276D DUP9 PUSH2 0x259A JUMP JUMPDEST SWAP7 POP PUSH2 0x277B PUSH1 0x20 DUP10 ADD PUSH2 0x259A JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x279F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27D8 DUP4 PUSH2 0x259A JUMP JUMPDEST SWAP2 POP PUSH2 0x266E PUSH1 0x20 DUP5 ADD PUSH2 0x259A JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x27FA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1775 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2842 JUMPI PUSH2 0x2842 PUSH2 0x281A JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2864 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x287C JUMPI PUSH2 0x287C PUSH2 0x281A JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x289B JUMPI PUSH2 0x289B PUSH2 0x281A JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP1 DUP4 AND DUP2 DUP2 SUB PUSH2 0x28CD JUMPI PUSH2 0x28CD PUSH2 0x281A JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x2955 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x253B JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x2986 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x253B JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x29CD JUMPI PUSH2 0x29CD PUSH2 0x281A JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID SWAP16 0x2D CREATE INVALID 0xD2 0xC7 PUSH23 0x48DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C89 JUMP 0xA6 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 REVERT 0xB0 BYTE 0xAE 0xAC INVALID PUSH25 0x4C0BB692588BB7D71E9E4F4DD18017D1AEC146EA5E0232AC64 PUSH20 0x6F6C634300080F00330000000000000000000000 ","sourceMap":"450:1945:22:-:0;;;587:509;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;667:11;1835:52:10;;;;;;;;;;;;;-1:-1:-1;;;1835:52:10;;;1874:4;2455:602:16;;;;;;;;;;;;;-1:-1:-1;;;2455:602:16;;;766:10:22;:8;;;:10;;:::i;:::-;760:16;;:2;:16;:::i;:::-;741:35;;742:14;741:35;:::i;:::-;1978:113:5;;;;;;;;;;;;;-1:-1:-1;;;1978:113:5;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:113:5;;;2052:5;2044;:13;;;;;;:::i;:::-;-1:-1:-1;2067:7:5;:17;2077:7;2067;:17;:::i;:::-;;1978:113;;501:1:8;494:4;:8;486:42;;;;-1:-1:-1;;;486:42:8;;4981:2:27;486:42:8;;;4963:21:27;5020:2;5000:18;;;4993:30;5059:23;5039:18;;;5032:51;5100:18;;486:42:8;;;;;;;;538:11;;2541:22:16;;;;;;;;;;2597:25;;;;;;;;;2778;;;;2813:31;;;;2873:13;2854:32;;2651:117;2923:58;2651:117;2541:22;2597:25;3633:73;;;;;;5388:25:27;;;5429:18;;;5422:34;;;5472:18;;;5465:34;;;3677:13:16;5515:18:27;;;5508:34;3700:4:16;5558:19:27;;;5551:61;3597:7:16;;5360:19:27;;3633:73:16;;;;;;;;;;;;3623:84;;;;;;3616:91;;3457:257;;;;;;2923:58;2896:85;;3014:4;2991:28;;3029:21;;-1:-1:-1;;1231:15:24;1219:27;;-1:-1:-1;;;1256:24:24;;832:44:22::4;2072:4:0;863:12:22::0;832:10:::4;:44::i;:::-;886:37;232:24:21;910:12:22::0;886:10:::4;:37::i;:::-;933:48;475:35:21;968:12:22::0;933:10:::4;:48::i;:::-;991:47;386:34:21;1025:12:22::0;991:10:::4;:47::i;:::-;1048:41;304:28:21;1076:12:22::0;1048:10:::4;:41::i;:::-;587:509:::0;;450:1945;;3093:91:5;3175:2;;3093:91::o;1978:166:1:-;2065:31;2082:4;2088:7;2065:16;;;;;:31;;:::i;:::-;2106:18;;;;:12;:18;;;;;;;;:31;;2129:7;;2106:22;;;;;:31;;:::i;:::-;;1978:166;;:::o;7474:233:0:-;2981:4;3004:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3004:29:0;;;;;;;;;;;;7552:149;;7595:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;7595:29:0;;;;;;;;;:36;;-1:-1:-1;;7595:36:0;7627:4;7595:36;;;7677:12;719:10:12;;640:96;7677:12:0;-1:-1:-1;;;;;7650:40:0;7668:7;-1:-1:-1;;;;;7650:40:0;7662:4;7650:40;;;;;;;;;;7552:149;7474:233;;:::o;8028:150:20:-;8098:4;8121:50;8126:3;-1:-1:-1;;;;;8146:23:20;;8121:4;:50::i;:::-;8114:57;;8028:150;;;;;:::o;2113:404::-;2176:4;4250:19;;;:12;;;:19;;;;;;2192:319;;-1:-1:-1;2234:23:20;;;;;;;;:11;:23;;;;;;;;;;;;;2414:18;;2392:19;;;:12;;;:19;;;;;;:40;;;;2446:11;;2192:319;-1:-1:-1;2495:5:20;2488:12;;14:351:27;93:6;101;154:2;142:9;133:7;129:23;125:32;122:52;;;170:1;167;160:12;122:52;193:16;;252:2;237:18;;231:25;193:16;;-1:-1:-1;;;;;;285:31:27;;275:42;;265:70;;331:1;328;321:12;265:70;354:5;344:15;;;14:351;;;;;:::o;370:127::-;431:10;426:3;422:20;419:1;412:31;462:4;459:1;452:15;486:4;483:1;476:15;502:422;591:1;634:5;591:1;648:270;669:7;659:8;656:21;648:270;;;728:4;724:1;720:6;716:17;710:4;707:27;704:53;;;737:18;;:::i;:::-;787:7;777:8;773:22;770:55;;;807:16;;;;770:55;886:22;;;;846:15;;;;648:270;;;652:3;502:422;;;;;:::o;929:806::-;978:5;1008:8;998:80;;-1:-1:-1;1049:1:27;1063:5;;998:80;1097:4;1087:76;;-1:-1:-1;1134:1:27;1148:5;;1087:76;1179:4;1197:1;1192:59;;;;1265:1;1260:130;;;;1172:218;;1192:59;1222:1;1213:10;;1236:5;;;1260:130;1297:3;1287:8;1284:17;1281:43;;;1304:18;;:::i;:::-;-1:-1:-1;;1360:1:27;1346:16;;1375:5;;1172:218;;1474:2;1464:8;1461:16;1455:3;1449:4;1446:13;1442:36;1436:2;1426:8;1423:16;1418:2;1412:4;1409:12;1405:35;1402:77;1399:159;;;-1:-1:-1;1511:19:27;;;1543:5;;1399:159;1590:34;1615:8;1609:4;1590:34;:::i;:::-;1660:6;1656:1;1652:6;1648:19;1639:7;1636:32;1633:58;;;1671:18;;:::i;:::-;1709:20;;929:806;-1:-1:-1;;;929:806:27:o;1740:140::-;1798:5;1827:47;1868:4;1858:8;1854:19;1848:4;1827:47;:::i;1885:168::-;1925:7;1991:1;1987;1983:6;1979:14;1976:1;1973:21;1968:1;1961:9;1954:17;1950:45;1947:71;;;1998:18;;:::i;:::-;-1:-1:-1;2038:9:27;;1885:168::o;2058:127::-;2119:10;2114:3;2110:20;2107:1;2100:31;2150:4;2147:1;2140:15;2174:4;2171:1;2164:15;2190:380;2269:1;2265:12;;;;2312;;;2333:61;;2387:4;2379:6;2375:17;2365:27;;2333:61;2440:2;2432:6;2429:14;2409:18;2406:38;2403:161;;2486:10;2481:3;2477:20;2474:1;2467:31;2521:4;2518:1;2511:15;2549:4;2546:1;2539:15;2403:161;;2190:380;;;:::o;2701:545::-;2803:2;2798:3;2795:11;2792:448;;;2839:1;2864:5;2860:2;2853:17;2909:4;2905:2;2895:19;2979:2;2967:10;2963:19;2960:1;2956:27;2950:4;2946:38;3015:4;3003:10;3000:20;2997:47;;;-1:-1:-1;3038:4:27;2997:47;3093:2;3088:3;3084:12;3081:1;3077:20;3071:4;3067:31;3057:41;;3148:82;3166:2;3159:5;3156:13;3148:82;;;3211:17;;;3192:1;3181:13;3148:82;;;3152:3;;;2701:545;;;:::o;3422:1352::-;3542:10;;-1:-1:-1;;;;;3564:30:27;;3561:56;;;3597:18;;:::i;:::-;3626:97;3716:6;3676:38;3708:4;3702:11;3676:38;:::i;:::-;3670:4;3626:97;:::i;:::-;3778:4;;3842:2;3831:14;;3859:1;3854:663;;;;4561:1;4578:6;4575:89;;;-1:-1:-1;4630:19:27;;;4624:26;4575:89;-1:-1:-1;;3379:1:27;3375:11;;;3371:24;3367:29;3357:40;3403:1;3399:11;;;3354:57;4677:81;;3824:944;;3854:663;2648:1;2641:14;;;2685:4;2672:18;;-1:-1:-1;;3890:20:27;;;4008:236;4022:7;4019:1;4016:14;4008:236;;;4111:19;;;4105:26;4090:42;;4203:27;;;;4171:1;4159:14;;;;4038:19;;4008:236;;;4012:3;4272:6;4263:7;4260:19;4257:201;;;4333:19;;;4327:26;-1:-1:-1;;4416:1:27;4412:14;;;4428:3;4408:24;4404:37;4400:42;4385:58;4370:74;;4257:201;-1:-1:-1;;;;;4504:1:27;4488:14;;;4484:22;4471:36;;-1:-1:-1;3422:1352:27:o;5129:489::-;450:1945:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_ADMIN_ROLE_27":{"entryPoint":null,"id":27,"parameterSlots":0,"returnSlots":0},"@DOMAIN_SEPARATOR_1666":{"entryPoint":2332,"id":1666,"parameterSlots":0,"returnSlots":1},"@MINTER_ROLE_4363":{"entryPoint":null,"id":4363,"parameterSlots":0,"returnSlots":0},"@RESTRICTOR_ROLE_4368":{"entryPoint":null,"id":4368,"parameterSlots":0,"returnSlots":0},"@TRANSACTION_FEE_SETTER_4378":{"entryPoint":null,"id":4378,"parameterSlots":0,"returnSlots":0},"@TRANSFER_LIMIT_SETTER_4373":{"entryPoint":null,"id":4373,"parameterSlots":0,"returnSlots":0},"@_add_3807":{"entryPoint":6150,"id":3807,"parameterSlots":2,"returnSlots":1},"@_afterTokenTransfer_1311":{"entryPoint":null,"id":1311,"parameterSlots":3,"returnSlots":0},"@_approve_1246":{"entryPoint":4367,"id":1246,"parameterSlots":3,"returnSlots":0},"@_at_3941":{"entryPoint":6746,"id":3941,"parameterSlots":2,"returnSlots":1},"@_beforeTokenTransfer_1300":{"entryPoint":null,"id":1300,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_4544":{"entryPoint":6470,"id":4544,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_4750":{"entryPoint":9105,"id":4750,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_5143":{"entryPoint":7928,"id":5143,"parameterSlots":3,"returnSlots":0},"@_buildDomainSeparator_2579":{"entryPoint":null,"id":2579,"parameterSlots":3,"returnSlots":1},"@_burn_1201":{"entryPoint":5600,"id":1201,"parameterSlots":2,"returnSlots":0},"@_checkRole_135":{"entryPoint":6229,"id":135,"parameterSlots":2,"returnSlots":0},"@_checkRole_92":{"entryPoint":4660,"id":92,"parameterSlots":1,"returnSlots":0},"@_contains_3910":{"entryPoint":null,"id":3910,"parameterSlots":2,"returnSlots":1},"@_domainSeparatorV4_2552":{"entryPoint":5261,"id":2552,"parameterSlots":0,"returnSlots":1},"@_grantRole_287":{"entryPoint":4159,"id":287,"parameterSlots":2,"returnSlots":0},"@_grantRole_419":{"entryPoint":5227,"id":419,"parameterSlots":2,"returnSlots":0},"@_hashTypedDataV4_2595":{"entryPoint":6011,"id":2595,"parameterSlots":1,"returnSlots":1},"@_length_3924":{"entryPoint":null,"id":3924,"parameterSlots":1,"returnSlots":1},"@_mint_1129":{"entryPoint":8221,"id":1129,"parameterSlots":2,"returnSlots":0},"@_mint_1498":{"entryPoint":6605,"id":1498,"parameterSlots":2,"returnSlots":0},"@_mint_4522":{"entryPoint":5590,"id":4522,"parameterSlots":2,"returnSlots":0},"@_msgSender_1744":{"entryPoint":null,"id":1744,"parameterSlots":0,"returnSlots":1},"@_payTransactionFee_4725":{"entryPoint":null,"id":4725,"parameterSlots":2,"returnSlots":0},"@_pureTransfer_1073":{"entryPoint":null,"id":1073,"parameterSlots":3,"returnSlots":0},"@_pureTransfer_4565":{"entryPoint":null,"id":4565,"parameterSlots":3,"returnSlots":0},"@_pureTransfer_5167":{"entryPoint":null,"id":5167,"parameterSlots":3,"returnSlots":0},"@_remove_3891":{"entryPoint":7978,"id":3891,"parameterSlots":2,"returnSlots":1},"@_revokeRole_318":{"entryPoint":6481,"id":318,"parameterSlots":2,"returnSlots":0},"@_revokeRole_443":{"entryPoint":5556,"id":443,"parameterSlots":2,"returnSlots":0},"@_spendAllowance_1289":{"entryPoint":4713,"id":1289,"parameterSlots":3,"returnSlots":0},"@_spend_5104":{"entryPoint":8474,"id":5104,"parameterSlots":2,"returnSlots":0},"@_throwError_2118":{"entryPoint":7037,"id":2118,"parameterSlots":1,"returnSlots":0},"@_transfer_1002":{"entryPoint":4835,"id":1002,"parameterSlots":3,"returnSlots":0},"@_useNonce_1695":{"entryPoint":5971,"id":1695,"parameterSlots":1,"returnSlots":1},"@add_3977":{"entryPoint":7916,"id":3977,"parameterSlots":2,"returnSlots":1},"@add_4093":{"entryPoint":4293,"id":4093,"parameterSlots":2,"returnSlots":1},"@allowance_797":{"entryPoint":3840,"id":797,"parameterSlots":2,"returnSlots":1},"@approve_822":{"entryPoint":1718,"id":822,"parameterSlots":2,"returnSlots":1},"@at_4189":{"entryPoint":5928,"id":4189,"parameterSlots":2,"returnSlots":1},"@balanceOf_754":{"entryPoint":null,"id":754,"parameterSlots":1,"returnSlots":1},"@burnFrom_1433":{"entryPoint":3018,"id":1433,"parameterSlots":2,"returnSlots":0},"@burn_1412":{"entryPoint":2950,"id":1412,"parameterSlots":1,"returnSlots":0},"@canSpend_4985":{"entryPoint":1868,"id":4985,"parameterSlots":1,"returnSlots":1},"@cap_1469":{"entryPoint":null,"id":1469,"parameterSlots":0,"returnSlots":1},"@contains_2718":{"entryPoint":6788,"id":2718,"parameterSlots":2,"returnSlots":1},"@contains_3409":{"entryPoint":5940,"id":3409,"parameterSlots":2,"returnSlots":1},"@contains_4013":{"entryPoint":8438,"id":4013,"parameterSlots":2,"returnSlots":1},"@current_1772":{"entryPoint":null,"id":1772,"parameterSlots":1,"returnSlots":1},"@decimals_730":{"entryPoint":null,"id":730,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_925":{"entryPoint":3158,"id":925,"parameterSlots":2,"returnSlots":1},"@district_4884":{"entryPoint":3883,"id":4884,"parameterSlots":1,"returnSlots":0},"@feeDetails_4657":{"entryPoint":null,"id":4657,"parameterSlots":0,"returnSlots":3},"@getRoleAdmin_150":{"entryPoint":null,"id":150,"parameterSlots":1,"returnSlots":1},"@getRoleMemberCount_395":{"entryPoint":3424,"id":395,"parameterSlots":1,"returnSlots":1},"@getRoleMember_379":{"entryPoint":3069,"id":379,"parameterSlots":2,"returnSlots":1},"@get_2839":{"entryPoint":6358,"id":2839,"parameterSlots":2,"returnSlots":1},"@get_3534":{"entryPoint":4692,"id":3534,"parameterSlots":2,"returnSlots":1},"@grantRole_170":{"entryPoint":2290,"id":170,"parameterSlots":2,"returnSlots":0},"@hasRole_79":{"entryPoint":3100,"id":79,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_884":{"entryPoint":2882,"id":884,"parameterSlots":2,"returnSlots":1},"@increment_1786":{"entryPoint":null,"id":1786,"parameterSlots":1,"returnSlots":0},"@isRestricted_4898":{"entryPoint":3411,"id":4898,"parameterSlots":1,"returnSlots":1},"@length_4162":{"entryPoint":5961,"id":4162,"parameterSlots":1,"returnSlots":1},"@mintBatch_4487":{"entryPoint":3295,"id":4487,"parameterSlots":3,"returnSlots":0},"@mint_4504":{"entryPoint":2916,"id":4504,"parameterSlots":2,"returnSlots":0},"@name_710":{"entryPoint":1572,"id":710,"parameterSlots":0,"returnSlots":1},"@nonces_1655":{"entryPoint":3039,"id":1655,"parameterSlots":1,"returnSlots":1},"@monthlyLimit_4781":{"entryPoint":null,"id":4781,"parameterSlots":0,"returnSlots":0},"@permit_1639":{"entryPoint":3447,"id":1639,"parameterSlots":7,"returnSlots":0},"@recover_2382":{"entryPoint":6089,"id":2382,"parameterSlots":4,"returnSlots":1},"@remove_2700":{"entryPoint":7475,"id":2700,"parameterSlots":2,"returnSlots":1},"@remove_3382":{"entryPoint":6129,"id":3382,"parameterSlots":2,"returnSlots":1},"@remove_3995":{"entryPoint":8462,"id":3995,"parameterSlots":2,"returnSlots":1},"@remove_4120":{"entryPoint":6584,"id":4120,"parameterSlots":2,"returnSlots":1},"@renounceRole_213":{"entryPoint":2347,"id":213,"parameterSlots":2,"returnSlots":0},"@restrict_4868":{"entryPoint":1742,"id":4868,"parameterSlots":2,"returnSlots":0},"@revokeRole_190":{"entryPoint":3803,"id":190,"parameterSlots":2,"returnSlots":0},"@setPeriodTransferLimit_4844":{"entryPoint":3936,"id":4844,"parameterSlots":1,"returnSlots":0},"@setTransactionFee_4642":{"entryPoint":2478,"id":4642,"parameterSlots":3,"returnSlots":0},"@set_2676":{"entryPoint":6329,"id":2676,"parameterSlots":3,"returnSlots":1},"@set_3355":{"entryPoint":4670,"id":3355,"parameterSlots":3,"returnSlots":1},"@supportsInterface_2619":{"entryPoint":null,"id":2619,"parameterSlots":1,"returnSlots":1},"@supportsInterface_360":{"entryPoint":1529,"id":360,"parameterSlots":1,"returnSlots":1},"@supportsInterface_60":{"entryPoint":4314,"id":60,"parameterSlots":1,"returnSlots":1},"@symbol_720":{"entryPoint":3143,"id":720,"parameterSlots":0,"returnSlots":1},"@toHexString_2033":{"entryPoint":7504,"id":2033,"parameterSlots":2,"returnSlots":1},"@toTypedDataHash_2441":{"entryPoint":null,"id":2441,"parameterSlots":2,"returnSlots":1},"@totalSupply_740":{"entryPoint":null,"id":740,"parameterSlots":0,"returnSlots":1},"@transactionFee_4688":{"entryPoint":2963,"id":4688,"parameterSlots":1,"returnSlots":1},"@transferFrom_855":{"entryPoint":2254,"id":855,"parameterSlots":3,"returnSlots":1},"@transfer_779":{"entryPoint":3281,"id":779,"parameterSlots":2,"returnSlots":1},"@tryRecover_2349":{"entryPoint":6800,"id":2349,"parameterSlots":4,"returnSlots":2},"abi_decode_address":{"entryPoint":9626,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":9691,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":10172,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":9718,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":10057,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":9649,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_uint256":{"entryPoint":9934,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_bytes32":{"entryPoint":9778,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":9803,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes32t_uint256":{"entryPoint":9900,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":9489,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_uint256t_address":{"entryPoint":9847,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":10525,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":9575,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3a4f2f6554dd45b81f0d9c44a3f8e422650ccfa40cb95b75fc0a1fdd1f2216d7__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":10455,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4a8e7a3c5a1659064fd99c67e76041fb4b802796f373261324535ea7060d295a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7444501452abd4aa62f22c1aadb9716af04f8b5e8d1b8f876d7bf930338b4894__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8404985d158493dcb8888b28d97ab7d03a6fd3b5993fc007df71079e84dcd25e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_ba6e7714f3dc9672dee4a937817bb8127b845248a8b5fa5f809e162d8db55ab5__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_d3551e30d3095fd81287b88f7139bb09818e34280e85ee821994ebaebbed7072__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":10345,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_t_uint256":{"entryPoint":10311,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":10369,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":10288,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":9531,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_t_uint256":{"entryPoint":10686,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":10214,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint16":{"entryPoint":10422,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":10266,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":10642,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":10709,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":10400,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":10664,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:20925:27","statements":[{"nodeType":"YulBlock","src":"6:3:27","statements":[]},{"body":{"nodeType":"YulBlock","src":"83:217:27","statements":[{"body":{"nodeType":"YulBlock","src":"129:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"138:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"141:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"131:6:27"},"nodeType":"YulFunctionCall","src":"131:12:27"},"nodeType":"YulExpressionStatement","src":"131:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"104:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"113:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"100:3:27"},"nodeType":"YulFunctionCall","src":"100:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"125:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"96:3:27"},"nodeType":"YulFunctionCall","src":"96:32:27"},"nodeType":"YulIf","src":"93:52:27"},{"nodeType":"YulVariableDeclaration","src":"154:36:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"180:9:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"167:12:27"},"nodeType":"YulFunctionCall","src":"167:23:27"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"158:5:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"254:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"263:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"266:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"256:6:27"},"nodeType":"YulFunctionCall","src":"256:12:27"},"nodeType":"YulExpressionStatement","src":"256:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"212:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"234:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"239:10:27","type":"","value":"0xffffffff"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"230:3:27"},"nodeType":"YulFunctionCall","src":"230:20:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"219:3:27"},"nodeType":"YulFunctionCall","src":"219:32:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"209:2:27"},"nodeType":"YulFunctionCall","src":"209:43:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"202:6:27"},"nodeType":"YulFunctionCall","src":"202:51:27"},"nodeType":"YulIf","src":"199:71:27"},{"nodeType":"YulAssignment","src":"279:15:27","value":{"name":"value","nodeType":"YulIdentifier","src":"289:5:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"279:6:27"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"60:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"72:6:27","type":""}],"src":"14:286:27"},{"body":{"nodeType":"YulBlock","src":"400:92:27","statements":[{"nodeType":"YulAssignment","src":"410:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"422:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"433:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"418:3:27"},"nodeType":"YulFunctionCall","src":"418:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"410:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"452:9:27"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"477:6:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"470:6:27"},"nodeType":"YulFunctionCall","src":"470:14:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"463:6:27"},"nodeType":"YulFunctionCall","src":"463:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"445:6:27"},"nodeType":"YulFunctionCall","src":"445:41:27"},"nodeType":"YulExpressionStatement","src":"445:41:27"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"369:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"380:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"391:4:27","type":""}],"src":"305:187:27"},{"body":{"nodeType":"YulBlock","src":"550:205:27","statements":[{"nodeType":"YulVariableDeclaration","src":"560:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"569:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"564:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"629:63:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"654:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"659:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"650:3:27"},"nodeType":"YulFunctionCall","src":"650:11:27"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"673:3:27"},{"name":"i","nodeType":"YulIdentifier","src":"678:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"669:3:27"},"nodeType":"YulFunctionCall","src":"669:11:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"663:5:27"},"nodeType":"YulFunctionCall","src":"663:18:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"643:6:27"},"nodeType":"YulFunctionCall","src":"643:39:27"},"nodeType":"YulExpressionStatement","src":"643:39:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"590:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"593:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"587:2:27"},"nodeType":"YulFunctionCall","src":"587:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"601:19:27","statements":[{"nodeType":"YulAssignment","src":"603:15:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"612:1:27"},{"kind":"number","nodeType":"YulLiteral","src":"615:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"608:3:27"},"nodeType":"YulFunctionCall","src":"608:10:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"603:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"583:3:27","statements":[]},"src":"579:113:27"},{"body":{"nodeType":"YulBlock","src":"718:31:27","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"731:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"736:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"727:3:27"},"nodeType":"YulFunctionCall","src":"727:16:27"},{"kind":"number","nodeType":"YulLiteral","src":"745:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"720:6:27"},"nodeType":"YulFunctionCall","src":"720:27:27"},"nodeType":"YulExpressionStatement","src":"720:27:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"707:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"710:6:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"704:2:27"},"nodeType":"YulFunctionCall","src":"704:13:27"},"nodeType":"YulIf","src":"701:48:27"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"528:3:27","type":""},{"name":"dst","nodeType":"YulTypedName","src":"533:3:27","type":""},{"name":"length","nodeType":"YulTypedName","src":"538:6:27","type":""}],"src":"497:258:27"},{"body":{"nodeType":"YulBlock","src":"881:262:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"898:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"909:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"891:6:27"},"nodeType":"YulFunctionCall","src":"891:21:27"},"nodeType":"YulExpressionStatement","src":"891:21:27"},{"nodeType":"YulVariableDeclaration","src":"921:27:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"941:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"935:5:27"},"nodeType":"YulFunctionCall","src":"935:13:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"925:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"968:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"979:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"964:3:27"},"nodeType":"YulFunctionCall","src":"964:18:27"},{"name":"length","nodeType":"YulIdentifier","src":"984:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"957:6:27"},"nodeType":"YulFunctionCall","src":"957:34:27"},"nodeType":"YulExpressionStatement","src":"957:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1026:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1034:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1022:3:27"},"nodeType":"YulFunctionCall","src":"1022:15:27"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1043:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1054:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1039:3:27"},"nodeType":"YulFunctionCall","src":"1039:18:27"},{"name":"length","nodeType":"YulIdentifier","src":"1059:6:27"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"1000:21:27"},"nodeType":"YulFunctionCall","src":"1000:66:27"},"nodeType":"YulExpressionStatement","src":"1000:66:27"},{"nodeType":"YulAssignment","src":"1075:62:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1091:9:27"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1110:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1118:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1106:3:27"},"nodeType":"YulFunctionCall","src":"1106:15:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1127:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1123:3:27"},"nodeType":"YulFunctionCall","src":"1123:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1102:3:27"},"nodeType":"YulFunctionCall","src":"1102:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1087:3:27"},"nodeType":"YulFunctionCall","src":"1087:45:27"},{"kind":"number","nodeType":"YulLiteral","src":"1134:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1083:3:27"},"nodeType":"YulFunctionCall","src":"1083:54:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1075:4:27"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"850:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"861:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"872:4:27","type":""}],"src":"760:383:27"},{"body":{"nodeType":"YulBlock","src":"1197:124:27","statements":[{"nodeType":"YulAssignment","src":"1207:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1229:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1216:12:27"},"nodeType":"YulFunctionCall","src":"1216:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1207:5:27"}]},{"body":{"nodeType":"YulBlock","src":"1299:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1308:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1311:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1301:6:27"},"nodeType":"YulFunctionCall","src":"1301:12:27"},"nodeType":"YulExpressionStatement","src":"1301:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1258:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1269:5:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1284:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"1289:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1280:3:27"},"nodeType":"YulFunctionCall","src":"1280:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"1293:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1276:3:27"},"nodeType":"YulFunctionCall","src":"1276:19:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1265:3:27"},"nodeType":"YulFunctionCall","src":"1265:31:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1255:2:27"},"nodeType":"YulFunctionCall","src":"1255:42:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1248:6:27"},"nodeType":"YulFunctionCall","src":"1248:50:27"},"nodeType":"YulIf","src":"1245:70:27"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1176:6:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1187:5:27","type":""}],"src":"1148:173:27"},{"body":{"nodeType":"YulBlock","src":"1413:167:27","statements":[{"body":{"nodeType":"YulBlock","src":"1459:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1468:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1471:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1461:6:27"},"nodeType":"YulFunctionCall","src":"1461:12:27"},"nodeType":"YulExpressionStatement","src":"1461:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1434:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"1443:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1430:3:27"},"nodeType":"YulFunctionCall","src":"1430:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"1455:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1426:3:27"},"nodeType":"YulFunctionCall","src":"1426:32:27"},"nodeType":"YulIf","src":"1423:52:27"},{"nodeType":"YulAssignment","src":"1484:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1513:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1494:18:27"},"nodeType":"YulFunctionCall","src":"1494:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1484:6:27"}]},{"nodeType":"YulAssignment","src":"1532:42:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1559:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1570:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1555:3:27"},"nodeType":"YulFunctionCall","src":"1555:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1542:12:27"},"nodeType":"YulFunctionCall","src":"1542:32:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1532:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1371:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1382:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1394:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1402:6:27","type":""}],"src":"1326:254:27"},{"body":{"nodeType":"YulBlock","src":"1686:76:27","statements":[{"nodeType":"YulAssignment","src":"1696:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1708:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1719:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1704:3:27"},"nodeType":"YulFunctionCall","src":"1704:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1696:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1738:9:27"},{"name":"value0","nodeType":"YulIdentifier","src":"1749:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1731:6:27"},"nodeType":"YulFunctionCall","src":"1731:25:27"},"nodeType":"YulExpressionStatement","src":"1731:25:27"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1655:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1666:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1677:4:27","type":""}],"src":"1585:177:27"},{"body":{"nodeType":"YulBlock","src":"1868:76:27","statements":[{"nodeType":"YulAssignment","src":"1878:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1890:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1901:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1886:3:27"},"nodeType":"YulFunctionCall","src":"1886:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1878:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1920:9:27"},{"name":"value0","nodeType":"YulIdentifier","src":"1931:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1913:6:27"},"nodeType":"YulFunctionCall","src":"1913:25:27"},"nodeType":"YulExpressionStatement","src":"1913:25:27"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1837:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1848:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1859:4:27","type":""}],"src":"1767:177:27"},{"body":{"nodeType":"YulBlock","src":"2106:188:27","statements":[{"nodeType":"YulAssignment","src":"2116:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2128:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2139:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2124:3:27"},"nodeType":"YulFunctionCall","src":"2124:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2116:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2158:9:27"},{"name":"value0","nodeType":"YulIdentifier","src":"2169:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2151:6:27"},"nodeType":"YulFunctionCall","src":"2151:25:27"},"nodeType":"YulExpressionStatement","src":"2151:25:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2196:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2207:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2192:3:27"},"nodeType":"YulFunctionCall","src":"2192:18:27"},{"name":"value1","nodeType":"YulIdentifier","src":"2212:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2185:6:27"},"nodeType":"YulFunctionCall","src":"2185:34:27"},"nodeType":"YulExpressionStatement","src":"2185:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2239:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2250:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2235:3:27"},"nodeType":"YulFunctionCall","src":"2235:18:27"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"2259:6:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2275:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2280:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2271:3:27"},"nodeType":"YulFunctionCall","src":"2271:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"2284:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2267:3:27"},"nodeType":"YulFunctionCall","src":"2267:19:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2255:3:27"},"nodeType":"YulFunctionCall","src":"2255:32:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2228:6:27"},"nodeType":"YulFunctionCall","src":"2228:60:27"},"nodeType":"YulExpressionStatement","src":"2228:60:27"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2059:9:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2070:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2078:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2086:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2097:4:27","type":""}],"src":"1949:345:27"},{"body":{"nodeType":"YulBlock","src":"2369:116:27","statements":[{"body":{"nodeType":"YulBlock","src":"2415:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2424:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2427:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2417:6:27"},"nodeType":"YulFunctionCall","src":"2417:12:27"},"nodeType":"YulExpressionStatement","src":"2417:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2390:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2399:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2386:3:27"},"nodeType":"YulFunctionCall","src":"2386:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"2411:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2382:3:27"},"nodeType":"YulFunctionCall","src":"2382:32:27"},"nodeType":"YulIf","src":"2379:52:27"},{"nodeType":"YulAssignment","src":"2440:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2469:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2450:18:27"},"nodeType":"YulFunctionCall","src":"2450:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2440:6:27"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2335:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2346:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2358:6:27","type":""}],"src":"2299:186:27"},{"body":{"nodeType":"YulBlock","src":"2594:224:27","statements":[{"body":{"nodeType":"YulBlock","src":"2640:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2649:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2652:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2642:6:27"},"nodeType":"YulFunctionCall","src":"2642:12:27"},"nodeType":"YulExpressionStatement","src":"2642:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2615:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2624:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2611:3:27"},"nodeType":"YulFunctionCall","src":"2611:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"2636:2:27","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2607:3:27"},"nodeType":"YulFunctionCall","src":"2607:32:27"},"nodeType":"YulIf","src":"2604:52:27"},{"nodeType":"YulAssignment","src":"2665:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2694:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2675:18:27"},"nodeType":"YulFunctionCall","src":"2675:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2665:6:27"}]},{"nodeType":"YulAssignment","src":"2713:48:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2746:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2757:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2742:3:27"},"nodeType":"YulFunctionCall","src":"2742:18:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2723:18:27"},"nodeType":"YulFunctionCall","src":"2723:38:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2713:6:27"}]},{"nodeType":"YulAssignment","src":"2770:42:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2797:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2808:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2793:3:27"},"nodeType":"YulFunctionCall","src":"2793:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2780:12:27"},"nodeType":"YulFunctionCall","src":"2780:32:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2770:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2544:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2555:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2567:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2575:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2583:6:27","type":""}],"src":"2490:328:27"},{"body":{"nodeType":"YulBlock","src":"2893:110:27","statements":[{"body":{"nodeType":"YulBlock","src":"2939:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2948:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2951:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2941:6:27"},"nodeType":"YulFunctionCall","src":"2941:12:27"},"nodeType":"YulExpressionStatement","src":"2941:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2914:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2923:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2910:3:27"},"nodeType":"YulFunctionCall","src":"2910:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"2935:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2906:3:27"},"nodeType":"YulFunctionCall","src":"2906:32:27"},"nodeType":"YulIf","src":"2903:52:27"},{"nodeType":"YulAssignment","src":"2964:33:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2987:9:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2974:12:27"},"nodeType":"YulFunctionCall","src":"2974:23:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2964:6:27"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2859:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2870:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2882:6:27","type":""}],"src":"2823:180:27"},{"body":{"nodeType":"YulBlock","src":"3095:167:27","statements":[{"body":{"nodeType":"YulBlock","src":"3141:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3150:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3153:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3143:6:27"},"nodeType":"YulFunctionCall","src":"3143:12:27"},"nodeType":"YulExpressionStatement","src":"3143:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3116:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"3125:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3112:3:27"},"nodeType":"YulFunctionCall","src":"3112:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"3137:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3108:3:27"},"nodeType":"YulFunctionCall","src":"3108:32:27"},"nodeType":"YulIf","src":"3105:52:27"},{"nodeType":"YulAssignment","src":"3166:33:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3189:9:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3176:12:27"},"nodeType":"YulFunctionCall","src":"3176:23:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3166:6:27"}]},{"nodeType":"YulAssignment","src":"3208:48:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3241:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3252:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3237:3:27"},"nodeType":"YulFunctionCall","src":"3237:18:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3218:18:27"},"nodeType":"YulFunctionCall","src":"3218:38:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3208:6:27"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3053:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3064:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3076:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3084:6:27","type":""}],"src":"3008:254:27"},{"body":{"nodeType":"YulBlock","src":"3364:87:27","statements":[{"nodeType":"YulAssignment","src":"3374:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3386:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3397:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3382:3:27"},"nodeType":"YulFunctionCall","src":"3382:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3374:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3416:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3431:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3439:4:27","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3427:3:27"},"nodeType":"YulFunctionCall","src":"3427:17:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3409:6:27"},"nodeType":"YulFunctionCall","src":"3409:36:27"},"nodeType":"YulExpressionStatement","src":"3409:36:27"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3333:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3344:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3355:4:27","type":""}],"src":"3267:184:27"},{"body":{"nodeType":"YulBlock","src":"3560:218:27","statements":[{"body":{"nodeType":"YulBlock","src":"3606:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3615:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3618:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3608:6:27"},"nodeType":"YulFunctionCall","src":"3608:12:27"},"nodeType":"YulExpressionStatement","src":"3608:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3581:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"3590:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3577:3:27"},"nodeType":"YulFunctionCall","src":"3577:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"3602:2:27","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3573:3:27"},"nodeType":"YulFunctionCall","src":"3573:32:27"},"nodeType":"YulIf","src":"3570:52:27"},{"nodeType":"YulAssignment","src":"3631:33:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3654:9:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3641:12:27"},"nodeType":"YulFunctionCall","src":"3641:23:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3631:6:27"}]},{"nodeType":"YulAssignment","src":"3673:42:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3700:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3711:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3696:3:27"},"nodeType":"YulFunctionCall","src":"3696:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3683:12:27"},"nodeType":"YulFunctionCall","src":"3683:32:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3673:6:27"}]},{"nodeType":"YulAssignment","src":"3724:48:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3757:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3768:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3753:3:27"},"nodeType":"YulFunctionCall","src":"3753:18:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"3734:18:27"},"nodeType":"YulFunctionCall","src":"3734:38:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"3724:6:27"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3510:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3521:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3533:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3541:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3549:6:27","type":""}],"src":"3456:322:27"},{"body":{"nodeType":"YulBlock","src":"3853:110:27","statements":[{"body":{"nodeType":"YulBlock","src":"3899:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3908:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3911:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3901:6:27"},"nodeType":"YulFunctionCall","src":"3901:12:27"},"nodeType":"YulExpressionStatement","src":"3901:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3874:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"3883:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3870:3:27"},"nodeType":"YulFunctionCall","src":"3870:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"3895:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3866:3:27"},"nodeType":"YulFunctionCall","src":"3866:32:27"},"nodeType":"YulIf","src":"3863:52:27"},{"nodeType":"YulAssignment","src":"3924:33:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3947:9:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3934:12:27"},"nodeType":"YulFunctionCall","src":"3934:23:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3924:6:27"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3819:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3830:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3842:6:27","type":""}],"src":"3783:180:27"},{"body":{"nodeType":"YulBlock","src":"4055:161:27","statements":[{"body":{"nodeType":"YulBlock","src":"4101:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4110:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4113:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4103:6:27"},"nodeType":"YulFunctionCall","src":"4103:12:27"},"nodeType":"YulExpressionStatement","src":"4103:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4076:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"4085:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4072:3:27"},"nodeType":"YulFunctionCall","src":"4072:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"4097:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4068:3:27"},"nodeType":"YulFunctionCall","src":"4068:32:27"},"nodeType":"YulIf","src":"4065:52:27"},{"nodeType":"YulAssignment","src":"4126:33:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4149:9:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4136:12:27"},"nodeType":"YulFunctionCall","src":"4136:23:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4126:6:27"}]},{"nodeType":"YulAssignment","src":"4168:42:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4195:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4206:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4191:3:27"},"nodeType":"YulFunctionCall","src":"4191:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4178:12:27"},"nodeType":"YulFunctionCall","src":"4178:32:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4168:6:27"}]}]},"name":"abi_decode_tuple_t_bytes32t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4013:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4024:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4036:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4044:6:27","type":""}],"src":"3968:248:27"},{"body":{"nodeType":"YulBlock","src":"4322:102:27","statements":[{"nodeType":"YulAssignment","src":"4332:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4344:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4355:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4340:3:27"},"nodeType":"YulFunctionCall","src":"4340:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4332:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4374:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4389:6:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4405:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"4410:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4401:3:27"},"nodeType":"YulFunctionCall","src":"4401:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"4414:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4397:3:27"},"nodeType":"YulFunctionCall","src":"4397:19:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4385:3:27"},"nodeType":"YulFunctionCall","src":"4385:32:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4367:6:27"},"nodeType":"YulFunctionCall","src":"4367:51:27"},"nodeType":"YulExpressionStatement","src":"4367:51:27"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4291:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4302:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4313:4:27","type":""}],"src":"4221:203:27"},{"body":{"nodeType":"YulBlock","src":"4551:567:27","statements":[{"body":{"nodeType":"YulBlock","src":"4597:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4606:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4609:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4599:6:27"},"nodeType":"YulFunctionCall","src":"4599:12:27"},"nodeType":"YulExpressionStatement","src":"4599:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4572:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"4581:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4568:3:27"},"nodeType":"YulFunctionCall","src":"4568:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"4593:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4564:3:27"},"nodeType":"YulFunctionCall","src":"4564:32:27"},"nodeType":"YulIf","src":"4561:52:27"},{"nodeType":"YulVariableDeclaration","src":"4622:37:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4649:9:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4636:12:27"},"nodeType":"YulFunctionCall","src":"4636:23:27"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4626:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4668:28:27","value":{"kind":"number","nodeType":"YulLiteral","src":"4678:18:27","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"4672:2:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"4723:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4732:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4735:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4725:6:27"},"nodeType":"YulFunctionCall","src":"4725:12:27"},"nodeType":"YulExpressionStatement","src":"4725:12:27"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4711:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"4719:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4708:2:27"},"nodeType":"YulFunctionCall","src":"4708:14:27"},"nodeType":"YulIf","src":"4705:34:27"},{"nodeType":"YulVariableDeclaration","src":"4748:32:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4762:9:27"},{"name":"offset","nodeType":"YulIdentifier","src":"4773:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4758:3:27"},"nodeType":"YulFunctionCall","src":"4758:22:27"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"4752:2:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"4828:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4837:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4840:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4830:6:27"},"nodeType":"YulFunctionCall","src":"4830:12:27"},"nodeType":"YulExpressionStatement","src":"4830:12:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4807:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"4811:4:27","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4803:3:27"},"nodeType":"YulFunctionCall","src":"4803:13:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4818:7:27"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4799:3:27"},"nodeType":"YulFunctionCall","src":"4799:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4792:6:27"},"nodeType":"YulFunctionCall","src":"4792:35:27"},"nodeType":"YulIf","src":"4789:55:27"},{"nodeType":"YulVariableDeclaration","src":"4853:30:27","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4880:2:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4867:12:27"},"nodeType":"YulFunctionCall","src":"4867:16:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4857:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"4910:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4919:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4922:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4912:6:27"},"nodeType":"YulFunctionCall","src":"4912:12:27"},"nodeType":"YulExpressionStatement","src":"4912:12:27"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4898:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"4906:2:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4895:2:27"},"nodeType":"YulFunctionCall","src":"4895:14:27"},"nodeType":"YulIf","src":"4892:34:27"},{"body":{"nodeType":"YulBlock","src":"4986:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4995:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4998:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4988:6:27"},"nodeType":"YulFunctionCall","src":"4988:12:27"},"nodeType":"YulExpressionStatement","src":"4988:12:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"4949:2:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4957:1:27","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"4960:6:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4953:3:27"},"nodeType":"YulFunctionCall","src":"4953:14:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4945:3:27"},"nodeType":"YulFunctionCall","src":"4945:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"4970:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4941:3:27"},"nodeType":"YulFunctionCall","src":"4941:34:27"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4977:7:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4938:2:27"},"nodeType":"YulFunctionCall","src":"4938:47:27"},"nodeType":"YulIf","src":"4935:67:27"},{"nodeType":"YulAssignment","src":"5011:23:27","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5025:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"5029:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5021:3:27"},"nodeType":"YulFunctionCall","src":"5021:13:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5011:6:27"}]},{"nodeType":"YulAssignment","src":"5043:16:27","value":{"name":"length","nodeType":"YulIdentifier","src":"5053:6:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5043:6:27"}]},{"nodeType":"YulAssignment","src":"5068:44:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5095:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5106:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5091:3:27"},"nodeType":"YulFunctionCall","src":"5091:20:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5078:12:27"},"nodeType":"YulFunctionCall","src":"5078:34:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5068:6:27"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4501:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4512:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4524:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4532:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4540:6:27","type":""}],"src":"4429:689:27"},{"body":{"nodeType":"YulBlock","src":"5293:523:27","statements":[{"body":{"nodeType":"YulBlock","src":"5340:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5349:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5352:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5342:6:27"},"nodeType":"YulFunctionCall","src":"5342:12:27"},"nodeType":"YulExpressionStatement","src":"5342:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5314:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"5323:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5310:3:27"},"nodeType":"YulFunctionCall","src":"5310:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"5335:3:27","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5306:3:27"},"nodeType":"YulFunctionCall","src":"5306:33:27"},"nodeType":"YulIf","src":"5303:53:27"},{"nodeType":"YulAssignment","src":"5365:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5394:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5375:18:27"},"nodeType":"YulFunctionCall","src":"5375:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5365:6:27"}]},{"nodeType":"YulAssignment","src":"5413:48:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5446:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5457:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5442:3:27"},"nodeType":"YulFunctionCall","src":"5442:18:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5423:18:27"},"nodeType":"YulFunctionCall","src":"5423:38:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5413:6:27"}]},{"nodeType":"YulAssignment","src":"5470:42:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5497:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5508:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5493:3:27"},"nodeType":"YulFunctionCall","src":"5493:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5480:12:27"},"nodeType":"YulFunctionCall","src":"5480:32:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5470:6:27"}]},{"nodeType":"YulAssignment","src":"5521:42:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5548:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5559:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5544:3:27"},"nodeType":"YulFunctionCall","src":"5544:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5531:12:27"},"nodeType":"YulFunctionCall","src":"5531:32:27"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5521:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"5572:46:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5602:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5613:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5598:3:27"},"nodeType":"YulFunctionCall","src":"5598:19:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5585:12:27"},"nodeType":"YulFunctionCall","src":"5585:33:27"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5576:5:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"5666:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5675:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5678:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5668:6:27"},"nodeType":"YulFunctionCall","src":"5668:12:27"},"nodeType":"YulExpressionStatement","src":"5668:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5640:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5651:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"5658:4:27","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5647:3:27"},"nodeType":"YulFunctionCall","src":"5647:16:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"5637:2:27"},"nodeType":"YulFunctionCall","src":"5637:27:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5630:6:27"},"nodeType":"YulFunctionCall","src":"5630:35:27"},"nodeType":"YulIf","src":"5627:55:27"},{"nodeType":"YulAssignment","src":"5691:15:27","value":{"name":"value","nodeType":"YulIdentifier","src":"5701:5:27"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"5691:6:27"}]},{"nodeType":"YulAssignment","src":"5715:43:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5742:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5753:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5738:3:27"},"nodeType":"YulFunctionCall","src":"5738:19:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5725:12:27"},"nodeType":"YulFunctionCall","src":"5725:33:27"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"5715:6:27"}]},{"nodeType":"YulAssignment","src":"5767:43:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5794:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5805:3:27","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5790:3:27"},"nodeType":"YulFunctionCall","src":"5790:19:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5777:12:27"},"nodeType":"YulFunctionCall","src":"5777:33:27"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"5767:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5211:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5222:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5234:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5242:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5250:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5258:6:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5266:6:27","type":""},{"name":"value5","nodeType":"YulTypedName","src":"5274:6:27","type":""},{"name":"value6","nodeType":"YulTypedName","src":"5282:6:27","type":""}],"src":"5123:693:27"},{"body":{"nodeType":"YulBlock","src":"5908:173:27","statements":[{"body":{"nodeType":"YulBlock","src":"5954:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5963:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5966:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5956:6:27"},"nodeType":"YulFunctionCall","src":"5956:12:27"},"nodeType":"YulExpressionStatement","src":"5956:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5929:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"5938:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5925:3:27"},"nodeType":"YulFunctionCall","src":"5925:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"5950:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5921:3:27"},"nodeType":"YulFunctionCall","src":"5921:32:27"},"nodeType":"YulIf","src":"5918:52:27"},{"nodeType":"YulAssignment","src":"5979:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6008:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"5989:18:27"},"nodeType":"YulFunctionCall","src":"5989:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5979:6:27"}]},{"nodeType":"YulAssignment","src":"6027:48:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6060:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6071:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6056:3:27"},"nodeType":"YulFunctionCall","src":"6056:18:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"6037:18:27"},"nodeType":"YulFunctionCall","src":"6037:38:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6027:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5866:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5877:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5889:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5897:6:27","type":""}],"src":"5821:260:27"},{"body":{"nodeType":"YulBlock","src":"6141:325:27","statements":[{"nodeType":"YulAssignment","src":"6151:22:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6165:1:27","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"6168:4:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6161:3:27"},"nodeType":"YulFunctionCall","src":"6161:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6151:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"6182:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6212:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"6218:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6208:3:27"},"nodeType":"YulFunctionCall","src":"6208:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"6186:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"6259:31:27","statements":[{"nodeType":"YulAssignment","src":"6261:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6275:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"6283:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6271:3:27"},"nodeType":"YulFunctionCall","src":"6271:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6261:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6239:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6232:6:27"},"nodeType":"YulFunctionCall","src":"6232:26:27"},"nodeType":"YulIf","src":"6229:61:27"},{"body":{"nodeType":"YulBlock","src":"6349:111:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6370:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6377:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6382:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6373:3:27"},"nodeType":"YulFunctionCall","src":"6373:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6363:6:27"},"nodeType":"YulFunctionCall","src":"6363:31:27"},"nodeType":"YulExpressionStatement","src":"6363:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6414:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6417:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6407:6:27"},"nodeType":"YulFunctionCall","src":"6407:15:27"},"nodeType":"YulExpressionStatement","src":"6407:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6442:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6445:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6435:6:27"},"nodeType":"YulFunctionCall","src":"6435:15:27"},"nodeType":"YulExpressionStatement","src":"6435:15:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6305:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6328:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"6336:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6325:2:27"},"nodeType":"YulFunctionCall","src":"6325:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6302:2:27"},"nodeType":"YulFunctionCall","src":"6302:38:27"},"nodeType":"YulIf","src":"6299:161:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6121:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6130:6:27","type":""}],"src":"6086:380:27"},{"body":{"nodeType":"YulBlock","src":"6600:145:27","statements":[{"nodeType":"YulAssignment","src":"6610:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6622:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6633:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6618:3:27"},"nodeType":"YulFunctionCall","src":"6618:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6610:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6652:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6667:6:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6683:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"6688:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6679:3:27"},"nodeType":"YulFunctionCall","src":"6679:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"6692:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6675:3:27"},"nodeType":"YulFunctionCall","src":"6675:19:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6663:3:27"},"nodeType":"YulFunctionCall","src":"6663:32:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6645:6:27"},"nodeType":"YulFunctionCall","src":"6645:51:27"},"nodeType":"YulExpressionStatement","src":"6645:51:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6716:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6727:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6712:3:27"},"nodeType":"YulFunctionCall","src":"6712:18:27"},{"name":"value1","nodeType":"YulIdentifier","src":"6732:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6705:6:27"},"nodeType":"YulFunctionCall","src":"6705:34:27"},"nodeType":"YulExpressionStatement","src":"6705:34:27"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6561:9:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6572:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6580:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6591:4:27","type":""}],"src":"6471:274:27"},{"body":{"nodeType":"YulBlock","src":"6782:95:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6799:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6806:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"6811:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6802:3:27"},"nodeType":"YulFunctionCall","src":"6802:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6792:6:27"},"nodeType":"YulFunctionCall","src":"6792:31:27"},"nodeType":"YulExpressionStatement","src":"6792:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6839:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6842:4:27","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6832:6:27"},"nodeType":"YulFunctionCall","src":"6832:15:27"},"nodeType":"YulExpressionStatement","src":"6832:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6863:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6866:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6856:6:27"},"nodeType":"YulFunctionCall","src":"6856:15:27"},"nodeType":"YulExpressionStatement","src":"6856:15:27"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6750:127:27"},{"body":{"nodeType":"YulBlock","src":"6931:76:27","statements":[{"body":{"nodeType":"YulBlock","src":"6953:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6955:16:27"},"nodeType":"YulFunctionCall","src":"6955:18:27"},"nodeType":"YulExpressionStatement","src":"6955:18:27"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6947:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"6950:1:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6944:2:27"},"nodeType":"YulFunctionCall","src":"6944:8:27"},"nodeType":"YulIf","src":"6941:34:27"},{"nodeType":"YulAssignment","src":"6984:17:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6996:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"6999:1:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6992:3:27"},"nodeType":"YulFunctionCall","src":"6992:9:27"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"6984:4:27"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6913:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"6916:1:27","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"6922:4:27","type":""}],"src":"6882:125:27"},{"body":{"nodeType":"YulBlock","src":"7058:171:27","statements":[{"body":{"nodeType":"YulBlock","src":"7089:111:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7110:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7117:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"7122:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7113:3:27"},"nodeType":"YulFunctionCall","src":"7113:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7103:6:27"},"nodeType":"YulFunctionCall","src":"7103:31:27"},"nodeType":"YulExpressionStatement","src":"7103:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7154:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"7157:4:27","type":"","value":"0x12"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7147:6:27"},"nodeType":"YulFunctionCall","src":"7147:15:27"},"nodeType":"YulExpressionStatement","src":"7147:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7182:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7185:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7175:6:27"},"nodeType":"YulFunctionCall","src":"7175:15:27"},"nodeType":"YulExpressionStatement","src":"7175:15:27"}]},"condition":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7078:1:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7071:6:27"},"nodeType":"YulFunctionCall","src":"7071:9:27"},"nodeType":"YulIf","src":"7068:132:27"},{"nodeType":"YulAssignment","src":"7209:14:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7218:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"7221:1:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7214:3:27"},"nodeType":"YulFunctionCall","src":"7214:9:27"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"7209:1:27"}]}]},"name":"checked_div_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7043:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"7046:1:27","type":""}],"returnVariables":[{"name":"r","nodeType":"YulTypedName","src":"7052:1:27","type":""}],"src":"7012:217:27"},{"body":{"nodeType":"YulBlock","src":"7282:80:27","statements":[{"body":{"nodeType":"YulBlock","src":"7309:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7311:16:27"},"nodeType":"YulFunctionCall","src":"7311:18:27"},"nodeType":"YulExpressionStatement","src":"7311:18:27"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7298:1:27"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7305:1:27"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7301:3:27"},"nodeType":"YulFunctionCall","src":"7301:6:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7295:2:27"},"nodeType":"YulFunctionCall","src":"7295:13:27"},"nodeType":"YulIf","src":"7292:39:27"},{"nodeType":"YulAssignment","src":"7340:16:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7351:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"7354:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7347:3:27"},"nodeType":"YulFunctionCall","src":"7347:9:27"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"7340:3:27"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7265:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"7268:1:27","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"7274:3:27","type":""}],"src":"7234:128:27"},{"body":{"nodeType":"YulBlock","src":"7419:116:27","statements":[{"body":{"nodeType":"YulBlock","src":"7478:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7480:16:27"},"nodeType":"YulFunctionCall","src":"7480:18:27"},"nodeType":"YulExpressionStatement","src":"7480:18:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7450:1:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7443:6:27"},"nodeType":"YulFunctionCall","src":"7443:9:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"7436:6:27"},"nodeType":"YulFunctionCall","src":"7436:17:27"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"7458:1:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7469:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"7465:3:27"},"nodeType":"YulFunctionCall","src":"7465:6:27"},{"name":"x","nodeType":"YulIdentifier","src":"7473:1:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"7461:3:27"},"nodeType":"YulFunctionCall","src":"7461:14:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7455:2:27"},"nodeType":"YulFunctionCall","src":"7455:21:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7432:3:27"},"nodeType":"YulFunctionCall","src":"7432:45:27"},"nodeType":"YulIf","src":"7429:71:27"},{"nodeType":"YulAssignment","src":"7509:20:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7524:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"7527:1:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7520:3:27"},"nodeType":"YulFunctionCall","src":"7520:9:27"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"7509:7:27"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"7398:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"7401:1:27","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"7407:7:27","type":""}],"src":"7367:168:27"},{"body":{"nodeType":"YulBlock","src":"7714:237:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7731:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7742:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7724:6:27"},"nodeType":"YulFunctionCall","src":"7724:21:27"},"nodeType":"YulExpressionStatement","src":"7724:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7765:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7776:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7761:3:27"},"nodeType":"YulFunctionCall","src":"7761:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"7781:2:27","type":"","value":"47"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7754:6:27"},"nodeType":"YulFunctionCall","src":"7754:30:27"},"nodeType":"YulExpressionStatement","src":"7754:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7804:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7815:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7800:3:27"},"nodeType":"YulFunctionCall","src":"7800:18:27"},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365","kind":"string","nodeType":"YulLiteral","src":"7820:34:27","type":"","value":"AccessControl: can only renounce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7793:6:27"},"nodeType":"YulFunctionCall","src":"7793:62:27"},"nodeType":"YulExpressionStatement","src":"7793:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7875:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7886:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7871:3:27"},"nodeType":"YulFunctionCall","src":"7871:18:27"},{"hexValue":"20726f6c657320666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"7891:17:27","type":"","value":" roles for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7864:6:27"},"nodeType":"YulFunctionCall","src":"7864:45:27"},"nodeType":"YulExpressionStatement","src":"7864:45:27"},{"nodeType":"YulAssignment","src":"7918:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7930:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7941:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7926:3:27"},"nodeType":"YulFunctionCall","src":"7926:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7918:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7691:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7705:4:27","type":""}],"src":"7540:411:27"},{"body":{"nodeType":"YulBlock","src":"8130:299:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8147:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8158:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8140:6:27"},"nodeType":"YulFunctionCall","src":"8140:21:27"},"nodeType":"YulExpressionStatement","src":"8140:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8181:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8192:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8177:3:27"},"nodeType":"YulFunctionCall","src":"8177:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"8197:2:27","type":"","value":"69"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8170:6:27"},"nodeType":"YulFunctionCall","src":"8170:30:27"},"nodeType":"YulExpressionStatement","src":"8170:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8220:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8231:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8216:3:27"},"nodeType":"YulFunctionCall","src":"8216:18:27"},{"hexValue":"5472616e73616374696f6e4665653a2043616e6e6f742073657420666565416d","kind":"string","nodeType":"YulLiteral","src":"8236:34:27","type":"","value":"TransactionFee: Cannot set feeAm"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8209:6:27"},"nodeType":"YulFunctionCall","src":"8209:62:27"},"nodeType":"YulExpressionStatement","src":"8209:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8291:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8302:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8287:3:27"},"nodeType":"YulFunctionCall","src":"8287:18:27"},{"hexValue":"6f756e7420616e64206665654672616374696f6e206174207468652073616d65","kind":"string","nodeType":"YulLiteral","src":"8307:34:27","type":"","value":"ount and feeFraction at the same"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8280:6:27"},"nodeType":"YulFunctionCall","src":"8280:62:27"},"nodeType":"YulExpressionStatement","src":"8280:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8362:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8373:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8358:3:27"},"nodeType":"YulFunctionCall","src":"8358:19:27"},{"hexValue":"2074696d65","kind":"string","nodeType":"YulLiteral","src":"8379:7:27","type":"","value":" time"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8351:6:27"},"nodeType":"YulFunctionCall","src":"8351:36:27"},"nodeType":"YulExpressionStatement","src":"8351:36:27"},{"nodeType":"YulAssignment","src":"8396:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8408:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8419:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8404:3:27"},"nodeType":"YulFunctionCall","src":"8404:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8396:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_ba6e7714f3dc9672dee4a937817bb8127b845248a8b5fa5f809e162d8db55ab5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8107:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8121:4:27","type":""}],"src":"7956:473:27"},{"body":{"nodeType":"YulBlock","src":"8608:241:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8625:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8636:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8618:6:27"},"nodeType":"YulFunctionCall","src":"8618:21:27"},"nodeType":"YulExpressionStatement","src":"8618:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8659:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8670:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8655:3:27"},"nodeType":"YulFunctionCall","src":"8655:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"8675:2:27","type":"","value":"51"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8648:6:27"},"nodeType":"YulFunctionCall","src":"8648:30:27"},"nodeType":"YulExpressionStatement","src":"8648:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8698:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8709:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8694:3:27"},"nodeType":"YulFunctionCall","src":"8694:18:27"},{"hexValue":"5472616e73616374696f6e4665653a20557020746f20313025207472616e7361","kind":"string","nodeType":"YulLiteral","src":"8714:34:27","type":"","value":"TransactionFee: Up to 10% transa"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8687:6:27"},"nodeType":"YulFunctionCall","src":"8687:62:27"},"nodeType":"YulExpressionStatement","src":"8687:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8769:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8780:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8765:3:27"},"nodeType":"YulFunctionCall","src":"8765:18:27"},{"hexValue":"6374696f6e4665652063616e20626520736574","kind":"string","nodeType":"YulLiteral","src":"8785:21:27","type":"","value":"ctionFee can be set"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8758:6:27"},"nodeType":"YulFunctionCall","src":"8758:49:27"},"nodeType":"YulExpressionStatement","src":"8758:49:27"},{"nodeType":"YulAssignment","src":"8816:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8828:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8839:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8824:3:27"},"nodeType":"YulFunctionCall","src":"8824:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8816:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_7444501452abd4aa62f22c1aadb9716af04f8b5e8d1b8f876d7bf930338b4894__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8585:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8599:4:27","type":""}],"src":"8434:415:27"},{"body":{"nodeType":"YulBlock","src":"9028:227:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9045:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9056:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9038:6:27"},"nodeType":"YulFunctionCall","src":"9038:21:27"},"nodeType":"YulExpressionStatement","src":"9038:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9079:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9090:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9075:3:27"},"nodeType":"YulFunctionCall","src":"9075:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"9095:2:27","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9068:6:27"},"nodeType":"YulFunctionCall","src":"9068:30:27"},"nodeType":"YulExpressionStatement","src":"9068:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9118:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9129:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9114:3:27"},"nodeType":"YulFunctionCall","src":"9114:18:27"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"9134:34:27","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9107:6:27"},"nodeType":"YulFunctionCall","src":"9107:62:27"},"nodeType":"YulExpressionStatement","src":"9107:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9189:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9200:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9185:3:27"},"nodeType":"YulFunctionCall","src":"9185:18:27"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"9205:7:27","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9178:6:27"},"nodeType":"YulFunctionCall","src":"9178:35:27"},"nodeType":"YulExpressionStatement","src":"9178:35:27"},{"nodeType":"YulAssignment","src":"9222:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9234:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9245:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9230:3:27"},"nodeType":"YulFunctionCall","src":"9230:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9222:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9005:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9019:4:27","type":""}],"src":"8854:401:27"},{"body":{"nodeType":"YulBlock","src":"9292:95:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9309:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9316:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"9321:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"9312:3:27"},"nodeType":"YulFunctionCall","src":"9312:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9302:6:27"},"nodeType":"YulFunctionCall","src":"9302:31:27"},"nodeType":"YulExpressionStatement","src":"9302:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9349:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"9352:4:27","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9342:6:27"},"nodeType":"YulFunctionCall","src":"9342:15:27"},"nodeType":"YulExpressionStatement","src":"9342:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9373:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"9376:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"9366:6:27"},"nodeType":"YulFunctionCall","src":"9366:15:27"},"nodeType":"YulExpressionStatement","src":"9366:15:27"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"9260:127:27"},{"body":{"nodeType":"YulBlock","src":"9438:151:27","statements":[{"nodeType":"YulVariableDeclaration","src":"9448:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"9458:6:27","type":"","value":"0xffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"9452:2:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"9473:29:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9492:5:27"},{"name":"_1","nodeType":"YulIdentifier","src":"9499:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9488:3:27"},"nodeType":"YulFunctionCall","src":"9488:14:27"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"9477:7:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"9530:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"9532:16:27"},"nodeType":"YulFunctionCall","src":"9532:18:27"},"nodeType":"YulExpressionStatement","src":"9532:18:27"}]},"condition":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"9517:7:27"},{"name":"_1","nodeType":"YulIdentifier","src":"9526:2:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"9514:2:27"},"nodeType":"YulFunctionCall","src":"9514:15:27"},"nodeType":"YulIf","src":"9511:41:27"},{"nodeType":"YulAssignment","src":"9561:22:27","value":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"9572:7:27"},{"kind":"number","nodeType":"YulLiteral","src":"9581:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9568:3:27"},"nodeType":"YulFunctionCall","src":"9568:15:27"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"9561:3:27"}]}]},"name":"increment_t_uint16","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9420:5:27","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"9430:3:27","type":""}],"src":"9392:197:27"},{"body":{"nodeType":"YulBlock","src":"9768:179:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9785:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9796:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9778:6:27"},"nodeType":"YulFunctionCall","src":"9778:21:27"},"nodeType":"YulExpressionStatement","src":"9778:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9819:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9830:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9815:3:27"},"nodeType":"YulFunctionCall","src":"9815:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"9835:2:27","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9808:6:27"},"nodeType":"YulFunctionCall","src":"9808:30:27"},"nodeType":"YulExpressionStatement","src":"9808:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9858:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9869:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9854:3:27"},"nodeType":"YulFunctionCall","src":"9854:18:27"},{"hexValue":"45524332305065726d69743a206578706972656420646561646c696e65","kind":"string","nodeType":"YulLiteral","src":"9874:31:27","type":"","value":"ERC20Permit: expired deadline"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9847:6:27"},"nodeType":"YulFunctionCall","src":"9847:59:27"},"nodeType":"YulExpressionStatement","src":"9847:59:27"},{"nodeType":"YulAssignment","src":"9915:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9927:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"9938:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9923:3:27"},"nodeType":"YulFunctionCall","src":"9923:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9915:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9745:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9759:4:27","type":""}],"src":"9594:353:27"},{"body":{"nodeType":"YulBlock","src":"10193:350:27","statements":[{"nodeType":"YulAssignment","src":"10203:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10215:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10226:3:27","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10211:3:27"},"nodeType":"YulFunctionCall","src":"10211:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10203:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10246:9:27"},{"name":"value0","nodeType":"YulIdentifier","src":"10257:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10239:6:27"},"nodeType":"YulFunctionCall","src":"10239:25:27"},"nodeType":"YulExpressionStatement","src":"10239:25:27"},{"nodeType":"YulVariableDeclaration","src":"10273:29:27","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10291:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"10296:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"10287:3:27"},"nodeType":"YulFunctionCall","src":"10287:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"10300:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10283:3:27"},"nodeType":"YulFunctionCall","src":"10283:19:27"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"10277:2:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10322:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10333:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10318:3:27"},"nodeType":"YulFunctionCall","src":"10318:18:27"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"10342:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"10350:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10338:3:27"},"nodeType":"YulFunctionCall","src":"10338:15:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10311:6:27"},"nodeType":"YulFunctionCall","src":"10311:43:27"},"nodeType":"YulExpressionStatement","src":"10311:43:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10374:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10385:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10370:3:27"},"nodeType":"YulFunctionCall","src":"10370:18:27"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"10394:6:27"},{"name":"_1","nodeType":"YulIdentifier","src":"10402:2:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10390:3:27"},"nodeType":"YulFunctionCall","src":"10390:15:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10363:6:27"},"nodeType":"YulFunctionCall","src":"10363:43:27"},"nodeType":"YulExpressionStatement","src":"10363:43:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10426:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10437:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10422:3:27"},"nodeType":"YulFunctionCall","src":"10422:18:27"},{"name":"value3","nodeType":"YulIdentifier","src":"10442:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10415:6:27"},"nodeType":"YulFunctionCall","src":"10415:34:27"},"nodeType":"YulExpressionStatement","src":"10415:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10469:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10480:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10465:3:27"},"nodeType":"YulFunctionCall","src":"10465:19:27"},{"name":"value4","nodeType":"YulIdentifier","src":"10486:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10458:6:27"},"nodeType":"YulFunctionCall","src":"10458:35:27"},"nodeType":"YulExpressionStatement","src":"10458:35:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10513:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10524:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10509:3:27"},"nodeType":"YulFunctionCall","src":"10509:19:27"},{"name":"value5","nodeType":"YulIdentifier","src":"10530:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10502:6:27"},"nodeType":"YulFunctionCall","src":"10502:35:27"},"nodeType":"YulExpressionStatement","src":"10502:35:27"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10122:9:27","type":""},{"name":"value5","nodeType":"YulTypedName","src":"10133:6:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"10141:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"10149:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"10157:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10165:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10173:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10184:4:27","type":""}],"src":"9952:591:27"},{"body":{"nodeType":"YulBlock","src":"10722:180:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10739:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10750:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10732:6:27"},"nodeType":"YulFunctionCall","src":"10732:21:27"},"nodeType":"YulExpressionStatement","src":"10732:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10773:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10784:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10769:3:27"},"nodeType":"YulFunctionCall","src":"10769:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"10789:2:27","type":"","value":"30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10762:6:27"},"nodeType":"YulFunctionCall","src":"10762:30:27"},"nodeType":"YulExpressionStatement","src":"10762:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10812:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10823:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10808:3:27"},"nodeType":"YulFunctionCall","src":"10808:18:27"},{"hexValue":"45524332305065726d69743a20696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"10828:32:27","type":"","value":"ERC20Permit: invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10801:6:27"},"nodeType":"YulFunctionCall","src":"10801:60:27"},"nodeType":"YulExpressionStatement","src":"10801:60:27"},{"nodeType":"YulAssignment","src":"10870:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10882:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"10893:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10878:3:27"},"nodeType":"YulFunctionCall","src":"10878:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10870:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10699:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10713:4:27","type":""}],"src":"10548:354:27"},{"body":{"nodeType":"YulBlock","src":"11081:248:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11098:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11109:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11091:6:27"},"nodeType":"YulFunctionCall","src":"11091:21:27"},"nodeType":"YulExpressionStatement","src":"11091:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11132:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11143:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11128:3:27"},"nodeType":"YulFunctionCall","src":"11128:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"11148:2:27","type":"","value":"58"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11121:6:27"},"nodeType":"YulFunctionCall","src":"11121:30:27"},"nodeType":"YulExpressionStatement","src":"11121:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11171:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11182:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11167:3:27"},"nodeType":"YulFunctionCall","src":"11167:18:27"},{"hexValue":"5472616e73666572436f6e74726f6c3a206d6178696d756d206672616374696f","kind":"string","nodeType":"YulLiteral","src":"11187:34:27","type":"","value":"TransferControl: maximum fractio"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11160:6:27"},"nodeType":"YulFunctionCall","src":"11160:62:27"},"nodeType":"YulExpressionStatement","src":"11160:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11242:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11253:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11238:3:27"},"nodeType":"YulFunctionCall","src":"11238:18:27"},{"hexValue":"6e2069732031302a2a362028657175616c20746f203130302529","kind":"string","nodeType":"YulLiteral","src":"11258:28:27","type":"","value":"n is 10**6 (equal to 100%)"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11231:6:27"},"nodeType":"YulFunctionCall","src":"11231:56:27"},"nodeType":"YulExpressionStatement","src":"11231:56:27"},{"nodeType":"YulAssignment","src":"11296:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11308:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11319:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11304:3:27"},"nodeType":"YulFunctionCall","src":"11304:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11296:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_8404985d158493dcb8888b28d97ab7d03a6fd3b5993fc007df71079e84dcd25e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11058:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11072:4:27","type":""}],"src":"10907:422:27"},{"body":{"nodeType":"YulBlock","src":"11508:226:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11525:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11536:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11518:6:27"},"nodeType":"YulFunctionCall","src":"11518:21:27"},"nodeType":"YulExpressionStatement","src":"11518:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11559:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11570:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11555:3:27"},"nodeType":"YulFunctionCall","src":"11555:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"11575:2:27","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11548:6:27"},"nodeType":"YulFunctionCall","src":"11548:30:27"},"nodeType":"YulExpressionStatement","src":"11548:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11598:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11609:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11594:3:27"},"nodeType":"YulFunctionCall","src":"11594:18:27"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"11614:34:27","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11587:6:27"},"nodeType":"YulFunctionCall","src":"11587:62:27"},"nodeType":"YulExpressionStatement","src":"11587:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11669:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11680:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11665:3:27"},"nodeType":"YulFunctionCall","src":"11665:18:27"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"11685:6:27","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11658:6:27"},"nodeType":"YulFunctionCall","src":"11658:34:27"},"nodeType":"YulExpressionStatement","src":"11658:34:27"},{"nodeType":"YulAssignment","src":"11701:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11713:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11724:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11709:3:27"},"nodeType":"YulFunctionCall","src":"11709:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11701:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11485:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11499:4:27","type":""}],"src":"11334:400:27"},{"body":{"nodeType":"YulBlock","src":"11913:224:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11930:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11941:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11923:6:27"},"nodeType":"YulFunctionCall","src":"11923:21:27"},"nodeType":"YulExpressionStatement","src":"11923:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11964:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"11975:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11960:3:27"},"nodeType":"YulFunctionCall","src":"11960:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"11980:2:27","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11953:6:27"},"nodeType":"YulFunctionCall","src":"11953:30:27"},"nodeType":"YulExpressionStatement","src":"11953:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12003:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12014:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11999:3:27"},"nodeType":"YulFunctionCall","src":"11999:18:27"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"12019:34:27","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11992:6:27"},"nodeType":"YulFunctionCall","src":"11992:62:27"},"nodeType":"YulExpressionStatement","src":"11992:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12074:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12085:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12070:3:27"},"nodeType":"YulFunctionCall","src":"12070:18:27"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"12090:4:27","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12063:6:27"},"nodeType":"YulFunctionCall","src":"12063:32:27"},"nodeType":"YulExpressionStatement","src":"12063:32:27"},{"nodeType":"YulAssignment","src":"12104:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12116:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12127:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12112:3:27"},"nodeType":"YulFunctionCall","src":"12112:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12104:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11890:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11904:4:27","type":""}],"src":"11739:398:27"},{"body":{"nodeType":"YulBlock","src":"12316:179:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12333:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12344:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12326:6:27"},"nodeType":"YulFunctionCall","src":"12326:21:27"},"nodeType":"YulExpressionStatement","src":"12326:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12367:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12378:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12363:3:27"},"nodeType":"YulFunctionCall","src":"12363:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"12383:2:27","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12356:6:27"},"nodeType":"YulFunctionCall","src":"12356:30:27"},"nodeType":"YulExpressionStatement","src":"12356:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12406:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12417:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12402:3:27"},"nodeType":"YulFunctionCall","src":"12402:18:27"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"12422:31:27","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12395:6:27"},"nodeType":"YulFunctionCall","src":"12395:59:27"},"nodeType":"YulExpressionStatement","src":"12395:59:27"},{"nodeType":"YulAssignment","src":"12463:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12475:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12486:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12471:3:27"},"nodeType":"YulFunctionCall","src":"12471:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12463:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12293:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12307:4:27","type":""}],"src":"12142:353:27"},{"body":{"nodeType":"YulBlock","src":"12674:227:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12691:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12702:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12684:6:27"},"nodeType":"YulFunctionCall","src":"12684:21:27"},"nodeType":"YulExpressionStatement","src":"12684:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12725:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12736:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12721:3:27"},"nodeType":"YulFunctionCall","src":"12721:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"12741:2:27","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12714:6:27"},"nodeType":"YulFunctionCall","src":"12714:30:27"},"nodeType":"YulExpressionStatement","src":"12714:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12764:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12775:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12760:3:27"},"nodeType":"YulFunctionCall","src":"12760:18:27"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"12780:34:27","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12753:6:27"},"nodeType":"YulFunctionCall","src":"12753:62:27"},"nodeType":"YulExpressionStatement","src":"12753:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12835:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12846:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12831:3:27"},"nodeType":"YulFunctionCall","src":"12831:18:27"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"12851:7:27","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12824:6:27"},"nodeType":"YulFunctionCall","src":"12824:35:27"},"nodeType":"YulExpressionStatement","src":"12824:35:27"},{"nodeType":"YulAssignment","src":"12868:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12880:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"12891:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12876:3:27"},"nodeType":"YulFunctionCall","src":"12876:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12868:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12651:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12665:4:27","type":""}],"src":"12500:401:27"},{"body":{"nodeType":"YulBlock","src":"13080:225:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13097:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13108:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13090:6:27"},"nodeType":"YulFunctionCall","src":"13090:21:27"},"nodeType":"YulExpressionStatement","src":"13090:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13131:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13142:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13127:3:27"},"nodeType":"YulFunctionCall","src":"13127:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"13147:2:27","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13120:6:27"},"nodeType":"YulFunctionCall","src":"13120:30:27"},"nodeType":"YulExpressionStatement","src":"13120:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13170:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13181:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13166:3:27"},"nodeType":"YulFunctionCall","src":"13166:18:27"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"13186:34:27","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13159:6:27"},"nodeType":"YulFunctionCall","src":"13159:62:27"},"nodeType":"YulExpressionStatement","src":"13159:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13241:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13252:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13237:3:27"},"nodeType":"YulFunctionCall","src":"13237:18:27"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"13257:5:27","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13230:6:27"},"nodeType":"YulFunctionCall","src":"13230:33:27"},"nodeType":"YulExpressionStatement","src":"13230:33:27"},{"nodeType":"YulAssignment","src":"13272:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13284:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13295:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13280:3:27"},"nodeType":"YulFunctionCall","src":"13280:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13272:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13057:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13071:4:27","type":""}],"src":"12906:399:27"},{"body":{"nodeType":"YulBlock","src":"13484:228:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13501:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13512:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13494:6:27"},"nodeType":"YulFunctionCall","src":"13494:21:27"},"nodeType":"YulExpressionStatement","src":"13494:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13535:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13546:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13531:3:27"},"nodeType":"YulFunctionCall","src":"13531:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"13551:2:27","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13524:6:27"},"nodeType":"YulFunctionCall","src":"13524:30:27"},"nodeType":"YulExpressionStatement","src":"13524:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13574:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13585:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13570:3:27"},"nodeType":"YulFunctionCall","src":"13570:18:27"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"13590:34:27","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13563:6:27"},"nodeType":"YulFunctionCall","src":"13563:62:27"},"nodeType":"YulExpressionStatement","src":"13563:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13645:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13656:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13641:3:27"},"nodeType":"YulFunctionCall","src":"13641:18:27"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"13661:8:27","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13634:6:27"},"nodeType":"YulFunctionCall","src":"13634:36:27"},"nodeType":"YulExpressionStatement","src":"13634:36:27"},{"nodeType":"YulAssignment","src":"13679:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13691:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13702:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13687:3:27"},"nodeType":"YulFunctionCall","src":"13687:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13679:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13461:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13475:4:27","type":""}],"src":"13310:402:27"},{"body":{"nodeType":"YulBlock","src":"13891:223:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13908:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13919:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13901:6:27"},"nodeType":"YulFunctionCall","src":"13901:21:27"},"nodeType":"YulExpressionStatement","src":"13901:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13942:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13953:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13938:3:27"},"nodeType":"YulFunctionCall","src":"13938:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"13958:2:27","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13931:6:27"},"nodeType":"YulFunctionCall","src":"13931:30:27"},"nodeType":"YulExpressionStatement","src":"13931:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13981:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"13992:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13977:3:27"},"nodeType":"YulFunctionCall","src":"13977:18:27"},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f20616464726573","kind":"string","nodeType":"YulLiteral","src":"13997:34:27","type":"","value":"ERC20: burn from the zero addres"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13970:6:27"},"nodeType":"YulFunctionCall","src":"13970:62:27"},"nodeType":"YulExpressionStatement","src":"13970:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14052:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14063:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14048:3:27"},"nodeType":"YulFunctionCall","src":"14048:18:27"},{"hexValue":"73","kind":"string","nodeType":"YulLiteral","src":"14068:3:27","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14041:6:27"},"nodeType":"YulFunctionCall","src":"14041:31:27"},"nodeType":"YulExpressionStatement","src":"14041:31:27"},{"nodeType":"YulAssignment","src":"14081:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14093:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14104:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14089:3:27"},"nodeType":"YulFunctionCall","src":"14089:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14081:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13868:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13882:4:27","type":""}],"src":"13717:397:27"},{"body":{"nodeType":"YulBlock","src":"14293:224:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14310:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14321:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14303:6:27"},"nodeType":"YulFunctionCall","src":"14303:21:27"},"nodeType":"YulExpressionStatement","src":"14303:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14344:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14355:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14340:3:27"},"nodeType":"YulFunctionCall","src":"14340:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"14360:2:27","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14333:6:27"},"nodeType":"YulFunctionCall","src":"14333:30:27"},"nodeType":"YulExpressionStatement","src":"14333:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14383:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14394:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14379:3:27"},"nodeType":"YulFunctionCall","src":"14379:18:27"},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e","kind":"string","nodeType":"YulLiteral","src":"14399:34:27","type":"","value":"ERC20: burn amount exceeds balan"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14372:6:27"},"nodeType":"YulFunctionCall","src":"14372:62:27"},"nodeType":"YulExpressionStatement","src":"14372:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14454:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14465:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14450:3:27"},"nodeType":"YulFunctionCall","src":"14450:18:27"},{"hexValue":"6365","kind":"string","nodeType":"YulLiteral","src":"14470:4:27","type":"","value":"ce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14443:6:27"},"nodeType":"YulFunctionCall","src":"14443:32:27"},"nodeType":"YulExpressionStatement","src":"14443:32:27"},{"nodeType":"YulAssignment","src":"14484:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14496:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"14507:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14492:3:27"},"nodeType":"YulFunctionCall","src":"14492:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14484:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14270:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14284:4:27","type":""}],"src":"14119:398:27"},{"body":{"nodeType":"YulBlock","src":"14911:397:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14928:3:27"},{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","kind":"string","nodeType":"YulLiteral","src":"14933:25:27","type":"","value":"AccessControl: account "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14921:6:27"},"nodeType":"YulFunctionCall","src":"14921:38:27"},"nodeType":"YulExpressionStatement","src":"14921:38:27"},{"nodeType":"YulVariableDeclaration","src":"14968:27:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14988:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14982:5:27"},"nodeType":"YulFunctionCall","src":"14982:13:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14972:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15030:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"15038:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15026:3:27"},"nodeType":"YulFunctionCall","src":"15026:17:27"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15049:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"15054:2:27","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15045:3:27"},"nodeType":"YulFunctionCall","src":"15045:12:27"},{"name":"length","nodeType":"YulIdentifier","src":"15059:6:27"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"15004:21:27"},"nodeType":"YulFunctionCall","src":"15004:62:27"},"nodeType":"YulExpressionStatement","src":"15004:62:27"},{"nodeType":"YulVariableDeclaration","src":"15075:26:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15089:3:27"},{"name":"length","nodeType":"YulIdentifier","src":"15094:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15085:3:27"},"nodeType":"YulFunctionCall","src":"15085:16:27"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"15079:2:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"15121:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"15125:2:27","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15117:3:27"},"nodeType":"YulFunctionCall","src":"15117:11:27"},{"hexValue":"206973206d697373696e6720726f6c6520","kind":"string","nodeType":"YulLiteral","src":"15130:19:27","type":"","value":" is missing role "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15110:6:27"},"nodeType":"YulFunctionCall","src":"15110:40:27"},"nodeType":"YulExpressionStatement","src":"15110:40:27"},{"nodeType":"YulVariableDeclaration","src":"15159:29:27","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15181:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15175:5:27"},"nodeType":"YulFunctionCall","src":"15175:13:27"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"15163:8:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15223:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"15231:4:27","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15219:3:27"},"nodeType":"YulFunctionCall","src":"15219:17:27"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"15242:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"15246:2:27","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15238:3:27"},"nodeType":"YulFunctionCall","src":"15238:11:27"},{"name":"length_1","nodeType":"YulIdentifier","src":"15251:8:27"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"15197:21:27"},"nodeType":"YulFunctionCall","src":"15197:63:27"},"nodeType":"YulExpressionStatement","src":"15197:63:27"},{"nodeType":"YulAssignment","src":"15269:33:27","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"15284:2:27"},{"name":"length_1","nodeType":"YulIdentifier","src":"15288:8:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15280:3:27"},"nodeType":"YulFunctionCall","src":"15280:17:27"},{"kind":"number","nodeType":"YulLiteral","src":"15299:2:27","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15276:3:27"},"nodeType":"YulFunctionCall","src":"15276:26:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15269:3:27"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14879:3:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14884:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14892:6:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14903:3:27","type":""}],"src":"14522:786:27"},{"body":{"nodeType":"YulBlock","src":"15487:180:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15504:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15515:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15497:6:27"},"nodeType":"YulFunctionCall","src":"15497:21:27"},"nodeType":"YulExpressionStatement","src":"15497:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15538:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15549:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15534:3:27"},"nodeType":"YulFunctionCall","src":"15534:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"15554:2:27","type":"","value":"30"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15527:6:27"},"nodeType":"YulFunctionCall","src":"15527:30:27"},"nodeType":"YulExpressionStatement","src":"15527:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15577:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15588:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15573:3:27"},"nodeType":"YulFunctionCall","src":"15573:18:27"},{"hexValue":"456e756d657261626c654d61703a206e6f6e6578697374656e74206b6579","kind":"string","nodeType":"YulLiteral","src":"15593:32:27","type":"","value":"EnumerableMap: nonexistent key"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15566:6:27"},"nodeType":"YulFunctionCall","src":"15566:60:27"},"nodeType":"YulExpressionStatement","src":"15566:60:27"},{"nodeType":"YulAssignment","src":"15635:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15647:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15658:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15643:3:27"},"nodeType":"YulFunctionCall","src":"15643:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15635:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_d3551e30d3095fd81287b88f7139bb09818e34280e85ee821994ebaebbed7072__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15464:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15478:4:27","type":""}],"src":"15313:354:27"},{"body":{"nodeType":"YulBlock","src":"15885:276:27","statements":[{"nodeType":"YulAssignment","src":"15895:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15907:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15918:3:27","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15903:3:27"},"nodeType":"YulFunctionCall","src":"15903:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15895:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15938:9:27"},{"name":"value0","nodeType":"YulIdentifier","src":"15949:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15931:6:27"},"nodeType":"YulFunctionCall","src":"15931:25:27"},"nodeType":"YulExpressionStatement","src":"15931:25:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15976:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"15987:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15972:3:27"},"nodeType":"YulFunctionCall","src":"15972:18:27"},{"name":"value1","nodeType":"YulIdentifier","src":"15992:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15965:6:27"},"nodeType":"YulFunctionCall","src":"15965:34:27"},"nodeType":"YulExpressionStatement","src":"15965:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16019:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"16030:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16015:3:27"},"nodeType":"YulFunctionCall","src":"16015:18:27"},{"name":"value2","nodeType":"YulIdentifier","src":"16035:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16008:6:27"},"nodeType":"YulFunctionCall","src":"16008:34:27"},"nodeType":"YulExpressionStatement","src":"16008:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16062:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"16073:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16058:3:27"},"nodeType":"YulFunctionCall","src":"16058:18:27"},{"name":"value3","nodeType":"YulIdentifier","src":"16078:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16051:6:27"},"nodeType":"YulFunctionCall","src":"16051:34:27"},"nodeType":"YulExpressionStatement","src":"16051:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16105:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"16116:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16101:3:27"},"nodeType":"YulFunctionCall","src":"16101:19:27"},{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"16126:6:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16142:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"16147:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16138:3:27"},"nodeType":"YulFunctionCall","src":"16138:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"16151:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16134:3:27"},"nodeType":"YulFunctionCall","src":"16134:19:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16122:3:27"},"nodeType":"YulFunctionCall","src":"16122:32:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16094:6:27"},"nodeType":"YulFunctionCall","src":"16094:61:27"},"nodeType":"YulExpressionStatement","src":"16094:61:27"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15822:9:27","type":""},{"name":"value4","nodeType":"YulTypedName","src":"15833:6:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15841:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15849:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15857:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15865:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15876:4:27","type":""}],"src":"15672:489:27"},{"body":{"nodeType":"YulBlock","src":"16340:175:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16357:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"16368:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16350:6:27"},"nodeType":"YulFunctionCall","src":"16350:21:27"},"nodeType":"YulExpressionStatement","src":"16350:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16391:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"16402:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16387:3:27"},"nodeType":"YulFunctionCall","src":"16387:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"16407:2:27","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16380:6:27"},"nodeType":"YulFunctionCall","src":"16380:30:27"},"nodeType":"YulExpressionStatement","src":"16380:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16430:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"16441:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16426:3:27"},"nodeType":"YulFunctionCall","src":"16426:18:27"},{"hexValue":"45524332304361707065643a20636170206578636565646564","kind":"string","nodeType":"YulLiteral","src":"16446:27:27","type":"","value":"ERC20Capped: cap exceeded"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16419:6:27"},"nodeType":"YulFunctionCall","src":"16419:55:27"},"nodeType":"YulExpressionStatement","src":"16419:55:27"},{"nodeType":"YulAssignment","src":"16483:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16495:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"16506:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16491:3:27"},"nodeType":"YulFunctionCall","src":"16491:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16483:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16317:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16331:4:27","type":""}],"src":"16166:349:27"},{"body":{"nodeType":"YulBlock","src":"16768:144:27","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16785:3:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16794:3:27","type":"","value":"240"},{"kind":"number","nodeType":"YulLiteral","src":"16799:4:27","type":"","value":"6401"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16790:3:27"},"nodeType":"YulFunctionCall","src":"16790:14:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16778:6:27"},"nodeType":"YulFunctionCall","src":"16778:27:27"},"nodeType":"YulExpressionStatement","src":"16778:27:27"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16825:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"16830:1:27","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16821:3:27"},"nodeType":"YulFunctionCall","src":"16821:11:27"},{"name":"value0","nodeType":"YulIdentifier","src":"16834:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16814:6:27"},"nodeType":"YulFunctionCall","src":"16814:27:27"},"nodeType":"YulExpressionStatement","src":"16814:27:27"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16861:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"16866:2:27","type":"","value":"34"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16857:3:27"},"nodeType":"YulFunctionCall","src":"16857:12:27"},{"name":"value1","nodeType":"YulIdentifier","src":"16871:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16850:6:27"},"nodeType":"YulFunctionCall","src":"16850:28:27"},"nodeType":"YulExpressionStatement","src":"16850:28:27"},{"nodeType":"YulAssignment","src":"16887:19:27","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16898:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"16903:2:27","type":"","value":"66"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16894:3:27"},"nodeType":"YulFunctionCall","src":"16894:12:27"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16887:3:27"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16736:3:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"16741:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16749:6:27","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16760:3:27","type":""}],"src":"16520:392:27"},{"body":{"nodeType":"YulBlock","src":"17098:217:27","statements":[{"nodeType":"YulAssignment","src":"17108:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17120:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17131:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17116:3:27"},"nodeType":"YulFunctionCall","src":"17116:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17108:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17151:9:27"},{"name":"value0","nodeType":"YulIdentifier","src":"17162:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17144:6:27"},"nodeType":"YulFunctionCall","src":"17144:25:27"},"nodeType":"YulExpressionStatement","src":"17144:25:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17189:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17200:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17185:3:27"},"nodeType":"YulFunctionCall","src":"17185:18:27"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"17209:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"17217:4:27","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17205:3:27"},"nodeType":"YulFunctionCall","src":"17205:17:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17178:6:27"},"nodeType":"YulFunctionCall","src":"17178:45:27"},"nodeType":"YulExpressionStatement","src":"17178:45:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17243:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17254:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17239:3:27"},"nodeType":"YulFunctionCall","src":"17239:18:27"},{"name":"value2","nodeType":"YulIdentifier","src":"17259:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17232:6:27"},"nodeType":"YulFunctionCall","src":"17232:34:27"},"nodeType":"YulExpressionStatement","src":"17232:34:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17286:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17297:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17282:3:27"},"nodeType":"YulFunctionCall","src":"17282:18:27"},{"name":"value3","nodeType":"YulIdentifier","src":"17302:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17275:6:27"},"nodeType":"YulFunctionCall","src":"17275:34:27"},"nodeType":"YulExpressionStatement","src":"17275:34:27"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17043:9:27","type":""},{"name":"value3","nodeType":"YulTypedName","src":"17054:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"17062:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17070:6:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17078:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17089:4:27","type":""}],"src":"16917:398:27"},{"body":{"nodeType":"YulBlock","src":"17352:95:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17369:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17376:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"17381:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"17372:3:27"},"nodeType":"YulFunctionCall","src":"17372:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17362:6:27"},"nodeType":"YulFunctionCall","src":"17362:31:27"},"nodeType":"YulExpressionStatement","src":"17362:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17409:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"17412:4:27","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17402:6:27"},"nodeType":"YulFunctionCall","src":"17402:15:27"},"nodeType":"YulExpressionStatement","src":"17402:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17433:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17436:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17426:6:27"},"nodeType":"YulFunctionCall","src":"17426:15:27"},"nodeType":"YulExpressionStatement","src":"17426:15:27"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"17320:127:27"},{"body":{"nodeType":"YulBlock","src":"17626:174:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17643:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17654:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17636:6:27"},"nodeType":"YulFunctionCall","src":"17636:21:27"},"nodeType":"YulExpressionStatement","src":"17636:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17677:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17688:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17673:3:27"},"nodeType":"YulFunctionCall","src":"17673:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"17693:2:27","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17666:6:27"},"nodeType":"YulFunctionCall","src":"17666:30:27"},"nodeType":"YulExpressionStatement","src":"17666:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17716:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17727:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17712:3:27"},"nodeType":"YulFunctionCall","src":"17712:18:27"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265","kind":"string","nodeType":"YulLiteral","src":"17732:26:27","type":"","value":"ECDSA: invalid signature"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17705:6:27"},"nodeType":"YulFunctionCall","src":"17705:54:27"},"nodeType":"YulExpressionStatement","src":"17705:54:27"},{"nodeType":"YulAssignment","src":"17768:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17780:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"17791:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17776:3:27"},"nodeType":"YulFunctionCall","src":"17776:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17768:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17603:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17617:4:27","type":""}],"src":"17452:348:27"},{"body":{"nodeType":"YulBlock","src":"17979:181:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17996:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"18007:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17989:6:27"},"nodeType":"YulFunctionCall","src":"17989:21:27"},"nodeType":"YulExpressionStatement","src":"17989:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18030:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"18041:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18026:3:27"},"nodeType":"YulFunctionCall","src":"18026:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"18046:2:27","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18019:6:27"},"nodeType":"YulFunctionCall","src":"18019:30:27"},"nodeType":"YulExpressionStatement","src":"18019:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18069:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"18080:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18065:3:27"},"nodeType":"YulFunctionCall","src":"18065:18:27"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265206c656e677468","kind":"string","nodeType":"YulLiteral","src":"18085:33:27","type":"","value":"ECDSA: invalid signature length"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18058:6:27"},"nodeType":"YulFunctionCall","src":"18058:61:27"},"nodeType":"YulExpressionStatement","src":"18058:61:27"},{"nodeType":"YulAssignment","src":"18128:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18140:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"18151:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18136:3:27"},"nodeType":"YulFunctionCall","src":"18136:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18128:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17956:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17970:4:27","type":""}],"src":"17805:355:27"},{"body":{"nodeType":"YulBlock","src":"18339:224:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18356:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"18367:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18349:6:27"},"nodeType":"YulFunctionCall","src":"18349:21:27"},"nodeType":"YulExpressionStatement","src":"18349:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18390:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"18401:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18386:3:27"},"nodeType":"YulFunctionCall","src":"18386:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"18406:2:27","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18379:6:27"},"nodeType":"YulFunctionCall","src":"18379:30:27"},"nodeType":"YulExpressionStatement","src":"18379:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18429:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"18440:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18425:3:27"},"nodeType":"YulFunctionCall","src":"18425:18:27"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202773272076616c","kind":"string","nodeType":"YulLiteral","src":"18445:34:27","type":"","value":"ECDSA: invalid signature 's' val"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18418:6:27"},"nodeType":"YulFunctionCall","src":"18418:62:27"},"nodeType":"YulExpressionStatement","src":"18418:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18500:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"18511:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18496:3:27"},"nodeType":"YulFunctionCall","src":"18496:18:27"},{"hexValue":"7565","kind":"string","nodeType":"YulLiteral","src":"18516:4:27","type":"","value":"ue"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18489:6:27"},"nodeType":"YulFunctionCall","src":"18489:32:27"},"nodeType":"YulExpressionStatement","src":"18489:32:27"},{"nodeType":"YulAssignment","src":"18530:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18542:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"18553:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18538:3:27"},"nodeType":"YulFunctionCall","src":"18538:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18530:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18316:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18330:4:27","type":""}],"src":"18165:398:27"},{"body":{"nodeType":"YulBlock","src":"18742:224:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18759:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"18770:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18752:6:27"},"nodeType":"YulFunctionCall","src":"18752:21:27"},"nodeType":"YulExpressionStatement","src":"18752:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18793:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"18804:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18789:3:27"},"nodeType":"YulFunctionCall","src":"18789:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"18809:2:27","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18782:6:27"},"nodeType":"YulFunctionCall","src":"18782:30:27"},"nodeType":"YulExpressionStatement","src":"18782:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18832:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"18843:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18828:3:27"},"nodeType":"YulFunctionCall","src":"18828:18:27"},{"hexValue":"45434453413a20696e76616c6964207369676e6174757265202776272076616c","kind":"string","nodeType":"YulLiteral","src":"18848:34:27","type":"","value":"ECDSA: invalid signature 'v' val"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18821:6:27"},"nodeType":"YulFunctionCall","src":"18821:62:27"},"nodeType":"YulExpressionStatement","src":"18821:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18903:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"18914:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18899:3:27"},"nodeType":"YulFunctionCall","src":"18899:18:27"},{"hexValue":"7565","kind":"string","nodeType":"YulLiteral","src":"18919:4:27","type":"","value":"ue"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18892:6:27"},"nodeType":"YulFunctionCall","src":"18892:32:27"},"nodeType":"YulExpressionStatement","src":"18892:32:27"},{"nodeType":"YulAssignment","src":"18933:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18945:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"18956:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18941:3:27"},"nodeType":"YulFunctionCall","src":"18941:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18933:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18719:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18733:4:27","type":""}],"src":"18568:398:27"},{"body":{"nodeType":"YulBlock","src":"19003:95:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19020:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19027:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"19032:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19023:3:27"},"nodeType":"YulFunctionCall","src":"19023:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19013:6:27"},"nodeType":"YulFunctionCall","src":"19013:31:27"},"nodeType":"YulExpressionStatement","src":"19013:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19060:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19063:4:27","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19053:6:27"},"nodeType":"YulFunctionCall","src":"19053:15:27"},"nodeType":"YulExpressionStatement","src":"19053:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19084:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19087:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19077:6:27"},"nodeType":"YulFunctionCall","src":"19077:15:27"},"nodeType":"YulExpressionStatement","src":"19077:15:27"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"18971:127:27"},{"body":{"nodeType":"YulBlock","src":"19150:89:27","statements":[{"body":{"nodeType":"YulBlock","src":"19177:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19179:16:27"},"nodeType":"YulFunctionCall","src":"19179:18:27"},"nodeType":"YulExpressionStatement","src":"19179:18:27"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19170:5:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"19163:6:27"},"nodeType":"YulFunctionCall","src":"19163:13:27"},"nodeType":"YulIf","src":"19160:39:27"},{"nodeType":"YulAssignment","src":"19208:25:27","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19219:5:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19230:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"19226:3:27"},"nodeType":"YulFunctionCall","src":"19226:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19215:3:27"},"nodeType":"YulFunctionCall","src":"19215:18:27"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"19208:3:27"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19132:5:27","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"19142:3:27","type":""}],"src":"19103:136:27"},{"body":{"nodeType":"YulBlock","src":"19418:182:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19435:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"19446:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19428:6:27"},"nodeType":"YulFunctionCall","src":"19428:21:27"},"nodeType":"YulExpressionStatement","src":"19428:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19469:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"19480:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19465:3:27"},"nodeType":"YulFunctionCall","src":"19465:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"19485:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19458:6:27"},"nodeType":"YulFunctionCall","src":"19458:30:27"},"nodeType":"YulExpressionStatement","src":"19458:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19508:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"19519:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19504:3:27"},"nodeType":"YulFunctionCall","src":"19504:18:27"},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","kind":"string","nodeType":"YulLiteral","src":"19524:34:27","type":"","value":"Strings: hex length insufficient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19497:6:27"},"nodeType":"YulFunctionCall","src":"19497:62:27"},"nodeType":"YulExpressionStatement","src":"19497:62:27"},{"nodeType":"YulAssignment","src":"19568:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19580:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"19591:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19576:3:27"},"nodeType":"YulFunctionCall","src":"19576:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19568:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19395:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19409:4:27","type":""}],"src":"19244:356:27"},{"body":{"nodeType":"YulBlock","src":"19637:95:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19654:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19661:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"19666:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"19657:3:27"},"nodeType":"YulFunctionCall","src":"19657:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19647:6:27"},"nodeType":"YulFunctionCall","src":"19647:31:27"},"nodeType":"YulExpressionStatement","src":"19647:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19694:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"19697:4:27","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19687:6:27"},"nodeType":"YulFunctionCall","src":"19687:15:27"},"nodeType":"YulExpressionStatement","src":"19687:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19718:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"19721:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"19711:6:27"},"nodeType":"YulFunctionCall","src":"19711:15:27"},"nodeType":"YulExpressionStatement","src":"19711:15:27"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"19605:127:27"},{"body":{"nodeType":"YulBlock","src":"19911:181:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19928:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"19939:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19921:6:27"},"nodeType":"YulFunctionCall","src":"19921:21:27"},"nodeType":"YulExpressionStatement","src":"19921:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19962:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"19973:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19958:3:27"},"nodeType":"YulFunctionCall","src":"19958:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"19978:2:27","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19951:6:27"},"nodeType":"YulFunctionCall","src":"19951:30:27"},"nodeType":"YulExpressionStatement","src":"19951:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20001:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20012:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19997:3:27"},"nodeType":"YulFunctionCall","src":"19997:18:27"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"20017:33:27","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19990:6:27"},"nodeType":"YulFunctionCall","src":"19990:61:27"},"nodeType":"YulExpressionStatement","src":"19990:61:27"},{"nodeType":"YulAssignment","src":"20060:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20072:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20083:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20068:3:27"},"nodeType":"YulFunctionCall","src":"20068:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20060:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19888:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19902:4:27","type":""}],"src":"19737:355:27"},{"body":{"nodeType":"YulBlock","src":"20271:233:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20288:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20299:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20281:6:27"},"nodeType":"YulFunctionCall","src":"20281:21:27"},"nodeType":"YulExpressionStatement","src":"20281:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20322:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20333:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20318:3:27"},"nodeType":"YulFunctionCall","src":"20318:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"20338:2:27","type":"","value":"43"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20311:6:27"},"nodeType":"YulFunctionCall","src":"20311:30:27"},"nodeType":"YulExpressionStatement","src":"20311:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20361:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20372:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20357:3:27"},"nodeType":"YulFunctionCall","src":"20357:18:27"},{"hexValue":"5472616e73666572436f6e74726f6c3a20616d6f756e74206578636565647320","kind":"string","nodeType":"YulLiteral","src":"20377:34:27","type":"","value":"TransferControl: amount exceeds "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20350:6:27"},"nodeType":"YulFunctionCall","src":"20350:62:27"},"nodeType":"YulExpressionStatement","src":"20350:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20432:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20443:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20428:3:27"},"nodeType":"YulFunctionCall","src":"20428:18:27"},{"hexValue":"7370656e64206c696d6974","kind":"string","nodeType":"YulLiteral","src":"20448:13:27","type":"","value":"spend limit"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20421:6:27"},"nodeType":"YulFunctionCall","src":"20421:41:27"},"nodeType":"YulExpressionStatement","src":"20421:41:27"},{"nodeType":"YulAssignment","src":"20471:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20483:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20494:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20479:3:27"},"nodeType":"YulFunctionCall","src":"20479:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20471:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_4a8e7a3c5a1659064fd99c67e76041fb4b802796f373261324535ea7060d295a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20248:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20262:4:27","type":""}],"src":"20097:407:27"},{"body":{"nodeType":"YulBlock","src":"20683:240:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20700:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20711:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20693:6:27"},"nodeType":"YulFunctionCall","src":"20693:21:27"},"nodeType":"YulExpressionStatement","src":"20693:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20734:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20745:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20730:3:27"},"nodeType":"YulFunctionCall","src":"20730:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"20750:2:27","type":"","value":"50"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20723:6:27"},"nodeType":"YulFunctionCall","src":"20723:30:27"},"nodeType":"YulExpressionStatement","src":"20723:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20773:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20784:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20769:3:27"},"nodeType":"YulFunctionCall","src":"20769:18:27"},{"hexValue":"5472616e73666572436f6e74726f6c3a20616d6f756e74206578636565647320","kind":"string","nodeType":"YulLiteral","src":"20789:34:27","type":"","value":"TransferControl: amount exceeds "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20762:6:27"},"nodeType":"YulFunctionCall","src":"20762:62:27"},"nodeType":"YulExpressionStatement","src":"20762:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20844:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20855:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20840:3:27"},"nodeType":"YulFunctionCall","src":"20840:18:27"},{"hexValue":"706572696f64207370656e64206c696d6974","kind":"string","nodeType":"YulLiteral","src":"20860:20:27","type":"","value":"monthly spend limit"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20833:6:27"},"nodeType":"YulFunctionCall","src":"20833:48:27"},"nodeType":"YulExpressionStatement","src":"20833:48:27"},{"nodeType":"YulAssignment","src":"20890:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20902:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"20913:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20898:3:27"},"nodeType":"YulFunctionCall","src":"20898:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20890:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_3a4f2f6554dd45b81f0d9c44a3f8e422650ccfa40cb95b75fc0a1fdd1f2216d7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20660:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20674:4:27","type":""}],"src":"20509:414:27"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_address__to_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), and(value2, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 0x20), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 0x20)\n        value1 := length\n        value2 := calldataload(add(headStart, 0x20))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let value := calldataload(add(headStart, 128))\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value4 := value\n        value5 := calldataload(add(headStart, 160))\n        value6 := calldataload(add(headStart, 192))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_ba6e7714f3dc9672dee4a937817bb8127b845248a8b5fa5f809e162d8db55ab5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 69)\n        mstore(add(headStart, 64), \"TransactionFee: Cannot set feeAm\")\n        mstore(add(headStart, 96), \"ount and feeFraction at the same\")\n        mstore(add(headStart, 128), \" time\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_7444501452abd4aa62f22c1aadb9716af04f8b5e8d1b8f876d7bf930338b4894__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 51)\n        mstore(add(headStart, 64), \"TransactionFee: Up to 10% transa\")\n        mstore(add(headStart, 96), \"ctionFee can be set\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function increment_t_uint16(value) -> ret\n    {\n        let _1 := 0xffff\n        let value_1 := and(value, _1)\n        if eq(value_1, _1) { panic_error_0x11() }\n        ret := add(value_1, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_3e89525a63fb9c966b61cf8f5305156de8420bc773a2b60828a2f32c3c5797bd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20Permit: expired deadline\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_stringliteral_94ca1ab58dfda790a1782ffbb0c0a140ec51d4148dbeecc6c39e37b25ff4b124__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"ERC20Permit: invalid signature\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8404985d158493dcb8888b28d97ab7d03a6fd3b5993fc007df71079e84dcd25e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 58)\n        mstore(add(headStart, 64), \"TransferControl: maximum fractio\")\n        mstore(add(headStart, 96), \"n is 10**6 (equal to 100%)\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_stringliteral_d3551e30d3095fd81287b88f7139bb09818e34280e85ee821994ebaebbed7072__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"EnumerableMap: nonexistent key\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_c0532a65ade852f12d67926b1625bbc98f7eb7c650703bf531fd4e07ded2c49f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC20Capped: cap exceeded\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, shl(240, 6401))\n        mstore(add(pos, 2), value0)\n        mstore(add(pos, 34), value1)\n        end := add(pos, 66)\n    }\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_00043f6bf76368aa97c21698e9b9d4779e31902453daccf3525ddfb36e53e2be__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1669ff3ba3cdf64474e1193492d05b8434e29b0b495e60095eb5f5c8ec14ce77__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature length\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_520d1f787dbcafbbfc007fd2c4ecf3d2711ec587f3ee9a1215c0b646c3e530bd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature 's' val\")\n        mstore(add(headStart, 96), \"ue\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8522ee1b53216f595394db8e80a64d9e7d9bd512c0811c18debe9f40858597e4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ECDSA: invalid signature 'v' val\")\n        mstore(add(headStart, 96), \"ue\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4a8e7a3c5a1659064fd99c67e76041fb4b802796f373261324535ea7060d295a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"TransferControl: amount exceeds \")\n        mstore(add(headStart, 96), \"spend limit\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3a4f2f6554dd45b81f0d9c44a3f8e422650ccfa40cb95b75fc0a1fdd1f2216d7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"TransferControl: amount exceeds \")\n        mstore(add(headStart, 96), \"monthly spend limit\")\n        tail := add(headStart, 128)\n    }\n}","id":27,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"1442":[{"length":32,"start":916},{"length":32,"start":1933},{"length":32,"start":6607}],"2448":[{"length":32,"start":5358}],"2450":[{"length":32,"start":5316}],"2452":[{"length":32,"start":5274}],"2454":[{"length":32,"start":5441}],"2456":[{"length":32,"start":5478}],"2458":[{"length":32,"start":5399}],"4783":[{"length":32,"start":2051},{"length":32,"start":8712}],"4785":[{"length":32,"start":2015},{"length":32,"start":8676}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x253 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x51BCEE27 GT PUSH2 0x146 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0xC3 JUMPI DUP1 PUSH4 0xD5391393 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x58F JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x5A4 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x5B7 JUMPI DUP1 PUSH4 0xE162533C EQ PUSH2 0x5CA JUMPI DUP1 PUSH4 0xF74929E0 EQ PUSH2 0x5DD JUMPI DUP1 PUSH4 0xFAD71BE2 EQ PUSH2 0x5E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x530 JUMPI DUP1 PUSH4 0xB6AFC4DC EQ PUSH2 0x543 JUMPI DUP1 PUSH4 0xC01BC982 EQ PUSH2 0x556 JUMPI DUP1 PUSH4 0xCA15C873 EQ PUSH2 0x569 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x57C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9010D07C GT PUSH2 0x10A JUMPI DUP1 PUSH4 0x9010D07C EQ PUSH2 0x4CF JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x4FA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x50D JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x515 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x51D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x51BCEE27 EQ PUSH2 0x446 JUMPI DUP1 PUSH4 0x5D1EDB87 EQ PUSH2 0x46D JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x480 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x4A9 JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x4BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x367065DE GT PUSH2 0x198 JUMPI DUP1 PUSH4 0x367065DE EQ PUSH2 0x3D3 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x3E6 JUMPI DUP1 PUSH4 0x3E0B2CDA EQ PUSH2 0x3F9 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x420 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x433 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x370 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x383 JUMPI DUP1 PUSH4 0x355274EA EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x3B8 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x3C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x21B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x1F2C5443 EQ PUSH2 0x2FA JUMPI DUP1 PUSH4 0x234EAEDC EQ PUSH2 0x327 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x34D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x258 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x295 JUMPI DUP1 PUSH4 0xECBD033 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x1681F830 EQ PUSH2 0x2DD JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x26B PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0x2511 JUMP JUMPDEST PUSH2 0x5F9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x288 PUSH2 0x624 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x277 SWAP2 SWAP1 PUSH2 0x2567 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x2A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x25B1 JUMP JUMPDEST PUSH2 0x6B6 JUMP JUMPDEST PUSH2 0x2CF PUSH32 0xD0AC125722F4B4565AB5E91B234E50C4C6F541672AEA816BA090A0EA349ED93F DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x277 JUMP JUMPDEST PUSH2 0x2F0 PUSH2 0x2EB CALLDATASIZE PUSH1 0x4 PUSH2 0x25B1 JUMP JUMPDEST PUSH2 0x6CE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x2CF JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x9 SLOAD PUSH1 0xB SLOAD PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x277 JUMP JUMPDEST PUSH2 0x2CF PUSH2 0x335 CALLDATASIZE PUSH1 0x4 PUSH2 0x25DB JUMP JUMPDEST PUSH2 0x74C JUMP JUMPDEST PUSH2 0x26B PUSH2 0x348 CALLDATASIZE PUSH1 0x4 PUSH2 0x25F6 JUMP JUMPDEST PUSH2 0x8CE JUMP JUMPDEST PUSH2 0x2CF PUSH2 0x35B CALLDATASIZE PUSH1 0x4 PUSH2 0x2632 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2F0 PUSH2 0x37E CALLDATASIZE PUSH1 0x4 PUSH2 0x264B JUMP JUMPDEST PUSH2 0x8F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x277 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x2CF JUMP JUMPDEST PUSH2 0x2CF PUSH2 0x91C JUMP JUMPDEST PUSH2 0x2F0 PUSH2 0x3CE CALLDATASIZE PUSH1 0x4 PUSH2 0x264B JUMP JUMPDEST PUSH2 0x92B JUMP JUMPDEST PUSH2 0x2F0 PUSH2 0x3E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x2677 JUMP JUMPDEST PUSH2 0x9AE JUMP JUMPDEST PUSH2 0x26B PUSH2 0x3F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x25B1 JUMP JUMPDEST PUSH2 0xB42 JUMP JUMPDEST PUSH2 0x2CF PUSH32 0xB24C1025622FE38445B605F5C1A9BB02BE7F6522D24C8A159E5E47E62DBAAECF DUP2 JUMP JUMPDEST PUSH2 0x2F0 PUSH2 0x42E CALLDATASIZE PUSH1 0x4 PUSH2 0x25B1 JUMP JUMPDEST PUSH2 0xB64 JUMP JUMPDEST PUSH2 0x2F0 PUSH2 0x441 CALLDATASIZE PUSH1 0x4 PUSH2 0x2632 JUMP JUMPDEST PUSH2 0xB86 JUMP JUMPDEST PUSH2 0x2CF PUSH32 0x23AB0E580195340A5A67800CAFA0615701EDFA22F79534A52851336E3CF8376A DUP2 JUMP JUMPDEST PUSH2 0x2CF PUSH2 0x47B CALLDATASIZE PUSH1 0x4 PUSH2 0x2632 JUMP JUMPDEST PUSH2 0xB93 JUMP JUMPDEST PUSH2 0x2CF PUSH2 0x48E CALLDATASIZE PUSH1 0x4 PUSH2 0x25DB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x2F0 PUSH2 0x4B7 CALLDATASIZE PUSH1 0x4 PUSH2 0x25B1 JUMP JUMPDEST PUSH2 0xBCA JUMP JUMPDEST PUSH2 0x2CF PUSH2 0x4CA CALLDATASIZE PUSH1 0x4 PUSH2 0x25DB JUMP JUMPDEST PUSH2 0xBDF JUMP JUMPDEST PUSH2 0x4E2 PUSH2 0x4DD CALLDATASIZE PUSH1 0x4 PUSH2 0x26AC JUMP JUMPDEST PUSH2 0xBFD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x277 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x508 CALLDATASIZE PUSH1 0x4 PUSH2 0x264B JUMP JUMPDEST PUSH2 0xC1C JUMP JUMPDEST PUSH2 0x288 PUSH2 0xC47 JUMP JUMPDEST PUSH2 0x2CF PUSH1 0x0 DUP2 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x52B CALLDATASIZE PUSH1 0x4 PUSH2 0x25B1 JUMP JUMPDEST PUSH2 0xC56 JUMP JUMPDEST PUSH2 0x26B PUSH2 0x53E CALLDATASIZE PUSH1 0x4 PUSH2 0x25B1 JUMP JUMPDEST PUSH2 0xCD1 JUMP JUMPDEST PUSH2 0x2F0 PUSH2 0x551 CALLDATASIZE PUSH1 0x4 PUSH2 0x26CE JUMP JUMPDEST PUSH2 0xCDF JUMP JUMPDEST PUSH2 0x26B PUSH2 0x564 CALLDATASIZE PUSH1 0x4 PUSH2 0x25DB JUMP JUMPDEST PUSH2 0xD53 JUMP JUMPDEST PUSH2 0x2CF PUSH2 0x577 CALLDATASIZE PUSH1 0x4 PUSH2 0x2632 JUMP JUMPDEST PUSH2 0xD60 JUMP JUMPDEST PUSH2 0x2F0 PUSH2 0x58A CALLDATASIZE PUSH1 0x4 PUSH2 0x2749 JUMP JUMPDEST PUSH2 0xD77 JUMP JUMPDEST PUSH2 0x2CF PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x29EC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH2 0x2F0 PUSH2 0x5B2 CALLDATASIZE PUSH1 0x4 PUSH2 0x264B JUMP JUMPDEST PUSH2 0xEDB JUMP JUMPDEST PUSH2 0x2CF PUSH2 0x5C5 CALLDATASIZE PUSH1 0x4 PUSH2 0x27BC JUMP JUMPDEST PUSH2 0xF00 JUMP JUMPDEST PUSH2 0x2F0 PUSH2 0x5D8 CALLDATASIZE PUSH1 0x4 PUSH2 0x25DB JUMP JUMPDEST PUSH2 0xF2B JUMP JUMPDEST PUSH2 0x2CF PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2F0 PUSH2 0x5F4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2632 JUMP JUMPDEST PUSH2 0xF60 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5A05180F PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x61E JUMPI POP PUSH2 0x61E DUP3 PUSH2 0x10DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x633 SWAP1 PUSH2 0x27E6 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x65F SWAP1 PUSH2 0x27E6 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6AC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x681 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6AC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x68F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x6C4 DUP2 DUP6 DUP6 PUSH2 0x110F JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x23AB0E580195340A5A67800CAFA0615701EDFA22F79534A52851336E3CF8376A PUSH2 0x6F8 DUP2 PUSH2 0x1234 JUMP JUMPDEST PUSH2 0x704 PUSH1 0xC DUP5 DUP5 PUSH2 0x123E JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0xA1B8D777C2527547849718A04F45B8E5B0F29119C47F9298B20A85F0AD275424 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x757 DUP3 PUSH2 0xD53 JUMP JUMPDEST ISZERO PUSH2 0x767 JUMPI PUSH2 0x61E PUSH1 0xC DUP4 PUSH2 0x1254 JUMP JUMPDEST PUSH2 0x77F PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x29EC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0xC1C JUMP JUMPDEST ISZERO PUSH2 0x7B1 JUMPI PUSH1 0x2 SLOAD PUSH2 0x61E SWAP1 PUSH32 0x0 PUSH2 0x2830 JUMP JUMPDEST PUSH1 0x10 SLOAD PUSH3 0xF4240 SUB PUSH2 0x7DB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x61E JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH2 0x828 PUSH32 0x0 TIMESTAMP PUSH2 0x2830 JUMP JUMPDEST PUSH2 0x832 SWAP2 SWAP1 PUSH2 0x2847 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SUB PUSH2 0x86E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST PUSH1 0x0 PUSH3 0xF4240 PUSH1 0x10 SLOAD DUP4 PUSH2 0x897 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x8A1 SWAP2 SWAP1 PUSH2 0x2869 JUMP JUMPDEST PUSH2 0x8AB SWAP2 SWAP1 PUSH2 0x2881 JUMP JUMPDEST PUSH2 0x8B5 SWAP2 SWAP1 PUSH2 0x2847 JUMP JUMPDEST SWAP1 POP PUSH2 0x8C1 DUP3 DUP3 PUSH2 0x2830 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x8DC DUP6 DUP3 DUP6 PUSH2 0x1269 JUMP JUMPDEST PUSH2 0x8E7 DUP6 DUP6 DUP6 PUSH2 0x12E3 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x90D DUP2 PUSH2 0x1234 JUMP JUMPDEST PUSH2 0x917 DUP4 DUP4 PUSH2 0x146B JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x926 PUSH2 0x148D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x9A0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x103937B632B9903337B91039B2B633 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9AA DUP3 DUP3 PUSH2 0x15B4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0xD0AC125722F4B4565AB5E91B234E50C4C6F541672AEA816BA090A0EA349ED93F PUSH2 0x9D8 DUP2 PUSH2 0x1234 JUMP JUMPDEST DUP3 ISZERO DUP1 PUSH2 0x9E3 JUMPI POP DUP4 ISZERO JUMPDEST PUSH2 0xA63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x45 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E4665653A2043616E6E6F742073657420666565416D PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6F756E7420616E64206665654672616374696F6E206174207468652073616D65 PUSH1 0x64 DUP3 ADD MSTORE PUSH5 0x2074696D65 PUSH1 0xD8 SHL PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x997 JUMP JUMPDEST PUSH3 0x186A0 DUP4 GT ISZERO PUSH2 0xAD2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E4665653A20557020746F20313025207472616E7361 PUSH1 0x44 DUP3 ADD MSTORE PUSH19 0x18DD1A5BDB9199594818D85B881899481CD95D PUSH1 0x6A SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x997 JUMP JUMPDEST PUSH1 0xA DUP5 SWAP1 SSTORE PUSH1 0x9 DUP4 SWAP1 SSTORE PUSH1 0xB DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xD75A7916F83EE976AE8E04E3F9B46C9B16B546303F09F1FC20ECCB6CD6BC476D SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x6C4 DUP2 DUP6 DUP6 PUSH2 0xB55 DUP4 DUP4 PUSH2 0xF00 JUMP JUMPDEST PUSH2 0xB5F SWAP2 SWAP1 PUSH2 0x2869 JUMP JUMPDEST PUSH2 0x110F JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x29EC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xB7C DUP2 PUSH2 0x1234 JUMP JUMPDEST PUSH2 0x917 DUP4 DUP4 PUSH2 0x15D6 JUMP JUMPDEST PUSH2 0xB90 CALLER DUP3 PUSH2 0x15E0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x0 SWAP1 ISZERO PUSH2 0xBA6 JUMPI POP POP PUSH1 0xA SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x9 SLOAD ISZERO PUSH2 0x8C9 JUMPI PUSH3 0xF4240 PUSH1 0x9 SLOAD DUP4 PUSH2 0xBC0 SWAP2 SWAP1 PUSH2 0x2881 JUMP JUMPDEST PUSH2 0x61E SWAP2 SWAP1 PUSH2 0x2847 JUMP JUMPDEST PUSH2 0xBD5 DUP3 CALLER DUP4 PUSH2 0x1269 JUMP JUMPDEST PUSH2 0x9AA DUP3 DUP3 PUSH2 0x15E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x61E JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0xC15 SWAP1 DUP4 PUSH2 0x1728 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x633 SWAP1 PUSH2 0x27E6 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0xC64 DUP3 DUP7 PUSH2 0xF00 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0xCC4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x997 JUMP JUMPDEST PUSH2 0x8E7 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x110F JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x6C4 DUP2 DUP6 DUP6 PUSH2 0x12E3 JUMP JUMPDEST PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x29EC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xCF7 DUP2 PUSH2 0x1234 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH2 0xFFFF DUP2 AND DUP5 GT ISZERO PUSH2 0xD4C JUMPI PUSH2 0xD3A DUP6 DUP6 DUP4 PUSH2 0xFFFF AND DUP2 DUP2 LT PUSH2 0xD1F JUMPI PUSH2 0xD1F PUSH2 0x28A0 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xD34 SWAP2 SWAP1 PUSH2 0x25DB JUMP JUMPDEST DUP5 PUSH2 0x15D6 JUMP JUMPDEST DUP1 PUSH2 0xD44 DUP2 PUSH2 0x28B6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xCFA JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x61E PUSH1 0xC DUP4 PUSH2 0x1734 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH2 0x61E SWAP1 PUSH2 0x1749 JUMP JUMPDEST DUP4 TIMESTAMP GT ISZERO PUSH2 0xDC7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305065726D69743A206578706972656420646561646C696E65000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x997 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP9 DUP9 DUP9 PUSH2 0xDF6 DUP13 PUSH2 0x1753 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND SWAP1 DUP7 ADD MSTORE SWAP3 SWAP1 SWAP2 AND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0xE0 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP PUSH1 0x0 PUSH2 0xE51 DUP3 PUSH2 0x177B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE61 DUP3 DUP8 DUP8 DUP8 PUSH2 0x17C9 JUMP JUMPDEST SWAP1 POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xEC4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332305065726D69743A20696E76616C6964207369676E61747572650000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x997 JUMP JUMPDEST PUSH2 0xECF DUP11 DUP11 DUP11 PUSH2 0x110F JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xEF6 DUP2 PUSH2 0x1234 JUMP JUMPDEST PUSH2 0x917 DUP4 DUP4 PUSH2 0x15B4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH32 0x23AB0E580195340A5A67800CAFA0615701EDFA22F79534A52851336E3CF8376A PUSH2 0xF55 DUP2 PUSH2 0x1234 JUMP JUMPDEST PUSH2 0x917 PUSH1 0xC DUP4 PUSH2 0x17F1 JUMP JUMPDEST PUSH32 0xB24C1025622FE38445B605F5C1A9BB02BE7F6522D24C8A159E5E47E62DBAAECF PUSH2 0xF8A DUP2 PUSH2 0x1234 JUMP JUMPDEST PUSH3 0xF4240 DUP3 GT ISZERO PUSH2 0x1003 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73666572436F6E74726F6C3A206D6178696D756D206672616374696F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E2069732031302A2A362028657175616C20746F203130302529000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x997 JUMP JUMPDEST PUSH1 0x10 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH32 0xA83163EA39ECBDC3AF173E3337234FBE2F88B17DCA9802EC3186E557D365E2D1 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x1049 DUP3 DUP3 PUSH2 0xC1C JUMP JUMPDEST PUSH2 0x9AA JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1081 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC15 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1806 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x61E JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x61E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1171 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x997 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x11D2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x997 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH2 0xB90 DUP2 CALLER PUSH2 0x1855 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 PUSH2 0x18B9 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC15 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x18D6 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1275 DUP5 DUP5 PUSH2 0xF00 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x12DD JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x12D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x997 JUMP JUMPDEST PUSH2 0x12DD DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x110F JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1347 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x997 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x13A9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x997 JUMP JUMPDEST PUSH2 0x13B4 DUP4 DUP4 DUP4 PUSH2 0x1946 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x13ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x997 SWAP1 PUSH2 0x28D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x1424 SWAP1 DUP5 SWAP1 PUSH2 0x2869 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A0C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP5 PUSH1 0x40 MLOAD PUSH2 0x145E SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x12DD JUMP JUMPDEST PUSH2 0x1475 DUP3 DUP3 PUSH2 0x103F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x917 SWAP1 DUP3 PUSH2 0x10C5 JUMP JUMPDEST PUSH1 0x0 ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 ISZERO PUSH2 0x14E6 JUMPI POP PUSH32 0x0 CHAINID EQ JUMPDEST ISZERO PUSH2 0x1510 JUMPI POP PUSH32 0x0 SWAP1 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH32 0x0 PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x0 DUP3 DUP5 ADD MSTORE PUSH32 0x0 PUSH1 0x60 DUP4 ADD MSTORE CHAINID PUSH1 0x80 DUP4 ADD MSTORE ADDRESS PUSH1 0xA0 DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP4 MLOAD DUP1 DUP5 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 SWAP1 SWAP3 ADD SWAP1 SWAP3 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST PUSH2 0x15BE DUP3 DUP3 PUSH2 0x1951 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH2 0x917 SWAP1 DUP3 PUSH2 0x19B8 JUMP JUMPDEST PUSH2 0x9AA DUP3 DUP3 PUSH2 0x19CD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1640 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x997 JUMP JUMPDEST PUSH2 0x164C DUP3 PUSH1 0x0 DUP4 PUSH2 0x1946 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x16C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x997 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x16EF SWAP1 DUP5 SWAP1 PUSH2 0x2830 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A0C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC15 DUP4 DUP4 PUSH2 0x1A5A JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC15 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1A84 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x61E DUP3 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x61E PUSH2 0x1788 PUSH2 0x148D JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD PUSH2 0x1901 PUSH1 0xF0 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x22 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x42 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x62 ADD PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x17DA DUP8 DUP8 DUP8 DUP8 PUSH2 0x1A90 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x17E7 DUP2 PUSH2 0x1B7D JUMP JUMPDEST POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC15 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1D33 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x184D JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x61E JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x61E JUMP JUMPDEST PUSH2 0x185F DUP3 DUP3 PUSH2 0xC1C JUMP JUMPDEST PUSH2 0x9AA JUMPI PUSH2 0x1877 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x14 PUSH2 0x1D50 JUMP JUMPDEST PUSH2 0x1882 DUP4 PUSH1 0x20 PUSH2 0x1D50 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1893 SWAP3 SWAP2 SWAP1 PUSH2 0x291D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x997 SWAP2 PUSH1 0x4 ADD PUSH2 0x2567 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x2 DUP5 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP3 SWAP1 SSTORE PUSH2 0x8C1 DUP5 DUP5 PUSH2 0x1EEC JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO ISZERO DUP1 PUSH2 0x18FA JUMPI POP PUSH2 0x18FA DUP5 DUP5 PUSH2 0x1A84 JUMP JUMPDEST PUSH2 0xC15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x456E756D657261626C654D61703A206E6F6E6578697374656E74206B65790000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x997 JUMP JUMPDEST PUSH2 0x917 DUP4 DUP4 DUP4 PUSH2 0x1EF8 JUMP JUMPDEST PUSH2 0x195B DUP3 DUP3 PUSH2 0xC1C JUMP JUMPDEST ISZERO PUSH2 0x9AA JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC15 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1F2A JUMP JUMPDEST PUSH32 0x0 DUP2 PUSH2 0x19F8 PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A02 SWAP2 SWAP1 PUSH2 0x2869 JUMP JUMPDEST GT ISZERO PUSH2 0x1A50 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332304361707065643A2063617020657863656564656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x997 JUMP JUMPDEST PUSH2 0x9AA DUP3 DUP3 PUSH2 0x201D JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1A71 JUMPI PUSH2 0x1A71 PUSH2 0x28A0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC15 DUP4 DUP4 PUSH2 0x20F6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0 DUP4 GT ISZERO PUSH2 0x1AC7 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x3 PUSH2 0x1B74 JUMP JUMPDEST DUP5 PUSH1 0xFF AND PUSH1 0x1B EQ ISZERO DUP1 ISZERO PUSH2 0x1ADF JUMPI POP DUP5 PUSH1 0xFF AND PUSH1 0x1C EQ ISZERO JUMPDEST ISZERO PUSH2 0x1AF0 JUMPI POP PUSH1 0x0 SWAP1 POP PUSH1 0x4 PUSH2 0x1B74 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP1 DUP5 MSTORE DUP10 SWAP1 MSTORE PUSH1 0xFF DUP9 AND SWAP3 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x60 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SWAP1 PUSH1 0xA0 ADD PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B44 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1B6D JUMPI PUSH1 0x0 PUSH1 0x1 SWAP3 POP SWAP3 POP POP PUSH2 0x1B74 JUMP JUMPDEST SWAP2 POP PUSH1 0x0 SWAP1 POP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1B91 JUMPI PUSH2 0x1B91 PUSH2 0x2992 JUMP JUMPDEST SUB PUSH2 0x1B99 JUMPI POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1BAD JUMPI PUSH2 0x1BAD PUSH2 0x2992 JUMP JUMPDEST SUB PUSH2 0x1BFA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E61747572650000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x997 JUMP JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1C0E JUMPI PUSH2 0x1C0E PUSH2 0x2992 JUMP JUMPDEST SUB PUSH2 0x1C5B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265206C656E67746800 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x997 JUMP JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1C6F JUMPI PUSH2 0x1C6F PUSH2 0x2992 JUMP JUMPDEST SUB PUSH2 0x1CC7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x997 JUMP JUMPDEST PUSH1 0x4 DUP2 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1CDB JUMPI PUSH2 0x1CDB PUSH2 0x2992 JUMP JUMPDEST SUB PUSH2 0xB90 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45434453413A20696E76616C6964207369676E6174757265202776272076616C PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x997 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0xC15 DUP4 DUP4 PUSH2 0x210E JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1D5F DUP4 PUSH1 0x2 PUSH2 0x2881 JUMP JUMPDEST PUSH2 0x1D6A SWAP1 PUSH1 0x2 PUSH2 0x2869 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1D82 JUMPI PUSH2 0x1D82 PUSH2 0x29A8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1DAC JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x3 PUSH1 0xFC SHL DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1DC7 JUMPI PUSH2 0x1DC7 PUSH2 0x28A0 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0xF PUSH1 0xFB SHL DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x1DF6 JUMPI PUSH2 0x1DF6 PUSH2 0x28A0 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x1E1A DUP5 PUSH1 0x2 PUSH2 0x2881 JUMP JUMPDEST PUSH2 0x1E25 SWAP1 PUSH1 0x1 PUSH2 0x2869 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1E9D JUMPI PUSH16 0x181899199A1A9B1B9C1CB0B131B232B3 PUSH1 0x81 SHL DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x1E59 JUMPI PUSH2 0x1E59 PUSH2 0x28A0 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1E6F JUMPI PUSH2 0x1E6F PUSH2 0x28A0 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x1E96 DUP2 PUSH2 0x29BE JUMP JUMPDEST SWAP1 POP PUSH2 0x1E28 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0xC15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x997 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC15 DUP4 DUP4 PUSH2 0x1806 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1F15 JUMPI PUSH2 0x1F10 CALLER DUP3 PUSH2 0x211A JUMP JUMPDEST PUSH2 0x1F1F JUMP JUMPDEST PUSH2 0x1F1F DUP4 DUP3 PUSH2 0x211A JUMP JUMPDEST PUSH2 0x917 DUP4 DUP4 DUP4 PUSH2 0x2391 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0x2013 JUMPI PUSH1 0x0 PUSH2 0x1F4E PUSH1 0x1 DUP4 PUSH2 0x2830 JUMP JUMPDEST DUP6 SLOAD SWAP1 SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0x1F62 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x2830 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x1FC7 JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1F82 JUMPI PUSH2 0x1F82 PUSH2 0x28A0 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1FA5 JUMPI PUSH2 0x1FA5 PUSH2 0x28A0 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE SWAP2 DUP3 MSTORE PUSH1 0x1 DUP9 ADD SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP4 SWAP1 SSTORE JUMPDEST DUP6 SLOAD DUP7 SWAP1 DUP1 PUSH2 0x1FD8 JUMPI PUSH2 0x1FD8 PUSH2 0x29D5 JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x61E JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x61E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x2073 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x997 JUMP JUMPDEST PUSH2 0x207F PUSH1 0x0 DUP4 DUP4 PUSH2 0x1946 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x2091 SWAP2 SWAP1 PUSH2 0x2869 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x20BE SWAP1 DUP5 SWAP1 PUSH2 0x2869 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A0C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD ISZERO ISZERO PUSH2 0xC15 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC15 DUP4 DUP4 PUSH2 0x1F2A JUMP JUMPDEST PUSH2 0x2123 DUP3 PUSH2 0xD53 JUMP JUMPDEST ISZERO PUSH2 0x21B2 JUMPI PUSH1 0x0 PUSH2 0x2135 PUSH1 0xC DUP5 PUSH2 0x1254 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x219B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73666572436F6E74726F6C3A20616D6F756E74206578636565647320 PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x1CDC195B99081B1A5B5A5D PUSH1 0xAA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x997 JUMP JUMPDEST PUSH2 0x12DD DUP4 PUSH2 0x21A9 DUP5 DUP5 PUSH2 0x2830 JUMP JUMPDEST PUSH1 0xC SWAP2 SWAP1 PUSH2 0x123E JUMP JUMPDEST PUSH3 0xF4240 PUSH1 0x10 SLOAD LT DUP1 ISZERO PUSH2 0x21DB JUMPI POP PUSH2 0x21D9 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x29EC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xC1C JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x9AA JUMPI PUSH1 0x0 PUSH32 0x0 PUSH2 0x222D PUSH32 0x0 TIMESTAMP PUSH2 0x2830 JUMP JUMPDEST PUSH2 0x2237 SWAP2 SWAP1 PUSH2 0x2847 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP2 SWAP3 POP PUSH2 0x225D DUP5 DUP4 PUSH2 0x2869 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 SWAP2 POP DUP4 SWAP1 SUB PUSH2 0x229F JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 POP JUMPDEST PUSH1 0x0 PUSH3 0xF4240 PUSH1 0x10 SLOAD DUP5 PUSH2 0x22C8 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x22D2 SWAP2 SWAP1 PUSH2 0x2869 JUMP JUMPDEST PUSH2 0x22DC SWAP2 SWAP1 PUSH2 0x2881 JUMP JUMPDEST PUSH2 0x22E6 SWAP2 SWAP1 PUSH2 0x2847 JUMP JUMPDEST SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2353 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73666572436F6E74726F6C3A20616D6F756E74206578636565647320 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1C195C9A5BD9081CDC195B99081B1A5B5A5D PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x997 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP5 DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xF SWAP1 SWAP2 MSTORE KECCAK256 SWAP1 MLOAD DUP2 SSTORE SWAP2 MLOAD PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x917 CALLER DUP3 PUSH2 0x23AE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x29EC DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH2 0xC1C JUMP JUMPDEST PUSH2 0x9AA JUMPI PUSH1 0x0 PUSH1 0x9 SLOAD GT DUP1 PUSH2 0x23C5 JUMPI POP PUSH1 0x0 PUSH1 0xA SLOAD GT JUMPDEST ISZERO PUSH2 0x9AA JUMPI PUSH1 0x0 PUSH2 0x23D5 DUP3 PUSH2 0xB93 JUMP JUMPDEST PUSH1 0xB SLOAD SWAP1 SWAP2 POP PUSH2 0x917 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH2 0x917 DUP4 DUP4 DUP4 PUSH2 0x23FB DUP4 DUP3 PUSH2 0x211A JUMP JUMPDEST PUSH2 0x917 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH2 0x246C JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x2449 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x997 SWAP1 PUSH2 0x28D7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP3 SWAP1 SUB SWAP1 SSTORE PUSH2 0x2484 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x247E SWAP2 SWAP1 PUSH2 0x2869 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH2 0x24C6 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x24BB SWAP1 DUP5 SWAP1 PUSH2 0x2869 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x24DE SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x24D8 SWAP2 SWAP1 PUSH2 0x2830 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2A0C DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP4 PUSH1 0x40 MLOAD PUSH2 0x1227 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2523 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xC15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2556 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x253E JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x12DD JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2586 DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x253B JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x8C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x25C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x25CD DUP4 PUSH2 0x259A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC15 DUP3 PUSH2 0x259A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x260B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2614 DUP5 PUSH2 0x259A JUMP JUMPDEST SWAP3 POP PUSH2 0x2622 PUSH1 0x20 DUP6 ADD PUSH2 0x259A JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2644 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x265E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x266E PUSH1 0x20 DUP5 ADD PUSH2 0x259A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x268C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH2 0x26A3 PUSH1 0x40 DUP6 ADD PUSH2 0x259A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x26BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x40 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x26E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x26FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP7 ADD SWAP2 POP DUP7 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x270F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x271E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x2733 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 DUP4 ADD SWAP9 SWAP1 SWAP8 POP SWAP6 SWAP1 SWAP2 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x2764 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x276D DUP9 PUSH2 0x259A JUMP JUMPDEST SWAP7 POP PUSH2 0x277B PUSH1 0x20 DUP10 ADD PUSH2 0x259A JUMP JUMPDEST SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x279F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP7 SWAP10 SWAP6 SWAP9 POP SWAP4 SWAP7 SWAP3 SWAP6 SWAP5 PUSH1 0xA0 DUP5 ADD CALLDATALOAD SWAP5 POP PUSH1 0xC0 SWAP1 SWAP4 ADD CALLDATALOAD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x27CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x27D8 DUP4 PUSH2 0x259A JUMP JUMPDEST SWAP2 POP PUSH2 0x266E PUSH1 0x20 DUP5 ADD PUSH2 0x259A JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x27FA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1775 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x2842 JUMPI PUSH2 0x2842 PUSH2 0x281A JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2864 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x287C JUMPI PUSH2 0x287C PUSH2 0x281A JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x289B JUMPI PUSH2 0x289B PUSH2 0x281A JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP1 DUP4 AND DUP2 DUP2 SUB PUSH2 0x28CD JUMPI PUSH2 0x28CD PUSH2 0x281A JUMP JUMPDEST PUSH1 0x1 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x2955 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x253B JUMP JUMPDEST PUSH17 0x1034B99036B4B9B9B4B733903937B6329 PUSH1 0x7D SHL PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x2986 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x253B JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x29CD JUMPI PUSH2 0x29CD PUSH2 0x281A JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID SWAP16 0x2D CREATE INVALID 0xD2 0xC7 PUSH23 0x48DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C89 JUMP 0xA6 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 REVERT 0xB0 BYTE 0xAE 0xAC INVALID PUSH25 0x4C0BB692588BB7D71E9E4F4DD18017D1AEC146EA5E0232AC64 PUSH20 0x6F6C634300080F00330000000000000000000000 ","sourceMap":"450:1945:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;634:212:1;;;;;;:::i;:::-;;:::i;:::-;;;470:14:27;;463:22;445:41;;433:2;418:18;634:212:1;;;;;;;;2156:98:5;;;:::i;:::-;;;;;;;:::i;4433:197::-;;;;;;:::i;:::-;;:::i;426:84:21:-;;475:35;426:84;;;;;1731:25:27;;;1719:2;1704:18;426:84:21;1585:177:27;2799:172:24;;;;;;:::i;:::-;;:::i;:::-;;3244:106:5;3331:12;;3244:106;;1885:130:23;1972:9;;1983:11;;1996;;1885:130;;;2151:25:27;;;2207:2;2192:18;;2185:34;;;;-1:-1:-1;;;;;1996:11:23;2235:18:27;;;2228:60;2139:2;2124:18;1885:130:23;1949:345:27;4212:749:24;;;;;;:::i;:::-;;:::i;5192:286:5:-;;;;;;:::i;:::-;;:::i;4391:129:0:-;;;;;;:::i;:::-;4465:7;4491:12;;;:6;:12;;;;;:22;;;;4391:129;4816:145;;;;;;:::i;:::-;;:::i;3093:91:5:-;;;3175:2;3409:36:27;;3397:2;3382:18;3093:91:5;3267:184:27;635:81:8;705:4;635:81;;2885:113:10;;;:::i;5925:214:0:-;;;;;;:::i;:::-;;:::i;1235:640:23:-;;;;;;:::i;:::-;;:::i;5873:234:5:-;;;;;;:::i;:::-;;:::i;338:82:21:-;;386:34;338:82;;1639:115:22;;;;;;:::i;:::-;;:::i;578:89:7:-;;;;;;:::i;:::-;;:::i;262:70:21:-;;304:28;262:70;;2230:241:23;;;;;;:::i;:::-;;:::i;3408:125:5:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:5;3482:7;3508:18;;;;;;;;;;;;3408:125;973:161:7;;;;;;:::i;:::-;;:::i;2635:126:10:-;;;;;;:::i;:::-;;:::i;1431:151:1:-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;4385:32:27;;;4367:51;;4355:2;4340:18;1431:151:1;4221:203:27;2895:145:0;;;;;;:::i;:::-;;:::i;2367:102:5:-;;;:::i;2027:49:0:-;;2072:4;2027:49;;6594:427:5;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;1102:222:22:-;;;;;;:::i;:::-;;:::i;3598:120:24:-;;;;;;:::i;:::-;;:::i;1750:140:1:-;;;;;;:::i;:::-;;:::i;1948:626:10:-;;;;;;:::i;:::-;;:::i;194:62:21:-;;-1:-1:-1;;;;;;;;;;;194:62:21;;5241:147:0;;;;;;:::i;:::-;;:::i;3976:149:5:-;;;;;;:::i;:::-;;:::i;3337:114:24:-;;;;;;:::i;:::-;;:::i;1073:29::-;;;;;;2110:308;;;;;;:::i;:::-;;:::i;634:212:1:-;719:4;-1:-1:-1;;;;;;742:57:1;;-1:-1:-1;;;742:57:1;;:97;;;803:36;827:11;803:23;:36::i;:::-;735:104;634:212;-1:-1:-1;;634:212:1:o;2156:98:5:-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:12;4570:32:5;719:10:12;4586:7:5;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:5;;4433:197;-1:-1:-1;;;4433:197:5:o;2799:172:24:-;304:28:21;2505:16:0;2516:4;2505:10;:16::i;:::-;2890:37:24::1;:19;2914:4:::0;2920:6;2890:23:::1;:37::i;:::-;-1:-1:-1::0;2942:22:24::1;::::0;;-1:-1:-1;;;;;6663:32:27;;6645:51;;6727:2;6712:18;;6705:34;;;2942:22:24::1;::::0;6618:18:27;2942:22:24::1;;;;;;;2799:172:::0;;;:::o;4212:749::-;4264:14;4294:18;4307:4;4294:12;:18::i;:::-;4290:665;;;4334:29;:19;4358:4;4334:23;:29::i;4290:665::-;4383:26;-1:-1:-1;;;;;;;;;;;4404:4:24;4383:7;:26::i;:::-;4380:575;;;3331:12:5;;4432:21:24;;705:4:8;4432:21:24;:::i;4380:575::-;4487:14;;4505:7;4487:25;4484:461;;-1:-1:-1;;;;;3508:18:5;;3482:7;3508:18;;;;;;;;;;;4538:15:24;3408:125:5;4484:461:24;4592:19;4691:10;4660:27;4678:9;4660:15;:27;:::i;:::-;4659:42;;;;:::i;:::-;-1:-1:-1;;;;;4632:17:24;;;;;;:11;:17;;;;;:23;;;:69;4629:152;;-1:-1:-1;;;;;;4739:17:24;;;;;;:11;:17;;;;;:23;4629:152;4798:20;4872:7;4855:14;;4840:11;4822:15;4832:4;-1:-1:-1;;;;;3508:18:5;3482:7;3508:18;;;;;;;;;;;;3408:125;4822:15:24;:29;;;;:::i;:::-;4821:48;;;;:::i;:::-;:58;;;;:::i;:::-;4798:81;-1:-1:-1;4904:26:24;4919:11;4798:81;4904:26;:::i;:::-;4897:33;4212:749;-1:-1:-1;;;;4212:749:24:o;4484:461::-;4212:749;;;:::o;5192:286:5:-;5319:4;719:10:12;5375:38:5;5391:4;719:10:12;5406:6:5;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:5;;5192:286;-1:-1:-1;;;;5192:286:5:o;4816:145:0:-;4465:7;4491:12;;;:6;:12;;;;;:22;;;2505:16;2516:4;2505:10;:16::i;:::-;4929:25:::1;4940:4;4946:7;4929:10;:25::i;:::-;4816:145:::0;;;:::o;2885:113:10:-;2945:7;2971:20;:18;:20::i;:::-;2964:27;;2885:113;:::o;5925:214:0:-;-1:-1:-1;;;;;6020:23:0;;719:10:12;6020:23:0;6012:83;;;;-1:-1:-1;;;6012:83:0;;7742:2:27;6012:83:0;;;7724:21:27;7781:2;7761:18;;;7754:30;7820:34;7800:18;;;7793:62;-1:-1:-1;;;7871:18:27;;;7864:45;7926:19;;6012:83:0;;;;;;;;;6106:26;6118:4;6124:7;6106:11;:26::i;:::-;5925:214;;:::o;1235:640:23:-;475:35:21;2505:16:0;2516:4;2505:10;:16::i;:::-;1428:17:23;;;:36:::1;;-1:-1:-1::0;1449:15:23;;1428:36:::1;1407:152;;;::::0;-1:-1:-1;;;1407:152:23;;8158:2:27;1407:152:23::1;::::0;::::1;8140:21:27::0;8197:2;8177:18;;;8170:30;8236:34;8216:18;;;8209:62;8307:34;8287:18;;;8280:62;-1:-1:-1;;;8358:19:27;;;8351:36;8404:19;;1407:152:23::1;7956:473:27::0;1407:152:23::1;1606:7;1590:12;:23;;1569:122;;;::::0;-1:-1:-1;;;1569:122:23;;8636:2:27;1569:122:23::1;::::0;::::1;8618:21:27::0;8675:2;8655:18;;;8648:30;8714:34;8694:18;;;8687:62;-1:-1:-1;;;8765:18:27;;;8758:49;8824:19;;1569:122:23::1;8434:415:27::0;1569:122:23::1;1701:9;:22:::0;;;1733:11:::1;:26:::0;;;1769:11:::1;:26:::0;;-1:-1:-1;;;;;;1769:26:23::1;-1:-1:-1::0;;;;;1769:26:23;::::1;::::0;;::::1;::::0;;;1811:57:::1;::::0;;2151:25:27;;;2207:2;2192:18;;2185:34;;;2235:18;;;2228:60;;;;1811:57:23::1;::::0;2139:2:27;2124:18;1811:57:23::1;;;;;;;1235:640:::0;;;;:::o;5873:234:5:-;5961:4;719:10:12;6015:64:5;719:10:12;6031:7:5;6068:10;6040:25;719:10:12;6031:7:5;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;1639:115:22:-;-1:-1:-1;;;;;;;;;;;2505:16:0;2516:4;2505:10;:16::i;:::-;1725:22:22::1;1731:7;1740:6;1725:5;:22::i;578:89:7:-:0;633:27;719:10:12;653:6:7;633:5;:27::i;:::-;578:89;:::o;2230:241:23:-;2327:9;;2301:11;;2327:13;2324:140;;-1:-1:-1;;2360:9:23;;;4212:749:24:o;2324:140:23:-;2388:11;;:15;2384:80;;2457:7;2443:11;;2423:17;:31;;;;:::i;:::-;:41;;;;:::i;973:161:7:-;1049:46;1065:7;719:10:12;1088:6:7;1049:15;:46::i;:::-;1105:22;1111:7;1120:6;1105:5;:22::i;2635:126:10:-;-1:-1:-1;;;;;2730:14:10;;2704:7;2730:14;;;:7;:14;;;;;918::13;2730:24:10;827:112:13;1431:151:1;1521:7;1547:18;;;:12;:18;;;;;:28;;1569:5;1547:21;:28::i;:::-;1540:35;1431:151;-1:-1:-1;;;1431:151:1:o;2895:145:0:-;2981:4;3004:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;3004:29:0;;;;;;;;;;;;;;;2895:145::o;2367:102:5:-;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;6687:4;719:10:12;6687:4:5;6768:25;719:10:12;6785:7:5;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:5;;9056:2:27;6803:85:5;;;9038:21:27;9095:2;9075:18;;;9068:30;9134:34;9114:18;;;9107:62;-1:-1:-1;;;9185:18:27;;;9178:35;9230:19;;6803:85:5;8854:401:27;6803:85:5;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;3729:189::-;3808:4;719:10:12;3862:28:5;719:10:12;3879:2:5;3883:6;3862:9;:28::i;1102:222:22:-;-1:-1:-1;;;;;;;;;;;2505:16:0;2516:4;2505:10;:16::i;:::-;1232:8:22::1;1228:90;1242:19;::::0;::::1;::::0;-1:-1:-1;1228:90:22::1;;;1281:26;1287:8;;1296:1;1287:11;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;1300:6;1281:5;:26::i;:::-;1263:3:::0;::::1;::::0;::::1;:::i;:::-;;;;1228:90;;;;1102:222:::0;;;;:::o;3598:120:24:-;3654:4;3677:34;:19;3706:4;3677:28;:34::i;1750:140:1:-;1830:7;1856:18;;;:12;:18;;;;;:27;;:25;:27::i;1948:626:10:-;2183:8;2164:15;:27;;2156:69;;;;-1:-1:-1;;;2156:69:10;;9796:2:27;2156:69:10;;;9778:21:27;9835:2;9815:18;;;9808:30;9874:31;9854:18;;;9847:59;9923:18;;2156:69:10;9594:353:27;2156:69:10;2236:18;1143:95;2296:5;2303:7;2312:5;2319:16;2329:5;2319:9;:16::i;:::-;2267:79;;;;;;10239:25:27;;;;-1:-1:-1;;;;;10338:15:27;;;10318:18;;;10311:43;10390:15;;;;10370:18;;;10363:43;10422:18;;;10415:34;10465:19;;;10458:35;10509:19;;;10502:35;;;10211:19;;2267:79:10;;;;;;;;;;;;2257:90;;;;;;2236:111;;2358:12;2373:28;2390:10;2373:16;:28::i;:::-;2358:43;;2412:14;2429:28;2443:4;2449:1;2452;2455;2429:13;:28::i;:::-;2412:45;;2485:5;-1:-1:-1;;;;;2475:15:10;:6;-1:-1:-1;;;;;2475:15:10;;2467:58;;;;-1:-1:-1;;;2467:58:10;;10750:2:27;2467:58:10;;;10732:21:27;10789:2;10769:18;;;10762:30;10828:32;10808:18;;;10801:60;10878:18;;2467:58:10;10548:354:27;2467:58:10;2536:31;2545:5;2552:7;2561:5;2536:8;:31::i;:::-;2146:428;;;1948:626;;;;;;;:::o;5241:147:0:-;4465:7;4491:12;;;:6;:12;;;;;:22;;;2505:16;2516:4;2505:10;:16::i;:::-;5355:26:::1;5367:4;5373:7;5355:11;:26::i;3976:149:5:-:0;-1:-1:-1;;;;;4091:18:5;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149::o;3337:114:24:-;304:28:21;2505:16:0;2516:4;2505:10;:16::i;:::-;3412:32:24::1;:19;3439:4:::0;3412:26:::1;:32::i;2110:308::-:0;386:34:21;2505:16:0;2516:4;2505:10;:16::i;:::-;2255:7:24::1;2243:8;:19;;2235:90;;;::::0;-1:-1:-1;;;2235:90:24;;11109:2:27;2235:90:24::1;::::0;::::1;11091:21:27::0;11148:2;11128:18;;;11121:30;11187:34;11167:18;;;11160:62;11258:28;11238:18;;;11231:56;11304:19;;2235:90:24::1;10907:422:27::0;2235:90:24::1;2335:14;:25:::0;;;2376:35:::1;::::0;1731:25:27;;;2376:35:24::1;::::0;1719:2:27;1704:18;2376:35:24::1;;;;;;;2110:308:::0;;:::o;7474:233:0:-;7557:22;7565:4;7571:7;7557;:22::i;:::-;7552:149;;7595:12;;;;:6;:12;;;;;;;;-1:-1:-1;;;;;7595:29:0;;;;;;;;;:36;;-1:-1:-1;;7595:36:0;7627:4;7595:36;;;7677:12;719:10:12;;640:96;7677:12:0;-1:-1:-1;;;;;7650:40:0;7668:7;-1:-1:-1;;;;;7650:40:0;7662:4;7650:40;;;;;;;;;;7474:233;;:::o;8028:150:20:-;8098:4;8121:50;8126:3;-1:-1:-1;;;;;8146:23:20;;8121:4;:50::i;2606:202:0:-;2691:4;-1:-1:-1;;;;;;2714:47:0;;-1:-1:-1;;;2714:47:0;;:87;;-1:-1:-1;;;;;;;;;;937:40:17;;;2765:36:0;829:155:17;10847:370:5;-1:-1:-1;;;;;10978:19:5;;10970:68;;;;-1:-1:-1;;;10970:68:5;;11536:2:27;10970:68:5;;;11518:21:27;11575:2;11555:18;;;11548:30;11614:34;11594:18;;;11587:62;-1:-1:-1;;;11665:18:27;;;11658:34;11709:19;;10970:68:5;11334:400:27;10970:68:5;-1:-1:-1;;;;;11056:21:5;;11048:68;;;;-1:-1:-1;;;11048:68:5;;11941:2:27;11048:68:5;;;11923:21:27;11980:2;11960:18;;;11953:30;12019:34;11999:18;;;11992:62;-1:-1:-1;;;12070:18:27;;;12063:32;12112:19;;11048:68:5;11739:398:27;11048:68:5;-1:-1:-1;;;;;11127:18:5;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11178:32;;1731:25:27;;;11178:32:5;;1704:18:27;11178:32:5;;;;;;;;10847:370;;;:::o;3334:103:0:-;3400:30;3411:4;719:10:12;3400::0;:30::i;11708:212:19:-;11827:4;11850:63;11854:3;-1:-1:-1;;;;;11874:21:19;;11906:5;11850:3;:63::i;13785:168::-;13864:7;13898:47;13902:3;-1:-1:-1;;;;;13922:21:19;;13898:3;:47::i;11498:441:5:-;11628:24;11655:25;11665:5;11672:7;11655:9;:25::i;:::-;11628:52;;-1:-1:-1;;11694:16:5;:37;11690:243;;11775:6;11755:16;:26;;11747:68;;;;-1:-1:-1;;;11747:68:5;;12344:2:27;11747:68:5;;;12326:21:27;12383:2;12363:18;;;12356:30;12422:31;12402:18;;;12395:59;12471:18;;11747:68:5;12142:353:27;11747:68:5;11857:51;11866:5;11873:7;11901:6;11882:16;:25;11857:8;:51::i;:::-;11618:321;11498:441;;;:::o;7475:651::-;-1:-1:-1;;;;;7601:18:5;;7593:68;;;;-1:-1:-1;;;7593:68:5;;12702:2:27;7593:68:5;;;12684:21:27;12741:2;12721:18;;;12714:30;12780:34;12760:18;;;12753:62;-1:-1:-1;;;12831:18:27;;;12824:35;12876:19;;7593:68:5;12500:401:27;7593:68:5;-1:-1:-1;;;;;7679:16:5;;7671:64;;;;-1:-1:-1;;;7671:64:5;;13108:2:27;7671:64:5;;;13090:21:27;13147:2;13127:18;;;13120:30;13186:34;13166:18;;;13159:62;-1:-1:-1;;;13237:18:27;;;13230:33;13280:19;;7671:64:5;12906:399:27;7671:64:5;7746:38;7767:4;7773:2;7777:6;7746:20;:38::i;:::-;-1:-1:-1;;;;;7817:15:5;;7795:19;7817:15;;;;;;;;;;;7850:21;;;;7842:72;;;;-1:-1:-1;;;7842:72:5;;;;;;;:::i;:::-;-1:-1:-1;;;;;7948:15:5;;;:9;:15;;;;;;;;;;;7966:20;;;7948:38;;8006:13;;;;;;;;:23;;7980:6;;7948:9;8006:23;;7980:6;;8006:23;:::i;:::-;;;;;;;;8060:2;-1:-1:-1;;;;;8045:26:5;8054:4;-1:-1:-1;;;;;8045:26:5;-1:-1:-1;;;;;;;;;;;8064:6:5;8045:26;;;;1731:25:27;;1719:2;1704:18;;1585:177;8045:26:5;;;;;;;;8082:37;4816:145:0;1978:166:1;2065:31;2082:4;2088:7;2065:16;:31::i;:::-;2106:18;;;;:12;:18;;;;;:31;;2129:7;2106:22;:31::i;3143:308:16:-;3196:7;3227:4;-1:-1:-1;;;;;3236:12:16;3219:29;;:66;;;;;3269:16;3252:13;:33;3219:66;3215:230;;;-1:-1:-1;3308:24:16;;3143:308::o;3215:230::-;-1:-1:-1;3633:73:16;;;3392:10;3633:73;;;;15931:25:27;;;;3404:12:16;15972:18:27;;;15965:34;3418:15:16;16015:18:27;;;16008:34;3677:13:16;16058:18:27;;;16051:34;3700:4:16;16101:19:27;;;;16094:61;;;;3633:73:16;;;;;;;;;;15903:19:27;;;;3633:73:16;;;3623:84;;;;;;2885:113:10:o;2233:171:1:-;2321:32;2339:4;2345:7;2321:17;:32::i;:::-;2363:18;;;;:12;:18;;;;;:34;;2389:7;2363:25;:34::i;1829:141:22:-;1940:23;1952:2;1956:6;1940:11;:23::i;9848:576:5:-;-1:-1:-1;;;;;9931:21:5;;9923:67;;;;-1:-1:-1;;;9923:67:5;;13919:2:27;9923:67:5;;;13901:21:27;13958:2;13938:18;;;13931:30;13997:34;13977:18;;;13970:62;-1:-1:-1;;;14048:18:27;;;14041:31;14089:19;;9923:67:5;13717:397:27;9923:67:5;10001:49;10022:7;10039:1;10043:6;10001:20;:49::i;:::-;-1:-1:-1;;;;;10086:18:5;;10061:22;10086:18;;;;;;;;;;;10122:24;;;;10114:71;;;;-1:-1:-1;;;10114:71:5;;14321:2:27;10114:71:5;;;14303:21:27;14360:2;14340:18;;;14333:30;14399:34;14379:18;;;14372:62;-1:-1:-1;;;14450:18:27;;;14443:32;14492:19;;10114:71:5;14119:398:27;10114:71:5;-1:-1:-1;;;;;10219:18:5;;:9;:18;;;;;;;;;;10240:23;;;10219:44;;10283:12;:22;;10257:6;;10219:9;10283:22;;10257:6;;10283:22;:::i;:::-;;;;-1:-1:-1;;10321:37:5;;1731:25:27;;;10347:1:5;;-1:-1:-1;;;;;10321:37:5;;;-1:-1:-1;;;;;;;;;;;10321:37:5;1719:2:27;1704:18;10321:37:5;;;;;;;4816:145:0;;;:::o;9286:156:20:-;9360:7;9410:22;9414:3;9426:5;9410:3;:22::i;12315:166:19:-;12399:4;12422:52;12431:3;-1:-1:-1;;;;;12451:21:19;;12422:8;:52::i;8829:115:20:-;8892:7;8918:19;8926:3;4444:18;;4362:107;3129:203:10;-1:-1:-1;;;;;3249:14:10;;3189:15;3249:14;;;:7;:14;;;;;918::13;;1050:1;1032:19;;;;918:14;3308:17:10;3206:126;3129:203;;;:::o;4339:165:16:-;4416:7;4442:55;4464:20;:18;:20::i;:::-;4486:10;8677:57:15;;-1:-1:-1;;;8677:57:15;;;16778:27:27;16821:11;;;16814:27;;;16857:12;;;16850:28;;;8641:7:15;;16894:12:27;;8677:57:15;;;;;;;;;;;;8667:68;;;;;;8660:75;;8548:194;;;;;6903:270;7026:7;7046:17;7065:18;7087:25;7098:4;7104:1;7107;7110;7087:10;:25::i;:::-;7045:67;;;;7122:18;7134:5;7122:11;:18::i;:::-;-1:-1:-1;7157:9:15;6903:270;-1:-1:-1;;;;;6903:270:15:o;12079:157:19:-;12156:4;12179:50;12186:3;-1:-1:-1;;;;;12206:21:19;;12179:6;:50::i;2113:404:20:-;2176:4;4250:19;;;:12;;;:19;;;;;;2192:319;;-1:-1:-1;2234:23:20;;;;;;;;:11;:23;;;;;;;;;;;;;2414:18;;2392:19;;;:12;;;:19;;;;;;:40;;;;2446:11;;2192:319;-1:-1:-1;2495:5:20;2488:12;;3718:492:0;3806:22;3814:4;3820:7;3806;:22::i;:::-;3801:403;;3989:41;4017:7;-1:-1:-1;;;;;3989:41:0;4027:2;3989:19;:41::i;:::-;4101:38;4129:4;4136:2;4101:19;:38::i;:::-;3896:265;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3896:265:0;;;;;;;;;;-1:-1:-1;;;3844:349:0;;;;;;;:::i;2439:204:19:-;2561:4;2577:16;;;:11;;;:16;;;;;:24;;;2618:18;2577:3;2589;2618:13;:18::i;4543:247::-;4625:7;4660:16;;;:11;;;:16;;;;;;4694:10;;;;:32;;;4708:18;4717:3;4722;4708:8;:18::i;:::-;4686:75;;;;-1:-1:-1;;;4686:75:19;;15515:2:27;4686:75:19;;;15497:21:27;15554:2;15534:18;;;15527:30;15593:32;15573:18;;;15566:60;15643:18;;4686:75:19;15313:354:27;1976:211:22;2136:44;2163:4;2169:2;2173:6;2136:26;:44::i;7878:234:0:-;7961:22;7969:4;7975:7;7961;:22::i;:::-;7957:149;;;8031:5;7999:12;;;:6;:12;;;;;;;;-1:-1:-1;;;;;7999:29:0;;;;;;;;;;:37;;-1:-1:-1;;7999:37:0;;;8055:40;719:10:12;;7999:12:0;;8055:40;;8031:5;8055:40;7878:234;;:::o;8346:156:20:-;8419:4;8442:53;8450:3;-1:-1:-1;;;;;8470:23:20;;8442:7;:53::i;769:204:8:-;705:4;883:6;861:19;3331:12:5;;;3244:106;861:19:8;:28;;;;:::i;:::-;:37;;853:75;;;;-1:-1:-1;;;853:75:8;;16368:2:27;853:75:8;;;16350:21:27;16407:2;16387:18;;;16380:30;16446:27;16426:18;;;16419:55;16491:18;;853:75:8;16166:349:27;853:75:8;938:28;950:7;959:6;938:11;:28::i;4811:118:20:-;4878:7;4904:3;:11;;4916:5;4904:18;;;;;;;;:::i;:::-;;;;;;;;;4897:25;;4811:118;;;;:::o;3054:140:19:-;3141:4;3164:23;:3;3183;3164:18;:23::i;5167:1603:15:-;5293:7;;6217:66;6204:79;;6200:161;;;-1:-1:-1;6315:1:15;;-1:-1:-1;6319:30:15;6299:51;;6200:161;6374:1;:7;;6379:2;6374:7;;:18;;;;;6385:1;:7;;6390:2;6385:7;;6374:18;6370:100;;;-1:-1:-1;6424:1:15;;-1:-1:-1;6428:30:15;6408:51;;6370:100;6581:24;;;6564:14;6581:24;;;;;;;;;17144:25:27;;;17217:4;17205:17;;17185:18;;;17178:45;;;;17239:18;;;17232:34;;;17282:18;;;17275:34;;;6581:24:15;;17116:19:27;;6581:24:15;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6581:24:15;;-1:-1:-1;;6581:24:15;;;-1:-1:-1;;;;;;;6619:20:15;;6615:101;;6671:1;6675:29;6655:50;;;;;;;6615:101;6734:6;-1:-1:-1;6742:20:15;;-1:-1:-1;5167:1603:15;;;;;;;;:::o;548:631::-;625:20;616:5;:29;;;;;;;;:::i;:::-;;612:561;;548:631;:::o;612:561::-;721:29;712:5;:38;;;;;;;;:::i;:::-;;708:465;;766:34;;-1:-1:-1;;;766:34:15;;17654:2:27;766:34:15;;;17636:21:27;17693:2;17673:18;;;17666:30;17732:26;17712:18;;;17705:54;17776:18;;766:34:15;17452:348:27;708:465:15;830:35;821:5;:44;;;;;;;;:::i;:::-;;817:356;;881:41;;-1:-1:-1;;;881:41:15;;18007:2:27;881:41:15;;;17989:21:27;18046:2;18026:18;;;18019:30;18085:33;18065:18;;;18058:61;18136:18;;881:41:15;17805:355:27;817:356:15;952:30;943:5;:39;;;;;;;;:::i;:::-;;939:234;;998:44;;-1:-1:-1;;;998:44:15;;18367:2:27;998:44:15;;;18349:21:27;18406:2;18386:18;;;18379:30;18445:34;18425:18;;;18418:62;-1:-1:-1;;;18496:18:27;;;18489:32;18538:19;;998:44:15;18165:398:27;939:234:15;1072:30;1063:5;:39;;;;;;;;:::i;:::-;;1059:114;;1118:44;;-1:-1:-1;;;1118:44:15;;18770:2:27;1118:44:15;;;18752:21:27;18809:2;18789:18;;;18782:30;18848:34;18828:18;;;18821:62;-1:-1:-1;;;18899:18:27;;;18892:32;18941:19;;1118:44:15;18568:398:27;2811:164:19;2891:4;2914:16;;;:11;;;:16;;;;;2907:23;;;2947:21;2914:3;2926;2947:16;:21::i;1652:441:14:-;1727:13;1752:19;1784:10;1788:6;1784:1;:10;:::i;:::-;:14;;1797:1;1784:14;:::i;:::-;1774:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1774:25:14;;1752:47;;-1:-1:-1;;;1809:6:14;1816:1;1809:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1809:15:14;;;;;;;;;-1:-1:-1;;;1834:6:14;1841:1;1834:9;;;;;;;;:::i;:::-;;;;:15;-1:-1:-1;;;;;1834:15:14;;;;;;;;-1:-1:-1;1864:9:14;1876:10;1880:6;1876:1;:10;:::i;:::-;:14;;1889:1;1876:14;:::i;:::-;1864:26;;1859:132;1896:1;1892;:5;1859:132;;;-1:-1:-1;;;1943:5:14;1951:3;1943:11;1930:25;;;;;;;:::i;:::-;;;;1918:6;1925:1;1918:9;;;;;;;;:::i;:::-;;;;:37;-1:-1:-1;;;;;1918:37:14;;;;;;;;-1:-1:-1;1979:1:14;1969:11;;;;;1899:3;;;:::i;:::-;;;1859:132;;;-1:-1:-1;2008:10:14;;2000:55;;;;-1:-1:-1;;;2000:55:14;;19446:2:27;2000:55:14;;;19428:21:27;;;19465:18;;;19458:30;19524:34;19504:18;;;19497:62;19576:18;;2000:55:14;19244:356:27;5818:123:20;5888:4;5911:23;5916:3;5928:5;5911:4;:23::i;5993:323:24:-;-1:-1:-1;;;;;6132:18:24;;6129:126;;6165:28;719:10:12;6186:6:24;6165;:28::i;:::-;6129:126;;;6224:20;6231:4;6237:6;6224;:20::i;:::-;6265:44;6292:4;6298:2;6302:6;6265:26;:44::i;2685:1388:20:-;2751:4;2888:19;;;:12;;;:19;;;;;;2922:15;;2918:1149;;3291:21;3315:14;3328:1;3315:10;:14;:::i;:::-;3363:18;;3291:38;;-1:-1:-1;3343:17:20;;3363:22;;3384:1;;3363:22;:::i;:::-;3343:42;;3417:13;3404:9;:26;3400:398;;3450:17;3470:3;:11;;3482:9;3470:22;;;;;;;;:::i;:::-;;;;;;;;;3450:42;;3621:9;3592:3;:11;;3604:13;3592:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3704:23;;;:12;;;:23;;;;;:36;;;3400:398;3876:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3968:3;:12;;:19;3981:5;3968:19;;;;;;;;;;;3961:26;;;4009:4;4002:11;;;;;;;2918:1149;4051:5;4044:12;;;;;9139:389:5;-1:-1:-1;;;;;9222:21:5;;9214:65;;;;-1:-1:-1;;;9214:65:5;;19939:2:27;9214:65:5;;;19921:21:27;19978:2;19958:18;;;19951:30;20017:33;19997:18;;;19990:61;20068:18;;9214:65:5;19737:355:27;9214:65:5;9290:49;9319:1;9323:7;9332:6;9290:20;:49::i;:::-;9366:6;9350:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9382:18:5;;:9;:18;;;;;;;;;;:28;;9404:6;;9382:9;:28;;9404:6;;9382:28;:::i;:::-;;;;-1:-1:-1;;9425:37:5;;1731:25:27;;;-1:-1:-1;;;;;9425:37:5;;;9442:1;;-1:-1:-1;;;;;;;;;;;9425:37:5;1719:2:27;1704:18;9425:37:5;;;;;;;5925:214:0;;:::o;6319:138:20:-;6399:4;4250:19;;;:12;;;:19;;;;;;:24;;6422:28;4154:127;6109:129;6182:4;6205:26;6213:3;6225:5;6205:7;:26::i;4967:1020:24:-;5035:18;5048:4;5035:12;:18::i;:::-;5032:949;;;5069:23;5095:29;:19;5119:4;5095:23;:29::i;:::-;5069:55;;5156:15;5146:6;:25;;5138:81;;;;-1:-1:-1;;;5138:81:24;;20299:2:27;5138:81:24;;;20281:21:27;20338:2;20318:18;;;20311:30;20377:34;20357:18;;;20350:62;-1:-1:-1;;;20428:18:27;;;20421:41;20479:19;;5138:81:24;20097:407:27;5138:81:24;5233:55;5257:4;5263:24;5281:6;5263:15;:24;:::i;:::-;5233:19;;:55;:23;:55::i;5032:949::-;5326:7;5309:14;;:24;:63;;;;-1:-1:-1;5338:34:24;-1:-1:-1;;;;;;;;;;;719:10:12;2895:145:0;:::i;5338:34:24:-;5337:35;5309:63;5305:676;;;5388:20;5443:10;5412:27;5430:9;5412:15;:27;:::i;:::-;5411:42;;;;:::i;:::-;-1:-1:-1;;;;;5489:17:24;;5467:19;5489:17;;;:11;:17;;;;;:23;5388:65;;-1:-1:-1;5551:20:24;5565:6;5489:23;5551:20;:::i;:::-;-1:-1:-1;;;;;5588:17:24;;;;;;:11;:17;;;;;:23;;;5526:45;;-1:-1:-1;5588:39:24;;;5585:114;;-1:-1:-1;;;;;5661:17:24;;;;;;:11;:17;;;;;:23;;-1:-1:-1;5585:114:24;5712:20;5786:7;5769:14;;5754:11;5736:15;5746:4;-1:-1:-1;;;;;3508:18:5;3482:7;3508:18;;;;;;;;;;;;3408:125;5736:15:24;:29;;;;:::i;:::-;5735:48;;;;:::i;:::-;:58;;;;:::i;:::-;5712:81;;5833:12;5815:14;:30;;5807:93;;;;-1:-1:-1;;;5807:93:24;;20711:2:27;5807:93:24;;;20693:21:27;20750:2;20730:18;;;20723:30;20789:34;20769:18;;;20762:62;-1:-1:-1;;;20840:18:27;;;20833:48;20898:19;;5807:93:24;20509:414:27;5807:93:24;-1:-1:-1;5934:36:24;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5914:17:24;;-1:-1:-1;5914:17:24;;;:11;:17;;;;:56;;;;;;;;;;;;;;-1:-1:-1;4967:1020:24;;:::o;3106:238:23:-;3242:40;719:10:12;3275:6:23;2849:28;-1:-1:-1;;;;;;;;;;;2870:6:23;2849:7;:28::i;:::-;2845:245;;2910:1;2896:11;;:15;:32;;;;2927:1;2915:9;;:13;2896:32;2893:187;;;2948:23;2974:22;2989:6;2974:14;:22::i;:::-;3036:11;;2948:48;;-1:-1:-1;3014:51:23;;3028:6;;-1:-1:-1;;;;;3036:11:23;2948:48;2349:37:22;2369:4;2375:2;2379:6;6454:20:24;6461:4;6467:6;6454;:20::i;:::-;6493:37;6513:4;6519:2;6523:6;-1:-1:-1;;;;;8369:18:5;;;8366:317;;-1:-1:-1;;;;;8424:15:5;;8402:19;8424:15;;;;;;;;;;;8461:21;;;;8453:72;;;;-1:-1:-1;;;8453:72:5;;;;;;;:::i;:::-;-1:-1:-1;;;;;8567:15:5;;:9;:15;;;;;;;;;;8585:20;;;;8567:38;;8366:317;;;8666:6;8650:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;8366:317:5;-1:-1:-1;;;;;8696:16:5;;;8693:122;;-1:-1:-1;;;;;8728:13:5;;:9;:13;;;;;;;;;;:23;;8745:6;;8728:9;:23;;8745:6;;8728:23;:::i;:::-;;;;-1:-1:-1;8693:122:5;;-1:-1:-1;8693:122:5;;8798:6;8782:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;8693:122:5;8845:2;-1:-1:-1;;;;;8830:26:5;8839:4;-1:-1:-1;;;;;8830:26:5;-1:-1:-1;;;;;;;;;;;8849:6:5;8830:26;;;;1731:25:27;;1719:2;1704:18;;1585:177;14:286;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:27;;209:43;;199:71;;266:1;263;256:12;497:258;569:1;579:113;593:6;590:1;587:13;579:113;;;669:11;;;663:18;650:11;;;643:39;615:2;608:10;579:113;;;710:6;707:1;704:13;701:48;;;-1:-1:-1;;745:1:27;727:16;;720:27;497:258::o;760:383::-;909:2;898:9;891:21;872:4;941:6;935:13;984:6;979:2;968:9;964:18;957:34;1000:66;1059:6;1054:2;1043:9;1039:18;1034:2;1026:6;1022:15;1000:66;:::i;:::-;1127:2;1106:15;-1:-1:-1;;1102:29:27;1087:45;;;;1134:2;1083:54;;760:383;-1:-1:-1;;760:383:27:o;1148:173::-;1216:20;;-1:-1:-1;;;;;1265:31:27;;1255:42;;1245:70;;1311:1;1308;1301:12;1326:254;1394:6;1402;1455:2;1443:9;1434:7;1430:23;1426:32;1423:52;;;1471:1;1468;1461:12;1423:52;1494:29;1513:9;1494:29;:::i;:::-;1484:39;1570:2;1555:18;;;;1542:32;;-1:-1:-1;;;1326:254:27:o;2299:186::-;2358:6;2411:2;2399:9;2390:7;2386:23;2382:32;2379:52;;;2427:1;2424;2417:12;2379:52;2450:29;2469:9;2450:29;:::i;2490:328::-;2567:6;2575;2583;2636:2;2624:9;2615:7;2611:23;2607:32;2604:52;;;2652:1;2649;2642:12;2604:52;2675:29;2694:9;2675:29;:::i;:::-;2665:39;;2723:38;2757:2;2746:9;2742:18;2723:38;:::i;:::-;2713:48;;2808:2;2797:9;2793:18;2780:32;2770:42;;2490:328;;;;;:::o;2823:180::-;2882:6;2935:2;2923:9;2914:7;2910:23;2906:32;2903:52;;;2951:1;2948;2941:12;2903:52;-1:-1:-1;2974:23:27;;2823:180;-1:-1:-1;2823:180:27:o;3008:254::-;3076:6;3084;3137:2;3125:9;3116:7;3112:23;3108:32;3105:52;;;3153:1;3150;3143:12;3105:52;3189:9;3176:23;3166:33;;3218:38;3252:2;3241:9;3237:18;3218:38;:::i;:::-;3208:48;;3008:254;;;;;:::o;3456:322::-;3533:6;3541;3549;3602:2;3590:9;3581:7;3577:23;3573:32;3570:52;;;3618:1;3615;3608:12;3570:52;3654:9;3641:23;3631:33;;3711:2;3700:9;3696:18;3683:32;3673:42;;3734:38;3768:2;3757:9;3753:18;3734:38;:::i;:::-;3724:48;;3456:322;;;;;:::o;3968:248::-;4036:6;4044;4097:2;4085:9;4076:7;4072:23;4068:32;4065:52;;;4113:1;4110;4103:12;4065:52;-1:-1:-1;;4136:23:27;;;4206:2;4191:18;;;4178:32;;-1:-1:-1;3968:248:27:o;4429:689::-;4524:6;4532;4540;4593:2;4581:9;4572:7;4568:23;4564:32;4561:52;;;4609:1;4606;4599:12;4561:52;4649:9;4636:23;4678:18;4719:2;4711:6;4708:14;4705:34;;;4735:1;4732;4725:12;4705:34;4773:6;4762:9;4758:22;4748:32;;4818:7;4811:4;4807:2;4803:13;4799:27;4789:55;;4840:1;4837;4830:12;4789:55;4880:2;4867:16;4906:2;4898:6;4895:14;4892:34;;;4922:1;4919;4912:12;4892:34;4977:7;4970:4;4960:6;4957:1;4953:14;4949:2;4945:23;4941:34;4938:47;4935:67;;;4998:1;4995;4988:12;4935:67;5029:4;5021:13;;;;5053:6;;-1:-1:-1;5091:20:27;;;;5078:34;;4429:689;-1:-1:-1;;;;4429:689:27:o;5123:693::-;5234:6;5242;5250;5258;5266;5274;5282;5335:3;5323:9;5314:7;5310:23;5306:33;5303:53;;;5352:1;5349;5342:12;5303:53;5375:29;5394:9;5375:29;:::i;:::-;5365:39;;5423:38;5457:2;5446:9;5442:18;5423:38;:::i;:::-;5413:48;;5508:2;5497:9;5493:18;5480:32;5470:42;;5559:2;5548:9;5544:18;5531:32;5521:42;;5613:3;5602:9;5598:19;5585:33;5658:4;5651:5;5647:16;5640:5;5637:27;5627:55;;5678:1;5675;5668:12;5627:55;5123:693;;;;-1:-1:-1;5123:693:27;;;;5701:5;5753:3;5738:19;;5725:33;;-1:-1:-1;5805:3:27;5790:19;;;5777:33;;5123:693;-1:-1:-1;;5123:693:27:o;5821:260::-;5889:6;5897;5950:2;5938:9;5929:7;5925:23;5921:32;5918:52;;;5966:1;5963;5956:12;5918:52;5989:29;6008:9;5989:29;:::i;:::-;5979:39;;6037:38;6071:2;6060:9;6056:18;6037:38;:::i;6086:380::-;6165:1;6161:12;;;;6208;;;6229:61;;6283:4;6275:6;6271:17;6261:27;;6229:61;6336:2;6328:6;6325:14;6305:18;6302:38;6299:161;;6382:10;6377:3;6373:20;6370:1;6363:31;6417:4;6414:1;6407:15;6445:4;6442:1;6435:15;6750:127;6811:10;6806:3;6802:20;6799:1;6792:31;6842:4;6839:1;6832:15;6866:4;6863:1;6856:15;6882:125;6922:4;6950:1;6947;6944:8;6941:34;;;6955:18;;:::i;:::-;-1:-1:-1;6992:9:27;;6882:125::o;7012:217::-;7052:1;7078;7068:132;;7122:10;7117:3;7113:20;7110:1;7103:31;7157:4;7154:1;7147:15;7185:4;7182:1;7175:15;7068:132;-1:-1:-1;7214:9:27;;7012:217::o;7234:128::-;7274:3;7305:1;7301:6;7298:1;7295:13;7292:39;;;7311:18;;:::i;:::-;-1:-1:-1;7347:9:27;;7234:128::o;7367:168::-;7407:7;7473:1;7469;7465:6;7461:14;7458:1;7455:21;7450:1;7443:9;7436:17;7432:45;7429:71;;;7480:18;;:::i;:::-;-1:-1:-1;7520:9:27;;7367:168::o;9260:127::-;9321:10;9316:3;9312:20;9309:1;9302:31;9352:4;9349:1;9342:15;9376:4;9373:1;9366:15;9392:197;9430:3;9458:6;9499:2;9492:5;9488:14;9526:2;9517:7;9514:15;9511:41;;9532:18;;:::i;:::-;9581:1;9568:15;;9392:197;-1:-1:-1;;;9392:197:27:o;13310:402::-;13512:2;13494:21;;;13551:2;13531:18;;;13524:30;13590:34;13585:2;13570:18;;13563:62;-1:-1:-1;;;13656:2:27;13641:18;;13634:36;13702:3;13687:19;;13310:402::o;14522:786::-;14933:25;14928:3;14921:38;14903:3;14988:6;14982:13;15004:62;15059:6;15054:2;15049:3;15045:12;15038:4;15030:6;15026:17;15004:62;:::i;:::-;-1:-1:-1;;;15125:2:27;15085:16;;;15117:11;;;15110:40;15175:13;;15197:63;15175:13;15246:2;15238:11;;15231:4;15219:17;;15197:63;:::i;:::-;15280:17;15299:2;15276:26;;14522:786;-1:-1:-1;;;;14522:786:27:o;17320:127::-;17381:10;17376:3;17372:20;17369:1;17362:31;17412:4;17409:1;17402:15;17436:4;17433:1;17426:15;18971:127;19032:10;19027:3;19023:20;19020:1;19013:31;19063:4;19060:1;19053:15;19087:4;19084:1;19077:15;19103:136;19142:3;19170:5;19160:39;;19179:18;;:::i;:::-;-1:-1:-1;;;19215:18:27;;19103:136::o;19605:127::-;19666:10;19661:3;19657:20;19654:1;19647:31;19697:4;19694:1;19687:15;19721:4;19718:1;19711:15"},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","DOMAIN_SEPARATOR()":"3644e515","MINTER_ROLE()":"d5391393","RESTRICTOR_ROLE()":"51bcee27","TRANSACTION_FEE_SETTER()":"0ecbd033","TRANSFER_LIMIT_SETTER()":"3e0b2cda","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","canSpend(address)":"234eaedc","cap()":"355274ea","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","district(address)":"e162533c","feeDetails()":"1f2c5443","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","increaseAllowance(address,uint256)":"39509351","isRestricted(address)":"c01bc982","mint(address,uint256)":"40c10f19","mintBatch(address[],uint256)":"b6afc4dc","name()":"06fdde03","nonces(address)":"7ecebe00","monthlyLimit()":"f74929e0","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","renounceRole(bytes32,address)":"36568abe","restrict(address,uint256)":"1681f830","revokeRole(bytes32,address)":"d547741f","setPeriodTransferLimit(uint256)":"fad71be2","setTransactionFee(uint256,uint256,address)":"367065de","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","totalSupply()":"18160ddd","transactionFee(uint256)":"5d1edb87","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_monthlyTime\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"initialAdmin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"District\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Restrict\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fraction\",\"type\":\"uint256\"}],\"name\":\"SetPeriodTransferLimit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_feeAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_feeFraction\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_feeReceiver\",\"type\":\"address\"}],\"name\":\"SetTransactionFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RESTRICTOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRANSACTION_FEE_SETTER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRANSFER_LIMIT_SETTER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"canSpend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"district\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isRestricted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mintBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"monthlyLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"restrict\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fraction\",\"type\":\"uint256\"}],\"name\":\"setPeriodTransferLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_feeFraction\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_feeReceiver\",\"type\":\"address\"}],\"name\":\"setTransactionFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"transferingAmount\",\"type\":\"uint256\"}],\"name\":\"transactionFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"See {IERC20Permit-DOMAIN_SEPARATOR}.\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"canSpend(address)\":{\"details\":\"if the address restricted, the amount equals remaining spendable amount for the  address. else if there is a spend limit active for the contract, the amount equals  the address's remaining monthly spendable amount. else the amount equals balance of the address. MINTER_ROLE can also be restricted so \",\"params\":{\"addr\":\"the address that is being checked.\"},\"returns\":{\"amount\":\"that the address can spend. \"}},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"district(address)\":{\"params\":{\"addr\":\"the address that is going to be districted.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"isRestricted(address)\":{\"params\":{\"addr\":\"the address that is going to be checked.\"},\"returns\":{\"_0\":\"boolean true if the address is restricted.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"nonces(address)\":{\"details\":\"See {IERC20Permit-nonces}.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"See {IERC20Permit-permit}.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"restrict(address,uint256)\":{\"params\":{\"addr\":\"the restricted address.\",\"amount\":\"restricted spendable amount.\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setPeriodTransferLimit(uint256)\":{\"params\":{\"fraction\":\"the numerator of transfer limit rate which denominator is 10**6.\"}},\"setTransactionFee(uint256,uint256,address)\":{\"details\":\"emits a SetTransactionFee event\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transactionFee(uint256)\":{\"returns\":{\"fee\":\"transaction fee corresponding to the transferring amount.\"}},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"title\":\"Boundless World (BLB) Token\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"district(address)\":{\"notice\":\"district an address the address `addr` will be free to spend their BLB like regular addresses.require:  - only RESTRICTOR_ROLE address can call this function. emits a District event.\"},\"mint(address,uint256)\":{\"notice\":\"Creates amount tokens and assigns them to account, increasing the total supply.  Emits a transfer event with from set to the zero address.  Requirements:  account cannot be the zero address. only role MINTER_ROLE can call this function.\"},\"restrict(address,uint256)\":{\"notice\":\"restrict an address the address `addr` will be only able to spend as much as `amount`.require:  - only RESTRICTOR_ROLE address can call this function. emits a Restrict event.\"},\"setPeriodTransferLimit(uint256)\":{\"notice\":\"set spend limit for monthly transfers.there is no transfer limit if fraction is 10**6.require:  - only owner of contract can call this function.  - maximum fraction can be 10**6 (equal to 100%). emits a SetPeriodTransferLimit event.\"},\"setTransactionFee(uint256,uint256,address)\":{\"notice\":\"set amount or fraction and receiver of BLB transaction fees.if transaction receiver is zero address, the transaction fee will be burned.requirement:  - Only the owner of the contract can call this function.  - one of the feeAmount or feeFraction must be zero.  - fee fraction can be a maximum of 50,000 which equals 10% of the transactions \"},\"transactionFee(uint256)\":{\"notice\":\"if there is a fee amount, the transaction fee is not proportional to the  transfering amount.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BEP20/BLBToken.sol\":\"BLBToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x5b35d8e68aeaccc685239bd9dd79b9ba01a0357930f8a3307ab85511733d9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba8eb2d22f9321bd4660f6617c181d9611ff30a9b089408b8c6e2216d6d5cdc5\",\"dweb:/ipfs/QmTSJvhjHfnUV1j4hsqDv8PmLvGBLRs9gHLjTUXrUJ5Y9q\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x35cee07c3e7af2a8519a396e15387ca497061bb84a72200c65b0a12a3126c461\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68f1d6ba548c796f8f31e0a445175f8a8d486891a59010e13b4f9b37cc5d50c2\",\"dweb:/ipfs/QmZRjUcHU8RoarhfrqTUeUMye2yFgpoJSBPDHeNcm9YXtk\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":{\"keccak256\":\"0x3fe04ed1daf0f12454333fde982a25b103860d8a010dd5d8479b83ebf1dfb788\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8322152771e94c9e28a3bd9e7c9d5dd4fdd00ae214f95915962a6638d8dfc7d6\",\"dweb:/ipfs/QmaXJvF3UjRHacx3nPgt94DwAuXCkEoz6fS7MLr2jbuJyW\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-ERC20Permit.sol\":{\"keccak256\":\"0x07536242e24ee7067295d32c08e495a33e605f3c52f8ee4ec3bdcb7a351313d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01f99dbf2ce567a64a03fc4d38b76d64d52bf1a2302922971446b1cf777220ec\",\"dweb:/ipfs/QmSiotbcG2KMuXfbKyKTcHu9ujBp67jmbULJyYLDpsrpC1\"]},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Counters.sol\":{\"keccak256\":\"0xf0018c2440fbe238dd3a8732fa8e17a0f9dce84d31451dc8a32f6d62b349c9f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59e1c62884d55b70f3ae5432b44bb3166ad71ae3acd19c57ab6ddc3c87c325ee\",\"dweb:/ipfs/QmezuXg5GK5oeA4F91EZhozBFekhq5TD966bHPH18cCqhu\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900\",\"dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2\"]},\"@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba\",\"dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":{\"keccak256\":\"0x1b8ac5ffdb80c20c9188267455197d9dcfeef46379aeb1b3a6cc622e879895ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e531d0792e4774e2edabb34a5bed8e96ac80a84e08ebd5ebf7a0d15185e4f37\",\"dweb:/ipfs/QmPwWjhL1phGiGfP5R8Kzp3bQuVigkornTcSy9KaQnou1E\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]},\"contracts/BEP20/Administration.sol\":{\"keccak256\":\"0x5d0575eac94ef4cd012eadde236909f398cd173ebe001eba2eeead410d8ae103\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41d0dd1e3975ece95ee437b8c5ba9635c71a36b3d1432138770765c4d45319e9\",\"dweb:/ipfs/QmXAnmX4ddRy4i5LSa2SxcXgkJpPEoWp43FyHUh8CaqbxJ\"]},\"contracts/BEP20/BLBToken.sol\":{\"keccak256\":\"0x4b7968054504bfe547b442f988c1eb0a8fbbb0f16b3cb3f57e2b69d8e087b9af\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://216e4d3322d31df2e4fd0b84543e6c97e865b9ab1f99823860442a95bac53ea0\",\"dweb:/ipfs/QmY72b68odZSFx3UTFeqEk2dN2SCpoot53Mdrc4HiU7DE1\"]},\"contracts/BEP20/TransactionFee.sol\":{\"keccak256\":\"0x5e636b80d3d72597b3ab1e9d2c50b355731cab582906cacec610a6d75cf744de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://936f2653933113ef847dd4c15b09f3784f2beb2539579c9f39d8c76a16c40cf6\",\"dweb:/ipfs/QmWEKXxBYbbUkWGocyGybVtAozpyVG7E79xB6CwEzTzstw\"]},\"contracts/BEP20/TransferControl.sol\":{\"keccak256\":\"0xcbf28ccec1347a5c6a26492618bb2e4d7a4c3e45fea3e7a3d40dacc95373c100\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4da1c5037f1bad264e8500e771fe9039e1411ad7db69c30499e8702b5886a92f\",\"dweb:/ipfs/QmUUgX4Bp2BeQcUTjSKEKRbgzsvqDrUYmQRdaTWGZcCtfB\"]}},\"version\":1}"}},"contracts/BEP20/TransactionFee.sol":{"TransactionFee":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"_feeAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"_feeFraction","type":"uint256"},{"indexed":false,"internalType":"address","name":"_feeReceiver","type":"address"}],"name":"SetTransactionFee","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"RESTRICTOR_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TRANSACTION_FEE_SETTER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TRANSFER_LIMIT_SETTER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"feeDetails","outputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_feeAmount","type":"uint256"},{"internalType":"uint256","name":"_feeFraction","type":"uint256"},{"internalType":"address","name":"_feeReceiver","type":"address"}],"name":"setTransactionFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"transferingAmount","type":"uint256"}],"name":"transactionFee","outputs":[{"internalType":"uint256","name":"fee","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","MINTER_ROLE()":"d5391393","RESTRICTOR_ROLE()":"51bcee27","TRANSACTION_FEE_SETTER()":"0ecbd033","TRANSFER_LIMIT_SETTER()":"3e0b2cda","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","feeDetails()":"1f2c5443","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","setTransactionFee(uint256,uint256,address)":"367065de","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","totalSupply()":"18160ddd","transactionFee(uint256)":"5d1edb87","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_feeAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_feeFraction\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_feeReceiver\",\"type\":\"address\"}],\"name\":\"SetTransactionFee\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RESTRICTOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRANSACTION_FEE_SETTER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRANSFER_LIMIT_SETTER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_feeFraction\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_feeReceiver\",\"type\":\"address\"}],\"name\":\"setTransactionFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"transferingAmount\",\"type\":\"uint256\"}],\"name\":\"transactionFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"SetTransactionFee(uint256,uint256,address)\":{\"details\":\"emits when the admin sets a new transaction fee plan.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setTransactionFee(uint256,uint256,address)\":{\"details\":\"emits a SetTransactionFee event\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transactionFee(uint256)\":{\"returns\":{\"fee\":\"transaction fee corresponding to the transferring amount.\"}},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"title\":\"deduct the transaction fee of every token transfer and send it to a third address.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"setTransactionFee(uint256,uint256,address)\":{\"notice\":\"set amount or fraction and receiver of BLB transaction fees.if transaction receiver is zero address, the transaction fee will be burned.requirement:  - Only the owner of the contract can call this function.  - one of the feeAmount or feeFraction must be zero.  - fee fraction can be a maximum of 50,000 which equals 10% of the transactions \"},\"transactionFee(uint256)\":{\"notice\":\"if there is a fee amount, the transaction fee is not proportional to the  transfering amount.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BEP20/TransactionFee.sol\":\"TransactionFee\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x5b35d8e68aeaccc685239bd9dd79b9ba01a0357930f8a3307ab85511733d9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba8eb2d22f9321bd4660f6617c181d9611ff30a9b089408b8c6e2216d6d5cdc5\",\"dweb:/ipfs/QmTSJvhjHfnUV1j4hsqDv8PmLvGBLRs9gHLjTUXrUJ5Y9q\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x35cee07c3e7af2a8519a396e15387ca497061bb84a72200c65b0a12a3126c461\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68f1d6ba548c796f8f31e0a445175f8a8d486891a59010e13b4f9b37cc5d50c2\",\"dweb:/ipfs/QmZRjUcHU8RoarhfrqTUeUMye2yFgpoJSBPDHeNcm9YXtk\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]},\"contracts/BEP20/Administration.sol\":{\"keccak256\":\"0x5d0575eac94ef4cd012eadde236909f398cd173ebe001eba2eeead410d8ae103\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41d0dd1e3975ece95ee437b8c5ba9635c71a36b3d1432138770765c4d45319e9\",\"dweb:/ipfs/QmXAnmX4ddRy4i5LSa2SxcXgkJpPEoWp43FyHUh8CaqbxJ\"]},\"contracts/BEP20/TransactionFee.sol\":{\"keccak256\":\"0x5e636b80d3d72597b3ab1e9d2c50b355731cab582906cacec610a6d75cf744de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://936f2653933113ef847dd4c15b09f3784f2beb2539579c9f39d8c76a16c40cf6\",\"dweb:/ipfs/QmWEKXxBYbbUkWGocyGybVtAozpyVG7E79xB6CwEzTzstw\"]}},\"version\":1}"}},"contracts/BEP20/TransferControl.sol":{"TransferControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"addr","type":"address"}],"name":"District","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"addr","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Restrict","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"fraction","type":"uint256"}],"name":"SetPeriodTransferLimit","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MINTER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"RESTRICTOR_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TRANSACTION_FEE_SETTER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TRANSFER_LIMIT_SETTER","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"canSpend","outputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"cap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"district","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getRoleMember","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleMemberCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"addr","type":"address"}],"name":"isRestricted","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"monthlyLimit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"restrict","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"fraction","type":"uint256"}],"name":"setPeriodTransferLimit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","MINTER_ROLE()":"d5391393","RESTRICTOR_ROLE()":"51bcee27","TRANSACTION_FEE_SETTER()":"0ecbd033","TRANSFER_LIMIT_SETTER()":"3e0b2cda","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","canSpend(address)":"234eaedc","cap()":"355274ea","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","district(address)":"e162533c","getRoleAdmin(bytes32)":"248a9ca3","getRoleMember(bytes32,uint256)":"9010d07c","getRoleMemberCount(bytes32)":"ca15c873","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","increaseAllowance(address,uint256)":"39509351","isRestricted(address)":"c01bc982","name()":"06fdde03","monthlyLimit()":"f74929e0","renounceRole(bytes32,address)":"36568abe","restrict(address,uint256)":"1681f830","revokeRole(bytes32,address)":"d547741f","setPeriodTransferLimit(uint256)":"fad71be2","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"District\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Restrict\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fraction\",\"type\":\"uint256\"}],\"name\":\"SetPeriodTransferLimit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RESTRICTOR_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRANSACTION_FEE_SETTER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRANSFER_LIMIT_SETTER\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"canSpend\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"district\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getRoleMember\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleMemberCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isRestricted\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"monthlyLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"restrict\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"fraction\",\"type\":\"uint256\"}],\"name\":\"setPeriodTransferLimit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"District(address)\":{\"details\":\"emits when the admin districts an address.\"},\"Restrict(address,uint256)\":{\"details\":\"emits when the admin restricts an address.\"},\"SetPeriodTransferLimit(uint256)\":{\"details\":\"emits when the admin sets a new value as the monthlyLimit.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"canSpend(address)\":{\"details\":\"if the address restricted, the amount equals remaining spendable amount for the  address. else if there is a spend limit active for the contract, the amount equals  the address's remaining monthly spendable amount. else the amount equals balance of the address. MINTER_ROLE can also be restricted so \",\"params\":{\"addr\":\"the address that is being checked.\"},\"returns\":{\"amount\":\"that the address can spend. \"}},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"district(address)\":{\"params\":{\"addr\":\"the address that is going to be districted.\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"getRoleMember(bytes32,uint256)\":{\"details\":\"Returns one of the accounts that have `role`. `index` must be a value between 0 and {getRoleMemberCount}, non-inclusive. Role bearers are not sorted in any particular way, and their ordering may change at any point. WARNING: When using {getRoleMember} and {getRoleMemberCount}, make sure you perform all queries on the same block. See the following https://forum.openzeppelin.com/t/iterating-over-elements-on-enumerableset-in-openzeppelin-contracts/2296[forum post] for more information.\"},\"getRoleMemberCount(bytes32)\":{\"details\":\"Returns the number of accounts that have `role`. Can be used together with {getRoleMember} to enumerate all bearers of a role.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"isRestricted(address)\":{\"params\":{\"addr\":\"the address that is going to be checked.\"},\"returns\":{\"_0\":\"boolean true if the address is restricted.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"restrict(address,uint256)\":{\"params\":{\"addr\":\"the restricted address.\",\"amount\":\"restricted spendable amount.\"}},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"setPeriodTransferLimit(uint256)\":{\"params\":{\"fraction\":\"the numerator of transfer limit rate which denominator is 10**6.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"title\":\"control BLB transfers.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"district(address)\":{\"notice\":\"district an address the address `addr` will be free to spend their BLB like regular addresses.require:  - only RESTRICTOR_ROLE address can call this function. emits a District event.\"},\"restrict(address,uint256)\":{\"notice\":\"restrict an address the address `addr` will be only able to spend as much as `amount`.require:  - only RESTRICTOR_ROLE address can call this function. emits a Restrict event.\"},\"setPeriodTransferLimit(uint256)\":{\"notice\":\"set spend limit for monthly transfers.there is no transfer limit if fraction is 10**6.require:  - only owner of contract can call this function.  - maximum fraction can be 10**6 (equal to 100%). emits a SetPeriodTransferLimit event.\"}},\"notice\":\"users may have access to transfer their whole BLB balance or only a  certain fraction every monthly(it depends on monthlyLimit).some specific addresses may have restricted access to transfer.owner of the contract can restrict every desired address and also  determine a spending limit for all users.if an address is restricted then the public monthlyLimit is diactivated for it\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BEP20/TransferControl.sol\":\"TransferControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x5b35d8e68aeaccc685239bd9dd79b9ba01a0357930f8a3307ab85511733d9724\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba8eb2d22f9321bd4660f6617c181d9611ff30a9b089408b8c6e2216d6d5cdc5\",\"dweb:/ipfs/QmTSJvhjHfnUV1j4hsqDv8PmLvGBLRs9gHLjTUXrUJ5Y9q\"]},\"@openzeppelin/contracts/access/AccessControlEnumerable.sol\":{\"keccak256\":\"0x13f5e15f2a0650c0b6aaee2ef19e89eaf4870d6e79662d572a393334c1397247\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7ee05f28f549a5d6515e152580716b87636ed4bfab9812499a6e3803df88288b\",\"dweb:/ipfs/QmeEnhdwY1t5Y3YU5a4ffzgXuToydH2PNdNxV9W7dEPRQJ\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/IAccessControlEnumerable.sol\":{\"keccak256\":\"0xba4459ab871dfa300f5212c6c30178b63898c03533a1ede28436f11546626676\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3dcc7b09bfa6e18aab262ca372f4a9b1fc82e294b430706a4e1378cf58e6a276\",\"dweb:/ipfs/QmT8oSAcesdctR15HMLhr2a1HRpXymxdjTfdtfTYJcj2N2\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x35cee07c3e7af2a8519a396e15387ca497061bb84a72200c65b0a12a3126c461\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68f1d6ba548c796f8f31e0a445175f8a8d486891a59010e13b4f9b37cc5d50c2\",\"dweb:/ipfs/QmZRjUcHU8RoarhfrqTUeUMye2yFgpoJSBPDHeNcm9YXtk\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Capped.sol\":{\"keccak256\":\"0x3fe04ed1daf0f12454333fde982a25b103860d8a010dd5d8479b83ebf1dfb788\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8322152771e94c9e28a3bd9e7c9d5dd4fdd00ae214f95915962a6638d8dfc7d6\",\"dweb:/ipfs/QmaXJvF3UjRHacx3nPgt94DwAuXCkEoz6fS7MLr2jbuJyW\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/structs/EnumerableMap.sol\":{\"keccak256\":\"0x1b8ac5ffdb80c20c9188267455197d9dcfeef46379aeb1b3a6cc622e879895ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5e531d0792e4774e2edabb34a5bed8e96ac80a84e08ebd5ebf7a0d15185e4f37\",\"dweb:/ipfs/QmPwWjhL1phGiGfP5R8Kzp3bQuVigkornTcSy9KaQnou1E\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]},\"contracts/BEP20/Administration.sol\":{\"keccak256\":\"0x5d0575eac94ef4cd012eadde236909f398cd173ebe001eba2eeead410d8ae103\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41d0dd1e3975ece95ee437b8c5ba9635c71a36b3d1432138770765c4d45319e9\",\"dweb:/ipfs/QmXAnmX4ddRy4i5LSa2SxcXgkJpPEoWp43FyHUh8CaqbxJ\"]},\"contracts/BEP20/TransferControl.sol\":{\"keccak256\":\"0xcbf28ccec1347a5c6a26492618bb2e4d7a4c3e45fea3e7a3d40dacc95373c100\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4da1c5037f1bad264e8500e771fe9039e1411ad7db69c30499e8702b5886a92f\",\"dweb:/ipfs/QmUUgX4Bp2BeQcUTjSKEKRbgzsvqDrUYmQRdaTWGZcCtfB\"]}},\"version\":1}"}},"contracts/BLBIO/ERC20Test.sol":{"ERC20Test":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_5198":{"entryPoint":null,"id":5198,"parameterSlots":0,"returnSlots":0},"@_566":{"entryPoint":null,"id":566,"parameterSlots":0,"returnSlots":0},"@_700":{"entryPoint":null,"id":700,"parameterSlots":2,"returnSlots":0},"@_afterTokenTransfer_1311":{"entryPoint":null,"id":1311,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1300":{"entryPoint":503,"id":1300,"parameterSlots":3,"returnSlots":0},"@_mint_1129":{"entryPoint":271,"id":1129,"parameterSlots":2,"returnSlots":0},"@_msgSender_1744":{"entryPoint":185,"id":1744,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_654":{"entryPoint":189,"id":654,"parameterSlots":1,"returnSlots":0},"@decimals_730":{"entryPoint":null,"id":730,"parameterSlots":0,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":1211,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":898,"id":null,"parameterSlots":2,"returnSlots":2},"checked_exp_t_uint256_t_uint8":{"entryPoint":1153,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":971,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":1177,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":590,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":672,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":530,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":876,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":508,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5095:27","statements":[{"nodeType":"YulBlock","src":"6:3:27","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:27"},"nodeType":"YulFunctionCall","src":"66:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:27"},"nodeType":"YulFunctionCall","src":"56:31:27"},"nodeType":"YulExpressionStatement","src":"56:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:27","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:27"},"nodeType":"YulFunctionCall","src":"96:15:27"},"nodeType":"YulExpressionStatement","src":"96:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:27"},"nodeType":"YulFunctionCall","src":"120:15:27"},"nodeType":"YulExpressionStatement","src":"120:15:27"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:27"},{"body":{"nodeType":"YulBlock","src":"201:325:27","statements":[{"nodeType":"YulAssignment","src":"211:22:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"225:1:27","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"228:4:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"221:3:27"},"nodeType":"YulFunctionCall","src":"221:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"211:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"242:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"272:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"278:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"268:3:27"},"nodeType":"YulFunctionCall","src":"268:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"246:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"319:31:27","statements":[{"nodeType":"YulAssignment","src":"321:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"335:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"343:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"331:3:27"},"nodeType":"YulFunctionCall","src":"331:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"321:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"299:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"292:6:27"},"nodeType":"YulFunctionCall","src":"292:26:27"},"nodeType":"YulIf","src":"289:61:27"},{"body":{"nodeType":"YulBlock","src":"409:111:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"430:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"437:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"442:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"433:3:27"},"nodeType":"YulFunctionCall","src":"433:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"423:6:27"},"nodeType":"YulFunctionCall","src":"423:31:27"},"nodeType":"YulExpressionStatement","src":"423:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"474:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"477:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"467:6:27"},"nodeType":"YulFunctionCall","src":"467:15:27"},"nodeType":"YulExpressionStatement","src":"467:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"502:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"505:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"495:6:27"},"nodeType":"YulFunctionCall","src":"495:15:27"},"nodeType":"YulExpressionStatement","src":"495:15:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"365:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"388:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"396:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"385:2:27"},"nodeType":"YulFunctionCall","src":"385:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"362:2:27"},"nodeType":"YulFunctionCall","src":"362:38:27"},"nodeType":"YulIf","src":"359:161:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"181:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"190:6:27","type":""}],"src":"146:380:27"},{"body":{"nodeType":"YulBlock","src":"587:65:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"604:1:27","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"607:3:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"597:6:27"},"nodeType":"YulFunctionCall","src":"597:14:27"},"nodeType":"YulExpressionStatement","src":"597:14:27"},{"nodeType":"YulAssignment","src":"620:26:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"638:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"641:4:27","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"628:9:27"},"nodeType":"YulFunctionCall","src":"628:18:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"620:4:27"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"570:3:27","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"578:4:27","type":""}],"src":"531:121:27"},{"body":{"nodeType":"YulBlock","src":"738:464:27","statements":[{"body":{"nodeType":"YulBlock","src":"771:425:27","statements":[{"nodeType":"YulVariableDeclaration","src":"785:11:27","value":{"kind":"number","nodeType":"YulLiteral","src":"795:1:27","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"789:2:27","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"816:2:27"},{"name":"array","nodeType":"YulIdentifier","src":"820:5:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"809:6:27"},"nodeType":"YulFunctionCall","src":"809:17:27"},"nodeType":"YulExpressionStatement","src":"809:17:27"},{"nodeType":"YulVariableDeclaration","src":"839:31:27","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"861:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"865:4:27","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"851:9:27"},"nodeType":"YulFunctionCall","src":"851:19:27"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"843:4:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"883:57:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"906:4:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"916:1:27","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"923:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"935:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"919:3:27"},"nodeType":"YulFunctionCall","src":"919:19:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"912:3:27"},"nodeType":"YulFunctionCall","src":"912:27:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"902:3:27"},"nodeType":"YulFunctionCall","src":"902:38:27"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"887:11:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"977:23:27","statements":[{"nodeType":"YulAssignment","src":"979:19:27","value":{"name":"data","nodeType":"YulIdentifier","src":"994:4:27"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"979:11:27"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"959:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"971:4:27","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"956:2:27"},"nodeType":"YulFunctionCall","src":"956:20:27"},"nodeType":"YulIf","src":"953:47:27"},{"nodeType":"YulVariableDeclaration","src":"1013:41:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1027:4:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1037:1:27","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1044:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"1049:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1040:3:27"},"nodeType":"YulFunctionCall","src":"1040:12:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1033:3:27"},"nodeType":"YulFunctionCall","src":"1033:20:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1023:3:27"},"nodeType":"YulFunctionCall","src":"1023:31:27"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1017:2:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1067:24:27","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"1080:11:27"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"1071:5:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1165:21:27","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1174:5:27"},{"name":"_1","nodeType":"YulIdentifier","src":"1181:2:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"1167:6:27"},"nodeType":"YulFunctionCall","src":"1167:17:27"},"nodeType":"YulExpressionStatement","src":"1167:17:27"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1115:5:27"},{"name":"_2","nodeType":"YulIdentifier","src":"1122:2:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1112:2:27"},"nodeType":"YulFunctionCall","src":"1112:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1126:26:27","statements":[{"nodeType":"YulAssignment","src":"1128:22:27","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1141:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"1148:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1137:3:27"},"nodeType":"YulFunctionCall","src":"1137:13:27"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"1128:5:27"}]}]},"pre":{"nodeType":"YulBlock","src":"1108:3:27","statements":[]},"src":"1104:82:27"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"754:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"759:2:27","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"751:2:27"},"nodeType":"YulFunctionCall","src":"751:11:27"},"nodeType":"YulIf","src":"748:448:27"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"710:5:27","type":""},{"name":"len","nodeType":"YulTypedName","src":"717:3:27","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"722:10:27","type":""}],"src":"657:545:27"},{"body":{"nodeType":"YulBlock","src":"1292:81:27","statements":[{"nodeType":"YulAssignment","src":"1302:65:27","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1317:4:27"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1335:1:27","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"1338:3:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1331:3:27"},"nodeType":"YulFunctionCall","src":"1331:11:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1348:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1344:3:27"},"nodeType":"YulFunctionCall","src":"1344:6:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1327:3:27"},"nodeType":"YulFunctionCall","src":"1327:24:27"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1323:3:27"},"nodeType":"YulFunctionCall","src":"1323:29:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1313:3:27"},"nodeType":"YulFunctionCall","src":"1313:40:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1359:1:27","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"1362:3:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1355:3:27"},"nodeType":"YulFunctionCall","src":"1355:11:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1310:2:27"},"nodeType":"YulFunctionCall","src":"1310:57:27"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"1302:4:27"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1269:4:27","type":""},{"name":"len","nodeType":"YulTypedName","src":"1275:3:27","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"1283:4:27","type":""}],"src":"1207:166:27"},{"body":{"nodeType":"YulBlock","src":"1474:1256:27","statements":[{"nodeType":"YulVariableDeclaration","src":"1484:24:27","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1504:3:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1498:5:27"},"nodeType":"YulFunctionCall","src":"1498:10:27"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"1488:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1551:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1553:16:27"},"nodeType":"YulFunctionCall","src":"1553:18:27"},"nodeType":"YulExpressionStatement","src":"1553:18:27"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1523:6:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1539:2:27","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1543:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1535:3:27"},"nodeType":"YulFunctionCall","src":"1535:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"1547:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:27"},"nodeType":"YulFunctionCall","src":"1531:18:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1520:2:27"},"nodeType":"YulFunctionCall","src":"1520:30:27"},"nodeType":"YulIf","src":"1517:56:27"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1626:4:27"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1664:4:27"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"1658:5:27"},"nodeType":"YulFunctionCall","src":"1658:11:27"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"1632:25:27"},"nodeType":"YulFunctionCall","src":"1632:38:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"1672:6:27"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"1582:43:27"},"nodeType":"YulFunctionCall","src":"1582:97:27"},"nodeType":"YulExpressionStatement","src":"1582:97:27"},{"nodeType":"YulVariableDeclaration","src":"1688:18:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1705:1:27","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"1692:9:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1715:23:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1734:4:27","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"1719:11:27","type":""}]},{"nodeType":"YulAssignment","src":"1747:24:27","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"1760:11:27"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"1747:9:27"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"1817:656:27","statements":[{"nodeType":"YulVariableDeclaration","src":"1831:35:27","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1850:6:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1862:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1858:3:27"},"nodeType":"YulFunctionCall","src":"1858:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1846:3:27"},"nodeType":"YulFunctionCall","src":"1846:20:27"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"1835:7:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1879:49:27","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1923:4:27"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"1893:29:27"},"nodeType":"YulFunctionCall","src":"1893:35:27"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"1883:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1941:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1950:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1945:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"2028:172:27","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2053:6:27"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2071:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2076:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2067:3:27"},"nodeType":"YulFunctionCall","src":"2067:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2061:5:27"},"nodeType":"YulFunctionCall","src":"2061:26:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2046:6:27"},"nodeType":"YulFunctionCall","src":"2046:42:27"},"nodeType":"YulExpressionStatement","src":"2046:42:27"},{"nodeType":"YulAssignment","src":"2105:24:27","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2119:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2127:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2115:3:27"},"nodeType":"YulFunctionCall","src":"2115:14:27"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2105:6:27"}]},{"nodeType":"YulAssignment","src":"2146:40:27","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2163:9:27"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2174:11:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2159:3:27"},"nodeType":"YulFunctionCall","src":"2159:27:27"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2146:9:27"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1975:1:27"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"1978:7:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1972:2:27"},"nodeType":"YulFunctionCall","src":"1972:14:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1987:28:27","statements":[{"nodeType":"YulAssignment","src":"1989:24:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1998:1:27"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2001:11:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1994:3:27"},"nodeType":"YulFunctionCall","src":"1994:19:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1989:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"1968:3:27","statements":[]},"src":"1964:236:27"},{"body":{"nodeType":"YulBlock","src":"2248:166:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:43:27","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2293:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2298:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2289:3:27"},"nodeType":"YulFunctionCall","src":"2289:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2283:5:27"},"nodeType":"YulFunctionCall","src":"2283:26:27"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"2270:9:27","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2333:6:27"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"2345:9:27"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2372:1:27","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"2375:6:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2368:3:27"},"nodeType":"YulFunctionCall","src":"2368:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"2384:3:27","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2364:3:27"},"nodeType":"YulFunctionCall","src":"2364:24:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2394:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2390:3:27"},"nodeType":"YulFunctionCall","src":"2390:6:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2360:3:27"},"nodeType":"YulFunctionCall","src":"2360:37:27"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2356:3:27"},"nodeType":"YulFunctionCall","src":"2356:42:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2341:3:27"},"nodeType":"YulFunctionCall","src":"2341:58:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2326:6:27"},"nodeType":"YulFunctionCall","src":"2326:74:27"},"nodeType":"YulExpressionStatement","src":"2326:74:27"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"2219:7:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"2228:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2216:2:27"},"nodeType":"YulFunctionCall","src":"2216:19:27"},"nodeType":"YulIf","src":"2213:201:27"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2434:4:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2448:1:27","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"2451:6:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2444:3:27"},"nodeType":"YulFunctionCall","src":"2444:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"2460:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2440:3:27"},"nodeType":"YulFunctionCall","src":"2440:22:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2427:6:27"},"nodeType":"YulFunctionCall","src":"2427:36:27"},"nodeType":"YulExpressionStatement","src":"2427:36:27"}]},"nodeType":"YulCase","src":"1810:663:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1815:1:27","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"2490:234:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2504:14:27","value":{"kind":"number","nodeType":"YulLiteral","src":"2517:1:27","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2508:5:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"2553:67:27","statements":[{"nodeType":"YulAssignment","src":"2571:35:27","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2590:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2595:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2586:3:27"},"nodeType":"YulFunctionCall","src":"2586:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2580:5:27"},"nodeType":"YulFunctionCall","src":"2580:26:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2571:5:27"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"2534:6:27"},"nodeType":"YulIf","src":"2531:89:27"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2640:4:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2699:5:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"2706:6:27"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"2646:52:27"},"nodeType":"YulFunctionCall","src":"2646:67:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2633:6:27"},"nodeType":"YulFunctionCall","src":"2633:81:27"},"nodeType":"YulExpressionStatement","src":"2633:81:27"}]},"nodeType":"YulCase","src":"2482:242:27","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1790:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1798:2:27","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1787:2:27"},"nodeType":"YulFunctionCall","src":"1787:14:27"},"nodeType":"YulSwitch","src":"1780:944:27"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1459:4:27","type":""},{"name":"src","nodeType":"YulTypedName","src":"1465:3:27","type":""}],"src":"1378:1352:27"},{"body":{"nodeType":"YulBlock","src":"2767:95:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2784:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2791:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2796:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2787:3:27"},"nodeType":"YulFunctionCall","src":"2787:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2777:6:27"},"nodeType":"YulFunctionCall","src":"2777:31:27"},"nodeType":"YulExpressionStatement","src":"2777:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2824:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2827:4:27","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2817:6:27"},"nodeType":"YulFunctionCall","src":"2817:15:27"},"nodeType":"YulExpressionStatement","src":"2817:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2848:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2851:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2841:6:27"},"nodeType":"YulFunctionCall","src":"2841:15:27"},"nodeType":"YulExpressionStatement","src":"2841:15:27"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"2735:127:27"},{"body":{"nodeType":"YulBlock","src":"2931:358:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2941:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"2956:1:27","type":"","value":"1"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"2945:7:27","type":""}]},{"nodeType":"YulAssignment","src":"2966:16:27","value":{"name":"power_1","nodeType":"YulIdentifier","src":"2975:7:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"2966:5:27"}]},{"nodeType":"YulAssignment","src":"2991:13:27","value":{"name":"_base","nodeType":"YulIdentifier","src":"2999:5:27"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"2991:4:27"}]},{"body":{"nodeType":"YulBlock","src":"3055:228:27","statements":[{"body":{"nodeType":"YulBlock","src":"3100:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3102:16:27"},"nodeType":"YulFunctionCall","src":"3102:18:27"},"nodeType":"YulExpressionStatement","src":"3102:18:27"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"3075:4:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3089:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3085:3:27"},"nodeType":"YulFunctionCall","src":"3085:6:27"},{"name":"base","nodeType":"YulIdentifier","src":"3093:4:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3081:3:27"},"nodeType":"YulFunctionCall","src":"3081:17:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3072:2:27"},"nodeType":"YulFunctionCall","src":"3072:27:27"},"nodeType":"YulIf","src":"3069:53:27"},{"body":{"nodeType":"YulBlock","src":"3161:29:27","statements":[{"nodeType":"YulAssignment","src":"3163:25:27","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"3176:5:27"},{"name":"base","nodeType":"YulIdentifier","src":"3183:4:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3172:3:27"},"nodeType":"YulFunctionCall","src":"3172:16:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"3163:5:27"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"3142:8:27"},{"name":"power_1","nodeType":"YulIdentifier","src":"3152:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3138:3:27"},"nodeType":"YulFunctionCall","src":"3138:22:27"},"nodeType":"YulIf","src":"3135:55:27"},{"nodeType":"YulAssignment","src":"3203:23:27","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"3215:4:27"},{"name":"base","nodeType":"YulIdentifier","src":"3221:4:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3211:3:27"},"nodeType":"YulFunctionCall","src":"3211:15:27"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"3203:4:27"}]},{"nodeType":"YulAssignment","src":"3239:34:27","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"3255:7:27"},{"name":"exponent","nodeType":"YulIdentifier","src":"3264:8:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3251:3:27"},"nodeType":"YulFunctionCall","src":"3251:22:27"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"3239:8:27"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"3024:8:27"},{"name":"power_1","nodeType":"YulIdentifier","src":"3034:7:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3021:2:27"},"nodeType":"YulFunctionCall","src":"3021:21:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3043:3:27","statements":[]},"pre":{"nodeType":"YulBlock","src":"3017:3:27","statements":[]},"src":"3013:270:27"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nodeType":"YulTypedName","src":"2895:5:27","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"2902:8:27","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"2915:5:27","type":""},{"name":"base","nodeType":"YulTypedName","src":"2922:4:27","type":""}],"src":"2867:422:27"},{"body":{"nodeType":"YulBlock","src":"3353:747:27","statements":[{"body":{"nodeType":"YulBlock","src":"3391:52:27","statements":[{"nodeType":"YulAssignment","src":"3405:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"3414:1:27","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"3405:5:27"}]},{"nodeType":"YulLeave","src":"3428:5:27"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"3373:8:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3366:6:27"},"nodeType":"YulFunctionCall","src":"3366:16:27"},"nodeType":"YulIf","src":"3363:80:27"},{"body":{"nodeType":"YulBlock","src":"3476:52:27","statements":[{"nodeType":"YulAssignment","src":"3490:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"3499:1:27","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"3490:5:27"}]},{"nodeType":"YulLeave","src":"3513:5:27"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"3462:4:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3455:6:27"},"nodeType":"YulFunctionCall","src":"3455:12:27"},"nodeType":"YulIf","src":"3452:76:27"},{"cases":[{"body":{"nodeType":"YulBlock","src":"3564:52:27","statements":[{"nodeType":"YulAssignment","src":"3578:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"3587:1:27","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"3578:5:27"}]},{"nodeType":"YulLeave","src":"3601:5:27"}]},"nodeType":"YulCase","src":"3557:59:27","value":{"kind":"number","nodeType":"YulLiteral","src":"3562:1:27","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3632:123:27","statements":[{"body":{"nodeType":"YulBlock","src":"3667:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3669:16:27"},"nodeType":"YulFunctionCall","src":"3669:18:27"},"nodeType":"YulExpressionStatement","src":"3669:18:27"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"3652:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"3662:3:27","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3649:2:27"},"nodeType":"YulFunctionCall","src":"3649:17:27"},"nodeType":"YulIf","src":"3646:43:27"},{"nodeType":"YulAssignment","src":"3702:25:27","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"3715:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"3725:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3711:3:27"},"nodeType":"YulFunctionCall","src":"3711:16:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"3702:5:27"}]},{"nodeType":"YulLeave","src":"3740:5:27"}]},"nodeType":"YulCase","src":"3625:130:27","value":{"kind":"number","nodeType":"YulLiteral","src":"3630:1:27","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"3544:4:27"},"nodeType":"YulSwitch","src":"3537:218:27"},{"body":{"nodeType":"YulBlock","src":"3853:70:27","statements":[{"nodeType":"YulAssignment","src":"3867:28:27","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"3880:4:27"},{"name":"exponent","nodeType":"YulIdentifier","src":"3886:8:27"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"3876:3:27"},"nodeType":"YulFunctionCall","src":"3876:19:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"3867:5:27"}]},{"nodeType":"YulLeave","src":"3908:5:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"3777:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"3783:2:27","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3774:2:27"},"nodeType":"YulFunctionCall","src":"3774:12:27"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"3791:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"3801:2:27","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3788:2:27"},"nodeType":"YulFunctionCall","src":"3788:16:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3770:3:27"},"nodeType":"YulFunctionCall","src":"3770:35:27"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"3814:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"3820:3:27","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3811:2:27"},"nodeType":"YulFunctionCall","src":"3811:13:27"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"3829:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"3839:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3826:2:27"},"nodeType":"YulFunctionCall","src":"3826:16:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3807:3:27"},"nodeType":"YulFunctionCall","src":"3807:36:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3767:2:27"},"nodeType":"YulFunctionCall","src":"3767:77:27"},"nodeType":"YulIf","src":"3764:159:27"},{"nodeType":"YulVariableDeclaration","src":"3932:57:27","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"3974:4:27"},{"name":"exponent","nodeType":"YulIdentifier","src":"3980:8:27"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"3955:18:27"},"nodeType":"YulFunctionCall","src":"3955:34:27"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"3936:7:27","type":""},{"name":"base_1","nodeType":"YulTypedName","src":"3945:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"4034:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4036:16:27"},"nodeType":"YulFunctionCall","src":"4036:18:27"},"nodeType":"YulExpressionStatement","src":"4036:18:27"}]},"condition":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"4004:7:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4021:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4017:3:27"},"nodeType":"YulFunctionCall","src":"4017:6:27"},{"name":"base_1","nodeType":"YulIdentifier","src":"4025:6:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4013:3:27"},"nodeType":"YulFunctionCall","src":"4013:19:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4001:2:27"},"nodeType":"YulFunctionCall","src":"4001:32:27"},"nodeType":"YulIf","src":"3998:58:27"},{"nodeType":"YulAssignment","src":"4065:29:27","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"4078:7:27"},{"name":"base_1","nodeType":"YulIdentifier","src":"4087:6:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4074:3:27"},"nodeType":"YulFunctionCall","src":"4074:20:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"4065:5:27"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"3324:4:27","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"3330:8:27","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"3343:5:27","type":""}],"src":"3294:806:27"},{"body":{"nodeType":"YulBlock","src":"4173:72:27","statements":[{"nodeType":"YulAssignment","src":"4183:56:27","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"4213:4:27"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"4223:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"4233:4:27","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4219:3:27"},"nodeType":"YulFunctionCall","src":"4219:19:27"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"4192:20:27"},"nodeType":"YulFunctionCall","src":"4192:47:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"4183:5:27"}]}]},"name":"checked_exp_t_uint256_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"4144:4:27","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"4150:8:27","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"4163:5:27","type":""}],"src":"4105:140:27"},{"body":{"nodeType":"YulBlock","src":"4302:116:27","statements":[{"body":{"nodeType":"YulBlock","src":"4361:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4363:16:27"},"nodeType":"YulFunctionCall","src":"4363:18:27"},"nodeType":"YulExpressionStatement","src":"4363:18:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4333:1:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4326:6:27"},"nodeType":"YulFunctionCall","src":"4326:9:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4319:6:27"},"nodeType":"YulFunctionCall","src":"4319:17:27"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"4341:1:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4352:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4348:3:27"},"nodeType":"YulFunctionCall","src":"4348:6:27"},{"name":"x","nodeType":"YulIdentifier","src":"4356:1:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4344:3:27"},"nodeType":"YulFunctionCall","src":"4344:14:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4338:2:27"},"nodeType":"YulFunctionCall","src":"4338:21:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4315:3:27"},"nodeType":"YulFunctionCall","src":"4315:45:27"},"nodeType":"YulIf","src":"4312:71:27"},{"nodeType":"YulAssignment","src":"4392:20:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4407:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"4410:1:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4403:3:27"},"nodeType":"YulFunctionCall","src":"4403:9:27"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"4392:7:27"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4281:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"4284:1:27","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"4290:7:27","type":""}],"src":"4250:168:27"},{"body":{"nodeType":"YulBlock","src":"4597:181:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4614:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4625:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4607:6:27"},"nodeType":"YulFunctionCall","src":"4607:21:27"},"nodeType":"YulExpressionStatement","src":"4607:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4648:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4659:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4644:3:27"},"nodeType":"YulFunctionCall","src":"4644:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"4664:2:27","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4637:6:27"},"nodeType":"YulFunctionCall","src":"4637:30:27"},"nodeType":"YulExpressionStatement","src":"4637:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4687:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4698:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4683:3:27"},"nodeType":"YulFunctionCall","src":"4683:18:27"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"4703:33:27","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4676:6:27"},"nodeType":"YulFunctionCall","src":"4676:61:27"},"nodeType":"YulExpressionStatement","src":"4676:61:27"},{"nodeType":"YulAssignment","src":"4746:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4758:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4769:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4754:3:27"},"nodeType":"YulFunctionCall","src":"4754:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4746:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4574:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4588:4:27","type":""}],"src":"4423:355:27"},{"body":{"nodeType":"YulBlock","src":"4831:80:27","statements":[{"body":{"nodeType":"YulBlock","src":"4858:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4860:16:27"},"nodeType":"YulFunctionCall","src":"4860:18:27"},"nodeType":"YulExpressionStatement","src":"4860:18:27"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4847:1:27"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"4854:1:27"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4850:3:27"},"nodeType":"YulFunctionCall","src":"4850:6:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4844:2:27"},"nodeType":"YulFunctionCall","src":"4844:13:27"},"nodeType":"YulIf","src":"4841:39:27"},{"nodeType":"YulAssignment","src":"4889:16:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4900:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"4903:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4896:3:27"},"nodeType":"YulFunctionCall","src":"4896:9:27"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"4889:3:27"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4814:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"4817:1:27","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"4823:3:27","type":""}],"src":"4783:128:27"},{"body":{"nodeType":"YulBlock","src":"5017:76:27","statements":[{"nodeType":"YulAssignment","src":"5027:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5039:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5050:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5035:3:27"},"nodeType":"YulFunctionCall","src":"5035:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5027:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5069:9:27"},{"name":"value0","nodeType":"YulIdentifier","src":"5080:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5062:6:27"},"nodeType":"YulFunctionCall","src":"5062:25:27"},"nodeType":"YulExpressionStatement","src":"5062:25:27"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4986:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4997:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5008:4:27","type":""}],"src":"4916:177:27"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}","id":27,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405180604001604052806008815260200167109554d115195cdd60c21b81525060405180604001604052806004815260200163109554d160e21b8152508160039081620000619190620002a0565b506004620000708282620002a0565b5050506200008d62000087620000b960201b60201c565b620000bd565b620000b333620000a06012600a62000481565b620000ad90606462000499565b6200010f565b620004d6565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166200016a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b80600260008282546200017e9190620004bb565b90915550506001600160a01b03821660009081526020819052604081208054839290620001ad908490620004bb565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200022757607f821691505b6020821081036200024857634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001f757600081815260208120601f850160051c81016020861015620002775750805b601f850160051c820191505b81811015620002985782815560010162000283565b505050505050565b81516001600160401b03811115620002bc57620002bc620001fc565b620002d481620002cd845462000212565b846200024e565b602080601f8311600181146200030c5760008415620002f35750858301515b600019600386901b1c1916600185901b17855562000298565b600085815260208120601f198616915b828110156200033d578886015182559484019460019091019084016200031c565b50858210156200035c5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620003c3578160001904821115620003a757620003a76200036c565b80851615620003b557918102915b93841c939080029062000387565b509250929050565b600082620003dc575060016200047b565b81620003eb575060006200047b565b81600181146200040457600281146200040f576200042f565b60019150506200047b565b60ff8411156200042357620004236200036c565b50506001821b6200047b565b5060208310610133831016604e8410600b841016171562000454575081810a6200047b565b62000460838362000382565b80600019048211156200047757620004776200036c565b0290505b92915050565b60006200049260ff841683620003cb565b9392505050565b6000816000190483118215151615620004b657620004b66200036c565b500290565b60008219821115620004d157620004d16200036c565b500190565b610d2580620004e66000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a257806395d89b411161007157806395d89b411461021f578063a457c2d714610227578063a9059cbb1461023a578063dd62ed3e1461024d578063f2fde38b1461026057600080fd5b806370a08231146101c0578063715018a6146101e957806379cc6790146101f15780638da5cb5b1461020457600080fd5b8063313ce567116100de578063313ce56714610176578063395093511461018557806340c10f191461019857806342966c68146101ad57600080fd5b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461015157806323b872dd14610163575b600080fd5b610118610273565b6040516101259190610b2b565b60405180910390f35b61014161013c366004610b9c565b610305565b6040519015158152602001610125565b6002545b604051908152602001610125565b610141610171366004610bc6565b61031d565b60405160128152602001610125565b610141610193366004610b9c565b610341565b6101ab6101a6366004610b9c565b610363565b005b6101ab6101bb366004610c02565b610379565b6101556101ce366004610c1b565b6001600160a01b031660009081526020819052604090205490565b6101ab610386565b6101ab6101ff366004610b9c565b61039a565b6005546040516001600160a01b039091168152602001610125565b6101186103af565b610141610235366004610b9c565b6103be565b610141610248366004610b9c565b61043e565b61015561025b366004610c3d565b61044c565b6101ab61026e366004610c1b565b610477565b60606003805461028290610c70565b80601f01602080910402602001604051908101604052809291908181526020018280546102ae90610c70565b80156102fb5780601f106102d0576101008083540402835291602001916102fb565b820191906000526020600020905b8154815290600101906020018083116102de57829003601f168201915b5050505050905090565b6000336103138185856104ed565b5060019392505050565b60003361032b858285610612565b61033685858561068c565b506001949350505050565b600033610313818585610354838361044c565b61035e9190610cc0565b6104ed565b61036b61085a565b61037582826108b4565b5050565b6103833382610993565b50565b61038e61085a565b6103986000610ad9565b565b6103a5823383610612565b6103758282610993565b60606004805461028290610c70565b600033816103cc828661044c565b9050838110156104315760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61033682868684036104ed565b60003361031381858561068c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61047f61085a565b6001600160a01b0381166104e45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610428565b61038381610ad9565b6001600160a01b03831661054f5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610428565b6001600160a01b0382166105b05760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610428565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061061e848461044c565b9050600019811461068657818110156106795760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610428565b61068684848484036104ed565b50505050565b6001600160a01b0383166106f05760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610428565b6001600160a01b0382166107525760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610428565b6001600160a01b038316600090815260208190526040902054818110156107ca5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610428565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610801908490610cc0565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161084d91815260200190565b60405180910390a3610686565b6005546001600160a01b031633146103985760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610428565b6001600160a01b03821661090a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610428565b806002600082825461091c9190610cc0565b90915550506001600160a01b03821660009081526020819052604081208054839290610949908490610cc0565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0382166109f35760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610428565b6001600160a01b03821660009081526020819052604090205481811015610a675760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610428565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610a96908490610cd8565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610605565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b81811015610b5857858101830151858201604001528201610b3c565b81811115610b6a576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610b9757600080fd5b919050565b60008060408385031215610baf57600080fd5b610bb883610b80565b946020939093013593505050565b600080600060608486031215610bdb57600080fd5b610be484610b80565b9250610bf260208501610b80565b9150604084013590509250925092565b600060208284031215610c1457600080fd5b5035919050565b600060208284031215610c2d57600080fd5b610c3682610b80565b9392505050565b60008060408385031215610c5057600080fd5b610c5983610b80565b9150610c6760208401610b80565b90509250929050565b600181811c90821680610c8457607f821691505b602082108103610ca457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610cd357610cd3610caa565b500190565b600082821015610cea57610cea610caa565b50039056fea2646970667358221220504dfffe438f476d69d4aa96a3f4178de0d5a603b8fde8dcf73bd0e58a6742f264736f6c634300080f0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x8 DUP2 MSTORE PUSH1 0x20 ADD PUSH8 0x109554D115195CDD PUSH1 0xC2 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x4 DUP2 MSTORE PUSH1 0x20 ADD PUSH4 0x109554D1 PUSH1 0xE2 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x61 SWAP2 SWAP1 PUSH3 0x2A0 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x70 DUP3 DUP3 PUSH3 0x2A0 JUMP JUMPDEST POP POP POP PUSH3 0x8D PUSH3 0x87 PUSH3 0xB9 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xBD JUMP JUMPDEST PUSH3 0xB3 CALLER PUSH3 0xA0 PUSH1 0x12 PUSH1 0xA PUSH3 0x481 JUMP JUMPDEST PUSH3 0xAD SWAP1 PUSH1 0x64 PUSH3 0x499 JUMP JUMPDEST PUSH3 0x10F JUMP JUMPDEST PUSH3 0x4D6 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x16A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x17E SWAP2 SWAP1 PUSH3 0x4BB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH3 0x1AD SWAP1 DUP5 SWAP1 PUSH3 0x4BB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x227 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x248 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x1F7 JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x277 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x298 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x283 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x2BC JUMPI PUSH3 0x2BC PUSH3 0x1FC JUMP JUMPDEST PUSH3 0x2D4 DUP2 PUSH3 0x2CD DUP5 SLOAD PUSH3 0x212 JUMP JUMPDEST DUP5 PUSH3 0x24E JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x30C JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x2F3 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x298 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x33D JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x31C JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x35C JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x3C3 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x3A7 JUMPI PUSH3 0x3A7 PUSH3 0x36C JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x3B5 JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x387 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x3DC JUMPI POP PUSH1 0x1 PUSH3 0x47B JUMP JUMPDEST DUP2 PUSH3 0x3EB JUMPI POP PUSH1 0x0 PUSH3 0x47B JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x404 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x40F JUMPI PUSH3 0x42F JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x47B JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x423 JUMPI PUSH3 0x423 PUSH3 0x36C JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x47B JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x454 JUMPI POP DUP2 DUP2 EXP PUSH3 0x47B JUMP JUMPDEST PUSH3 0x460 DUP4 DUP4 PUSH3 0x382 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x477 JUMPI PUSH3 0x477 PUSH3 0x36C JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x492 PUSH1 0xFF DUP5 AND DUP4 PUSH3 0x3CB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x4B6 JUMPI PUSH3 0x4B6 PUSH3 0x36C JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x4D1 JUMPI PUSH3 0x4D1 PUSH3 0x36C JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH2 0xD25 DUP1 PUSH3 0x4E6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x163 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x273 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH2 0x13C CALLDATASIZE PUSH1 0x4 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x305 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH2 0x141 PUSH2 0x171 CALLDATASIZE PUSH1 0x4 PUSH2 0xBC6 JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH2 0x141 PUSH2 0x193 CALLDATASIZE PUSH1 0x4 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x341 JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x1A6 CALLDATASIZE PUSH1 0x4 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x363 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AB PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0xC02 JUMP JUMPDEST PUSH2 0x379 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x1CE CALLDATASIZE PUSH1 0x4 PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x386 JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x1FF CALLDATASIZE PUSH1 0x4 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x39A JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x3AF JUMP JUMPDEST PUSH2 0x141 PUSH2 0x235 CALLDATASIZE PUSH1 0x4 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x3BE JUMP JUMPDEST PUSH2 0x141 PUSH2 0x248 CALLDATASIZE PUSH1 0x4 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x43E JUMP JUMPDEST PUSH2 0x155 PUSH2 0x25B CALLDATASIZE PUSH1 0x4 PUSH2 0xC3D JUMP JUMPDEST PUSH2 0x44C JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0xC1B JUMP JUMPDEST PUSH2 0x477 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x282 SWAP1 PUSH2 0xC70 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2AE SWAP1 PUSH2 0xC70 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x313 DUP2 DUP6 DUP6 PUSH2 0x4ED JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x32B DUP6 DUP3 DUP6 PUSH2 0x612 JUMP JUMPDEST PUSH2 0x336 DUP6 DUP6 DUP6 PUSH2 0x68C JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x313 DUP2 DUP6 DUP6 PUSH2 0x354 DUP4 DUP4 PUSH2 0x44C JUMP JUMPDEST PUSH2 0x35E SWAP2 SWAP1 PUSH2 0xCC0 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH2 0x36B PUSH2 0x85A JUMP JUMPDEST PUSH2 0x375 DUP3 DUP3 PUSH2 0x8B4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x383 CALLER DUP3 PUSH2 0x993 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x38E PUSH2 0x85A JUMP JUMPDEST PUSH2 0x398 PUSH1 0x0 PUSH2 0xAD9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3A5 DUP3 CALLER DUP4 PUSH2 0x612 JUMP JUMPDEST PUSH2 0x375 DUP3 DUP3 PUSH2 0x993 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x282 SWAP1 PUSH2 0xC70 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x3CC DUP3 DUP7 PUSH2 0x44C JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x431 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x336 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x4ED JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x313 DUP2 DUP6 DUP6 PUSH2 0x68C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x47F PUSH2 0x85A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x428 JUMP JUMPDEST PUSH2 0x383 DUP2 PUSH2 0xAD9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x428 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x428 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x61E DUP5 DUP5 PUSH2 0x44C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x686 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x679 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x428 JUMP JUMPDEST PUSH2 0x686 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x4ED JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x428 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x752 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x428 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x7CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x428 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x801 SWAP1 DUP5 SWAP1 PUSH2 0xCC0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x84D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x686 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x398 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x428 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x90A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x428 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x91C SWAP2 SWAP1 PUSH2 0xCC0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x949 SWAP1 DUP5 SWAP1 PUSH2 0xCC0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x428 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xA67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x428 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xA96 SWAP1 DUP5 SWAP1 PUSH2 0xCD8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0x605 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB58 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xB3C JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xB6A JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBB8 DUP4 PUSH2 0xB80 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBE4 DUP5 PUSH2 0xB80 JUMP JUMPDEST SWAP3 POP PUSH2 0xBF2 PUSH1 0x20 DUP6 ADD PUSH2 0xB80 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC36 DUP3 PUSH2 0xB80 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC59 DUP4 PUSH2 0xB80 JUMP JUMPDEST SWAP2 POP PUSH2 0xC67 PUSH1 0x20 DUP5 ADD PUSH2 0xB80 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC84 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xCA4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xCD3 JUMPI PUSH2 0xCD3 PUSH2 0xCAA JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xCEA JUMPI PUSH2 0xCEA PUSH2 0xCAA JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP 0x4D SELFDESTRUCT INVALID NUMBER DUP16 SELFBALANCE PUSH14 0x69D4AA96A3F4178DE0D5A603B8FD 0xE8 0xDC 0xF7 EXTCODESIZE 0xD0 0xE5 DUP11 PUSH8 0x42F264736F6C6343 STOP ADDMOD 0xF STOP CALLER ","sourceMap":"242:257:25:-:0;;;300:98;;;;;;;;;;1978:113:5;;;;;;;;;;;;;-1:-1:-1;;;1978:113:5;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:113:5;;;2052:5;2044;:13;;;;;;:::i;:::-;-1:-1:-1;2067:7:5;:17;2077:7;2067;:17;:::i;:::-;;1978:113;;936:32:4;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;350:41:25::1;356:10;374:16;3175:2:5::0;374::25::1;:16;:::i;:::-;368:22;::::0;:3:::1;:22;:::i;:::-;350:5;:41::i;:::-;242:257:::0;;640:96:12;719:10;;640:96::o;2433:187:4:-;2525:6;;;-1:-1:-1;;;;;2541:17:4;;;-1:-1:-1;;;;;;2541:17:4;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;9139:389:5:-;-1:-1:-1;;;;;9222:21:5;;9214:65;;;;-1:-1:-1;;;9214:65:5;;4625:2:27;9214:65:5;;;4607:21:27;4664:2;4644:18;;;4637:30;4703:33;4683:18;;;4676:61;4754:18;;9214:65:5;;;;;;;;9366:6;9350:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9382:18:5;;:9;:18;;;;;;;;;;:28;;9404:6;;9382:9;:28;;9404:6;;9382:28;:::i;:::-;;;;-1:-1:-1;;9425:37:5;;5062:25:27;;;-1:-1:-1;;;;;9425:37:5;;;9442:1;;9425:37;;5050:2:27;5035:18;9425:37:5;;;;;;;9139:389;;:::o;12523:121::-;;;;:::o;14:127:27:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:27;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:27;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:27;;;2580:26;2531:89;-1:-1:-1;;1335:1:27;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:27;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:27;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:27;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:27:o;2735:127::-;2796:10;2791:3;2787:20;2784:1;2777:31;2827:4;2824:1;2817:15;2851:4;2848:1;2841:15;2867:422;2956:1;2999:5;2956:1;3013:270;3034:7;3024:8;3021:21;3013:270;;;3093:4;3089:1;3085:6;3081:17;3075:4;3072:27;3069:53;;;3102:18;;:::i;:::-;3152:7;3142:8;3138:22;3135:55;;;3172:16;;;;3135:55;3251:22;;;;3211:15;;;;3013:270;;;3017:3;2867:422;;;;;:::o;3294:806::-;3343:5;3373:8;3363:80;;-1:-1:-1;3414:1:27;3428:5;;3363:80;3462:4;3452:76;;-1:-1:-1;3499:1:27;3513:5;;3452:76;3544:4;3562:1;3557:59;;;;3630:1;3625:130;;;;3537:218;;3557:59;3587:1;3578:10;;3601:5;;;3625:130;3662:3;3652:8;3649:17;3646:43;;;3669:18;;:::i;:::-;-1:-1:-1;;3725:1:27;3711:16;;3740:5;;3537:218;;3839:2;3829:8;3826:16;3820:3;3814:4;3811:13;3807:36;3801:2;3791:8;3788:16;3783:2;3777:4;3774:12;3770:35;3767:77;3764:159;;;-1:-1:-1;3876:19:27;;;3908:5;;3764:159;3955:34;3980:8;3974:4;3955:34;:::i;:::-;4025:6;4021:1;4017:6;4013:19;4004:7;4001:32;3998:58;;;4036:18;;:::i;:::-;4074:20;;-1:-1:-1;3294:806:27;;;;;:::o;4105:140::-;4163:5;4192:47;4233:4;4223:8;4219:19;4213:4;4192:47;:::i;:::-;4183:56;4105:140;-1:-1:-1;;;4105:140:27:o;4250:168::-;4290:7;4356:1;4352;4348:6;4344:14;4341:1;4338:21;4333:1;4326:9;4319:17;4315:45;4312:71;;;4363:18;;:::i;:::-;-1:-1:-1;4403:9:27;;4250:168::o;4783:128::-;4823:3;4854:1;4850:6;4847:1;4844:13;4841:39;;;4860:18;;:::i;:::-;-1:-1:-1;4896:9:27;;4783:128::o;4916:177::-;242:257:25;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_1311":{"entryPoint":null,"id":1311,"parameterSlots":3,"returnSlots":0},"@_approve_1246":{"entryPoint":1261,"id":1246,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1300":{"entryPoint":null,"id":1300,"parameterSlots":3,"returnSlots":0},"@_burn_1201":{"entryPoint":2451,"id":1201,"parameterSlots":2,"returnSlots":0},"@_checkOwner_597":{"entryPoint":2138,"id":597,"parameterSlots":0,"returnSlots":0},"@_mint_1129":{"entryPoint":2228,"id":1129,"parameterSlots":2,"returnSlots":0},"@_msgSender_1744":{"entryPoint":null,"id":1744,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_1289":{"entryPoint":1554,"id":1289,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_654":{"entryPoint":2777,"id":654,"parameterSlots":1,"returnSlots":0},"@_transfer_1002":{"entryPoint":1676,"id":1002,"parameterSlots":3,"returnSlots":0},"@allowance_797":{"entryPoint":1100,"id":797,"parameterSlots":2,"returnSlots":1},"@approve_822":{"entryPoint":773,"id":822,"parameterSlots":2,"returnSlots":1},"@balanceOf_754":{"entryPoint":null,"id":754,"parameterSlots":1,"returnSlots":1},"@burnFrom_1433":{"entryPoint":922,"id":1433,"parameterSlots":2,"returnSlots":0},"@burn_1412":{"entryPoint":889,"id":1412,"parameterSlots":1,"returnSlots":0},"@decimals_730":{"entryPoint":null,"id":730,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_925":{"entryPoint":958,"id":925,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_884":{"entryPoint":833,"id":884,"parameterSlots":2,"returnSlots":1},"@mint_5213":{"entryPoint":867,"id":5213,"parameterSlots":2,"returnSlots":0},"@name_710":{"entryPoint":627,"id":710,"parameterSlots":0,"returnSlots":1},"@owner_583":{"entryPoint":null,"id":583,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_611":{"entryPoint":902,"id":611,"parameterSlots":0,"returnSlots":0},"@symbol_720":{"entryPoint":943,"id":720,"parameterSlots":0,"returnSlots":1},"@totalSupply_740":{"entryPoint":null,"id":740,"parameterSlots":0,"returnSlots":1},"@transferFrom_855":{"entryPoint":797,"id":855,"parameterSlots":3,"returnSlots":1},"@transferOwnership_634":{"entryPoint":1143,"id":634,"parameterSlots":1,"returnSlots":0},"@transfer_779":{"entryPoint":1086,"id":779,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":2944,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3099,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3133,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3014,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2972,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":3074,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2859,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3264,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":3288,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":3184,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3242,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8297:27","statements":[{"nodeType":"YulBlock","src":"6:3:27","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:476:27","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:27","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:27","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:27","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:27"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:27"},"nodeType":"YulFunctionCall","src":"166:21:27"},"nodeType":"YulExpressionStatement","src":"166:21:27"},{"nodeType":"YulVariableDeclaration","src":"196:27:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:27"},"nodeType":"YulFunctionCall","src":"210:13:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:27"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:27"},"nodeType":"YulFunctionCall","src":"239:18:27"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:27"},"nodeType":"YulFunctionCall","src":"232:34:27"},"nodeType":"YulExpressionStatement","src":"232:34:27"},{"nodeType":"YulVariableDeclaration","src":"275:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:27","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:27"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:27"},"nodeType":"YulFunctionCall","src":"369:17:27"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:27"},"nodeType":"YulFunctionCall","src":"365:26:27"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:27"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:27"},"nodeType":"YulFunctionCall","src":"403:14:27"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:27"},"nodeType":"YulFunctionCall","src":"399:23:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:27"},"nodeType":"YulFunctionCall","src":"393:30:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:27"},"nodeType":"YulFunctionCall","src":"358:66:27"},"nodeType":"YulExpressionStatement","src":"358:66:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:27"},"nodeType":"YulFunctionCall","src":"302:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:27","statements":[{"nodeType":"YulAssignment","src":"318:15:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:27"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:27"},"nodeType":"YulFunctionCall","src":"323:10:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:27","statements":[]},"src":"294:140:27"},{"body":{"nodeType":"YulBlock","src":"468:66:27","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"497:9:27"},{"name":"length","nodeType":"YulIdentifier","src":"508:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"493:3:27"},"nodeType":"YulFunctionCall","src":"493:22:27"},{"kind":"number","nodeType":"YulLiteral","src":"517:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"489:3:27"},"nodeType":"YulFunctionCall","src":"489:31:27"},{"kind":"number","nodeType":"YulLiteral","src":"522:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"482:6:27"},"nodeType":"YulFunctionCall","src":"482:42:27"},"nodeType":"YulExpressionStatement","src":"482:42:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"449:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"452:6:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"446:2:27"},"nodeType":"YulFunctionCall","src":"446:13:27"},"nodeType":"YulIf","src":"443:91:27"},{"nodeType":"YulAssignment","src":"543:62:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"559:9:27"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"578:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"586:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"574:3:27"},"nodeType":"YulFunctionCall","src":"574:15:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"595:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"591:3:27"},"nodeType":"YulFunctionCall","src":"591:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"570:3:27"},"nodeType":"YulFunctionCall","src":"570:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"555:3:27"},"nodeType":"YulFunctionCall","src":"555:45:27"},{"kind":"number","nodeType":"YulLiteral","src":"602:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"551:3:27"},"nodeType":"YulFunctionCall","src":"551:54:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"543:4:27"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:27","type":""}],"src":"14:597:27"},{"body":{"nodeType":"YulBlock","src":"665:124:27","statements":[{"nodeType":"YulAssignment","src":"675:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"697:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"684:12:27"},"nodeType":"YulFunctionCall","src":"684:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"675:5:27"}]},{"body":{"nodeType":"YulBlock","src":"767:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"776:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"779:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"769:6:27"},"nodeType":"YulFunctionCall","src":"769:12:27"},"nodeType":"YulExpressionStatement","src":"769:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"726:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"737:5:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"752:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"757:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"748:3:27"},"nodeType":"YulFunctionCall","src":"748:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"761:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"744:3:27"},"nodeType":"YulFunctionCall","src":"744:19:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"733:3:27"},"nodeType":"YulFunctionCall","src":"733:31:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"723:2:27"},"nodeType":"YulFunctionCall","src":"723:42:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"716:6:27"},"nodeType":"YulFunctionCall","src":"716:50:27"},"nodeType":"YulIf","src":"713:70:27"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"655:5:27","type":""}],"src":"616:173:27"},{"body":{"nodeType":"YulBlock","src":"881:167:27","statements":[{"body":{"nodeType":"YulBlock","src":"927:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"936:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"939:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"929:6:27"},"nodeType":"YulFunctionCall","src":"929:12:27"},"nodeType":"YulExpressionStatement","src":"929:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"902:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"911:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"898:3:27"},"nodeType":"YulFunctionCall","src":"898:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"923:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"894:3:27"},"nodeType":"YulFunctionCall","src":"894:32:27"},"nodeType":"YulIf","src":"891:52:27"},{"nodeType":"YulAssignment","src":"952:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"981:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"962:18:27"},"nodeType":"YulFunctionCall","src":"962:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"952:6:27"}]},{"nodeType":"YulAssignment","src":"1000:42:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1027:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1038:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1023:3:27"},"nodeType":"YulFunctionCall","src":"1023:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1010:12:27"},"nodeType":"YulFunctionCall","src":"1010:32:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1000:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"839:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"850:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"862:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"870:6:27","type":""}],"src":"794:254:27"},{"body":{"nodeType":"YulBlock","src":"1148:92:27","statements":[{"nodeType":"YulAssignment","src":"1158:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:27"},"nodeType":"YulFunctionCall","src":"1166:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1200:9:27"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1225:6:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1218:6:27"},"nodeType":"YulFunctionCall","src":"1218:14:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1211:6:27"},"nodeType":"YulFunctionCall","src":"1211:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1193:6:27"},"nodeType":"YulFunctionCall","src":"1193:41:27"},"nodeType":"YulExpressionStatement","src":"1193:41:27"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1117:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1128:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1139:4:27","type":""}],"src":"1053:187:27"},{"body":{"nodeType":"YulBlock","src":"1346:76:27","statements":[{"nodeType":"YulAssignment","src":"1356:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1368:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1379:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1364:3:27"},"nodeType":"YulFunctionCall","src":"1364:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1356:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1398:9:27"},{"name":"value0","nodeType":"YulIdentifier","src":"1409:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1391:6:27"},"nodeType":"YulFunctionCall","src":"1391:25:27"},"nodeType":"YulExpressionStatement","src":"1391:25:27"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1315:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1326:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1337:4:27","type":""}],"src":"1245:177:27"},{"body":{"nodeType":"YulBlock","src":"1531:224:27","statements":[{"body":{"nodeType":"YulBlock","src":"1577:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1586:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1589:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1579:6:27"},"nodeType":"YulFunctionCall","src":"1579:12:27"},"nodeType":"YulExpressionStatement","src":"1579:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1552:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"1561:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1548:3:27"},"nodeType":"YulFunctionCall","src":"1548:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"1573:2:27","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1544:3:27"},"nodeType":"YulFunctionCall","src":"1544:32:27"},"nodeType":"YulIf","src":"1541:52:27"},{"nodeType":"YulAssignment","src":"1602:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1631:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1612:18:27"},"nodeType":"YulFunctionCall","src":"1612:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1602:6:27"}]},{"nodeType":"YulAssignment","src":"1650:48:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1683:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1694:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1679:3:27"},"nodeType":"YulFunctionCall","src":"1679:18:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1660:18:27"},"nodeType":"YulFunctionCall","src":"1660:38:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1650:6:27"}]},{"nodeType":"YulAssignment","src":"1707:42:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1734:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1745:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:27"},"nodeType":"YulFunctionCall","src":"1730:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1717:12:27"},"nodeType":"YulFunctionCall","src":"1717:32:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1707:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1481:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1492:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1504:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1512:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1520:6:27","type":""}],"src":"1427:328:27"},{"body":{"nodeType":"YulBlock","src":"1857:87:27","statements":[{"nodeType":"YulAssignment","src":"1867:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1879:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1890:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1875:3:27"},"nodeType":"YulFunctionCall","src":"1875:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1867:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1909:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1924:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1932:4:27","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1920:3:27"},"nodeType":"YulFunctionCall","src":"1920:17:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1902:6:27"},"nodeType":"YulFunctionCall","src":"1902:36:27"},"nodeType":"YulExpressionStatement","src":"1902:36:27"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1826:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1837:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1848:4:27","type":""}],"src":"1760:184:27"},{"body":{"nodeType":"YulBlock","src":"2019:110:27","statements":[{"body":{"nodeType":"YulBlock","src":"2065:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2074:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2077:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2067:6:27"},"nodeType":"YulFunctionCall","src":"2067:12:27"},"nodeType":"YulExpressionStatement","src":"2067:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2040:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2049:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2036:3:27"},"nodeType":"YulFunctionCall","src":"2036:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"2061:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2032:3:27"},"nodeType":"YulFunctionCall","src":"2032:32:27"},"nodeType":"YulIf","src":"2029:52:27"},{"nodeType":"YulAssignment","src":"2090:33:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2113:9:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2100:12:27"},"nodeType":"YulFunctionCall","src":"2100:23:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2090:6:27"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1985:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1996:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2008:6:27","type":""}],"src":"1949:180:27"},{"body":{"nodeType":"YulBlock","src":"2204:116:27","statements":[{"body":{"nodeType":"YulBlock","src":"2250:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2259:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2262:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2252:6:27"},"nodeType":"YulFunctionCall","src":"2252:12:27"},"nodeType":"YulExpressionStatement","src":"2252:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2225:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2234:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2221:3:27"},"nodeType":"YulFunctionCall","src":"2221:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"2246:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2217:3:27"},"nodeType":"YulFunctionCall","src":"2217:32:27"},"nodeType":"YulIf","src":"2214:52:27"},{"nodeType":"YulAssignment","src":"2275:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2304:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2285:18:27"},"nodeType":"YulFunctionCall","src":"2285:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2275:6:27"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2170:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2181:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2193:6:27","type":""}],"src":"2134:186:27"},{"body":{"nodeType":"YulBlock","src":"2426:102:27","statements":[{"nodeType":"YulAssignment","src":"2436:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2448:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2459:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2444:3:27"},"nodeType":"YulFunctionCall","src":"2444:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2436:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2478:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2493:6:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2509:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2514:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2505:3:27"},"nodeType":"YulFunctionCall","src":"2505:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"2518:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2501:3:27"},"nodeType":"YulFunctionCall","src":"2501:19:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2489:3:27"},"nodeType":"YulFunctionCall","src":"2489:32:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2471:6:27"},"nodeType":"YulFunctionCall","src":"2471:51:27"},"nodeType":"YulExpressionStatement","src":"2471:51:27"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2395:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2406:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2417:4:27","type":""}],"src":"2325:203:27"},{"body":{"nodeType":"YulBlock","src":"2620:173:27","statements":[{"body":{"nodeType":"YulBlock","src":"2666:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2675:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2678:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2668:6:27"},"nodeType":"YulFunctionCall","src":"2668:12:27"},"nodeType":"YulExpressionStatement","src":"2668:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2641:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2650:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2637:3:27"},"nodeType":"YulFunctionCall","src":"2637:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"2662:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2633:3:27"},"nodeType":"YulFunctionCall","src":"2633:32:27"},"nodeType":"YulIf","src":"2630:52:27"},{"nodeType":"YulAssignment","src":"2691:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2720:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2701:18:27"},"nodeType":"YulFunctionCall","src":"2701:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2691:6:27"}]},{"nodeType":"YulAssignment","src":"2739:48:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2772:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2783:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2768:3:27"},"nodeType":"YulFunctionCall","src":"2768:18:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2749:18:27"},"nodeType":"YulFunctionCall","src":"2749:38:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2739:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2578:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2589:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2601:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2609:6:27","type":""}],"src":"2533:260:27"},{"body":{"nodeType":"YulBlock","src":"2853:325:27","statements":[{"nodeType":"YulAssignment","src":"2863:22:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2877:1:27","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2880:4:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2873:3:27"},"nodeType":"YulFunctionCall","src":"2873:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2863:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"2894:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2924:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"2930:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2920:3:27"},"nodeType":"YulFunctionCall","src":"2920:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2898:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"2971:31:27","statements":[{"nodeType":"YulAssignment","src":"2973:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2987:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2995:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2983:3:27"},"nodeType":"YulFunctionCall","src":"2983:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2973:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2951:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2944:6:27"},"nodeType":"YulFunctionCall","src":"2944:26:27"},"nodeType":"YulIf","src":"2941:61:27"},{"body":{"nodeType":"YulBlock","src":"3061:111:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3082:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3089:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3094:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3085:3:27"},"nodeType":"YulFunctionCall","src":"3085:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3075:6:27"},"nodeType":"YulFunctionCall","src":"3075:31:27"},"nodeType":"YulExpressionStatement","src":"3075:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3126:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3129:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3119:6:27"},"nodeType":"YulFunctionCall","src":"3119:15:27"},"nodeType":"YulExpressionStatement","src":"3119:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3154:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3157:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3147:6:27"},"nodeType":"YulFunctionCall","src":"3147:15:27"},"nodeType":"YulExpressionStatement","src":"3147:15:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3017:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3040:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3048:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3037:2:27"},"nodeType":"YulFunctionCall","src":"3037:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3014:2:27"},"nodeType":"YulFunctionCall","src":"3014:38:27"},"nodeType":"YulIf","src":"3011:161:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2833:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2842:6:27","type":""}],"src":"2798:380:27"},{"body":{"nodeType":"YulBlock","src":"3215:95:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3232:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3239:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3244:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3235:3:27"},"nodeType":"YulFunctionCall","src":"3235:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3225:6:27"},"nodeType":"YulFunctionCall","src":"3225:31:27"},"nodeType":"YulExpressionStatement","src":"3225:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3272:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3275:4:27","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3265:6:27"},"nodeType":"YulFunctionCall","src":"3265:15:27"},"nodeType":"YulExpressionStatement","src":"3265:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3296:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3299:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3289:6:27"},"nodeType":"YulFunctionCall","src":"3289:15:27"},"nodeType":"YulExpressionStatement","src":"3289:15:27"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"3183:127:27"},{"body":{"nodeType":"YulBlock","src":"3363:80:27","statements":[{"body":{"nodeType":"YulBlock","src":"3390:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3392:16:27"},"nodeType":"YulFunctionCall","src":"3392:18:27"},"nodeType":"YulExpressionStatement","src":"3392:18:27"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3379:1:27"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"3386:1:27"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3382:3:27"},"nodeType":"YulFunctionCall","src":"3382:6:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3376:2:27"},"nodeType":"YulFunctionCall","src":"3376:13:27"},"nodeType":"YulIf","src":"3373:39:27"},{"nodeType":"YulAssignment","src":"3421:16:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3432:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"3435:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3428:3:27"},"nodeType":"YulFunctionCall","src":"3428:9:27"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"3421:3:27"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3346:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"3349:1:27","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"3355:3:27","type":""}],"src":"3315:128:27"},{"body":{"nodeType":"YulBlock","src":"3622:227:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3639:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3650:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3632:6:27"},"nodeType":"YulFunctionCall","src":"3632:21:27"},"nodeType":"YulExpressionStatement","src":"3632:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3673:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3684:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3669:3:27"},"nodeType":"YulFunctionCall","src":"3669:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"3689:2:27","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3662:6:27"},"nodeType":"YulFunctionCall","src":"3662:30:27"},"nodeType":"YulExpressionStatement","src":"3662:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3712:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3723:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3708:3:27"},"nodeType":"YulFunctionCall","src":"3708:18:27"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"3728:34:27","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3701:6:27"},"nodeType":"YulFunctionCall","src":"3701:62:27"},"nodeType":"YulExpressionStatement","src":"3701:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3783:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3794:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3779:3:27"},"nodeType":"YulFunctionCall","src":"3779:18:27"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"3799:7:27","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3772:6:27"},"nodeType":"YulFunctionCall","src":"3772:35:27"},"nodeType":"YulExpressionStatement","src":"3772:35:27"},{"nodeType":"YulAssignment","src":"3816:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3828:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3839:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3824:3:27"},"nodeType":"YulFunctionCall","src":"3824:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3816:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3599:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3613:4:27","type":""}],"src":"3448:401:27"},{"body":{"nodeType":"YulBlock","src":"4028:228:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4045:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4056:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4038:6:27"},"nodeType":"YulFunctionCall","src":"4038:21:27"},"nodeType":"YulExpressionStatement","src":"4038:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4079:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4090:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4075:3:27"},"nodeType":"YulFunctionCall","src":"4075:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"4095:2:27","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4068:6:27"},"nodeType":"YulFunctionCall","src":"4068:30:27"},"nodeType":"YulExpressionStatement","src":"4068:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4118:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4129:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4114:3:27"},"nodeType":"YulFunctionCall","src":"4114:18:27"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"4134:34:27","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4107:6:27"},"nodeType":"YulFunctionCall","src":"4107:62:27"},"nodeType":"YulExpressionStatement","src":"4107:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4189:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4200:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4185:3:27"},"nodeType":"YulFunctionCall","src":"4185:18:27"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"4205:8:27","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4178:6:27"},"nodeType":"YulFunctionCall","src":"4178:36:27"},"nodeType":"YulExpressionStatement","src":"4178:36:27"},{"nodeType":"YulAssignment","src":"4223:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4235:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4246:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4231:3:27"},"nodeType":"YulFunctionCall","src":"4231:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4223:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4005:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4019:4:27","type":""}],"src":"3854:402:27"},{"body":{"nodeType":"YulBlock","src":"4435:226:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4452:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4463:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4445:6:27"},"nodeType":"YulFunctionCall","src":"4445:21:27"},"nodeType":"YulExpressionStatement","src":"4445:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4486:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4497:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4482:3:27"},"nodeType":"YulFunctionCall","src":"4482:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"4502:2:27","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4475:6:27"},"nodeType":"YulFunctionCall","src":"4475:30:27"},"nodeType":"YulExpressionStatement","src":"4475:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4525:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4536:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4521:3:27"},"nodeType":"YulFunctionCall","src":"4521:18:27"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"4541:34:27","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4514:6:27"},"nodeType":"YulFunctionCall","src":"4514:62:27"},"nodeType":"YulExpressionStatement","src":"4514:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4596:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4607:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4592:3:27"},"nodeType":"YulFunctionCall","src":"4592:18:27"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"4612:6:27","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4585:6:27"},"nodeType":"YulFunctionCall","src":"4585:34:27"},"nodeType":"YulExpressionStatement","src":"4585:34:27"},{"nodeType":"YulAssignment","src":"4628:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4640:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4651:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4636:3:27"},"nodeType":"YulFunctionCall","src":"4636:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4628:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4412:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4426:4:27","type":""}],"src":"4261:400:27"},{"body":{"nodeType":"YulBlock","src":"4840:224:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4857:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4868:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4850:6:27"},"nodeType":"YulFunctionCall","src":"4850:21:27"},"nodeType":"YulExpressionStatement","src":"4850:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4891:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4902:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4887:3:27"},"nodeType":"YulFunctionCall","src":"4887:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"4907:2:27","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4880:6:27"},"nodeType":"YulFunctionCall","src":"4880:30:27"},"nodeType":"YulExpressionStatement","src":"4880:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4930:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4941:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4926:3:27"},"nodeType":"YulFunctionCall","src":"4926:18:27"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"4946:34:27","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4919:6:27"},"nodeType":"YulFunctionCall","src":"4919:62:27"},"nodeType":"YulExpressionStatement","src":"4919:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5001:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5012:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4997:3:27"},"nodeType":"YulFunctionCall","src":"4997:18:27"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"5017:4:27","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4990:6:27"},"nodeType":"YulFunctionCall","src":"4990:32:27"},"nodeType":"YulExpressionStatement","src":"4990:32:27"},{"nodeType":"YulAssignment","src":"5031:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5043:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5054:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5039:3:27"},"nodeType":"YulFunctionCall","src":"5039:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5031:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4817:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4831:4:27","type":""}],"src":"4666:398:27"},{"body":{"nodeType":"YulBlock","src":"5243:179:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5260:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5271:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5253:6:27"},"nodeType":"YulFunctionCall","src":"5253:21:27"},"nodeType":"YulExpressionStatement","src":"5253:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5294:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5305:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5290:3:27"},"nodeType":"YulFunctionCall","src":"5290:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"5310:2:27","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5283:6:27"},"nodeType":"YulFunctionCall","src":"5283:30:27"},"nodeType":"YulExpressionStatement","src":"5283:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5333:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5344:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5329:3:27"},"nodeType":"YulFunctionCall","src":"5329:18:27"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"5349:31:27","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5322:6:27"},"nodeType":"YulFunctionCall","src":"5322:59:27"},"nodeType":"YulExpressionStatement","src":"5322:59:27"},{"nodeType":"YulAssignment","src":"5390:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5402:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5413:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5398:3:27"},"nodeType":"YulFunctionCall","src":"5398:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5390:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5220:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5234:4:27","type":""}],"src":"5069:353:27"},{"body":{"nodeType":"YulBlock","src":"5601:227:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5618:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5629:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5611:6:27"},"nodeType":"YulFunctionCall","src":"5611:21:27"},"nodeType":"YulExpressionStatement","src":"5611:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5652:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5663:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5648:3:27"},"nodeType":"YulFunctionCall","src":"5648:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"5668:2:27","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5641:6:27"},"nodeType":"YulFunctionCall","src":"5641:30:27"},"nodeType":"YulExpressionStatement","src":"5641:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5691:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5702:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5687:3:27"},"nodeType":"YulFunctionCall","src":"5687:18:27"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"5707:34:27","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5680:6:27"},"nodeType":"YulFunctionCall","src":"5680:62:27"},"nodeType":"YulExpressionStatement","src":"5680:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5762:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5773:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5758:3:27"},"nodeType":"YulFunctionCall","src":"5758:18:27"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"5778:7:27","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5751:6:27"},"nodeType":"YulFunctionCall","src":"5751:35:27"},"nodeType":"YulExpressionStatement","src":"5751:35:27"},{"nodeType":"YulAssignment","src":"5795:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5807:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5818:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5803:3:27"},"nodeType":"YulFunctionCall","src":"5803:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5795:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5578:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5592:4:27","type":""}],"src":"5427:401:27"},{"body":{"nodeType":"YulBlock","src":"6007:225:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6024:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6035:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6017:6:27"},"nodeType":"YulFunctionCall","src":"6017:21:27"},"nodeType":"YulExpressionStatement","src":"6017:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6058:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6069:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6054:3:27"},"nodeType":"YulFunctionCall","src":"6054:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"6074:2:27","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6047:6:27"},"nodeType":"YulFunctionCall","src":"6047:30:27"},"nodeType":"YulExpressionStatement","src":"6047:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6097:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6108:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6093:3:27"},"nodeType":"YulFunctionCall","src":"6093:18:27"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"6113:34:27","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6086:6:27"},"nodeType":"YulFunctionCall","src":"6086:62:27"},"nodeType":"YulExpressionStatement","src":"6086:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6168:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6179:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6164:3:27"},"nodeType":"YulFunctionCall","src":"6164:18:27"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"6184:5:27","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6157:6:27"},"nodeType":"YulFunctionCall","src":"6157:33:27"},"nodeType":"YulExpressionStatement","src":"6157:33:27"},{"nodeType":"YulAssignment","src":"6199:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6211:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6222:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6207:3:27"},"nodeType":"YulFunctionCall","src":"6207:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6199:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5984:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5998:4:27","type":""}],"src":"5833:399:27"},{"body":{"nodeType":"YulBlock","src":"6411:228:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6428:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6439:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6421:6:27"},"nodeType":"YulFunctionCall","src":"6421:21:27"},"nodeType":"YulExpressionStatement","src":"6421:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6462:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6473:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6458:3:27"},"nodeType":"YulFunctionCall","src":"6458:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"6478:2:27","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6451:6:27"},"nodeType":"YulFunctionCall","src":"6451:30:27"},"nodeType":"YulExpressionStatement","src":"6451:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6501:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6512:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6497:3:27"},"nodeType":"YulFunctionCall","src":"6497:18:27"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"6517:34:27","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6490:6:27"},"nodeType":"YulFunctionCall","src":"6490:62:27"},"nodeType":"YulExpressionStatement","src":"6490:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6572:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6583:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6568:3:27"},"nodeType":"YulFunctionCall","src":"6568:18:27"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"6588:8:27","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6561:6:27"},"nodeType":"YulFunctionCall","src":"6561:36:27"},"nodeType":"YulExpressionStatement","src":"6561:36:27"},{"nodeType":"YulAssignment","src":"6606:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6618:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6629:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6614:3:27"},"nodeType":"YulFunctionCall","src":"6614:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6606:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6388:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6402:4:27","type":""}],"src":"6237:402:27"},{"body":{"nodeType":"YulBlock","src":"6818:182:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6835:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6846:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6828:6:27"},"nodeType":"YulFunctionCall","src":"6828:21:27"},"nodeType":"YulExpressionStatement","src":"6828:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6869:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6880:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6865:3:27"},"nodeType":"YulFunctionCall","src":"6865:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"6885:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6858:6:27"},"nodeType":"YulFunctionCall","src":"6858:30:27"},"nodeType":"YulExpressionStatement","src":"6858:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6908:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6919:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6904:3:27"},"nodeType":"YulFunctionCall","src":"6904:18:27"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"6924:34:27","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6897:6:27"},"nodeType":"YulFunctionCall","src":"6897:62:27"},"nodeType":"YulExpressionStatement","src":"6897:62:27"},{"nodeType":"YulAssignment","src":"6968:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6980:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6991:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6976:3:27"},"nodeType":"YulFunctionCall","src":"6976:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6968:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6795:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6809:4:27","type":""}],"src":"6644:356:27"},{"body":{"nodeType":"YulBlock","src":"7179:181:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7196:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7207:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7189:6:27"},"nodeType":"YulFunctionCall","src":"7189:21:27"},"nodeType":"YulExpressionStatement","src":"7189:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7230:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7241:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7226:3:27"},"nodeType":"YulFunctionCall","src":"7226:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"7246:2:27","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7219:6:27"},"nodeType":"YulFunctionCall","src":"7219:30:27"},"nodeType":"YulExpressionStatement","src":"7219:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7269:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7280:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7265:3:27"},"nodeType":"YulFunctionCall","src":"7265:18:27"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"7285:33:27","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7258:6:27"},"nodeType":"YulFunctionCall","src":"7258:61:27"},"nodeType":"YulExpressionStatement","src":"7258:61:27"},{"nodeType":"YulAssignment","src":"7328:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7340:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7351:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7336:3:27"},"nodeType":"YulFunctionCall","src":"7336:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7328:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7156:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7170:4:27","type":""}],"src":"7005:355:27"},{"body":{"nodeType":"YulBlock","src":"7539:223:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7556:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7567:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7549:6:27"},"nodeType":"YulFunctionCall","src":"7549:21:27"},"nodeType":"YulExpressionStatement","src":"7549:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7590:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7601:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7586:3:27"},"nodeType":"YulFunctionCall","src":"7586:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"7606:2:27","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7579:6:27"},"nodeType":"YulFunctionCall","src":"7579:30:27"},"nodeType":"YulExpressionStatement","src":"7579:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7629:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7640:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7625:3:27"},"nodeType":"YulFunctionCall","src":"7625:18:27"},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f20616464726573","kind":"string","nodeType":"YulLiteral","src":"7645:34:27","type":"","value":"ERC20: burn from the zero addres"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7618:6:27"},"nodeType":"YulFunctionCall","src":"7618:62:27"},"nodeType":"YulExpressionStatement","src":"7618:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7700:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7711:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7696:3:27"},"nodeType":"YulFunctionCall","src":"7696:18:27"},{"hexValue":"73","kind":"string","nodeType":"YulLiteral","src":"7716:3:27","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7689:6:27"},"nodeType":"YulFunctionCall","src":"7689:31:27"},"nodeType":"YulExpressionStatement","src":"7689:31:27"},{"nodeType":"YulAssignment","src":"7729:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7741:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7752:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7737:3:27"},"nodeType":"YulFunctionCall","src":"7737:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7729:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7516:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7530:4:27","type":""}],"src":"7365:397:27"},{"body":{"nodeType":"YulBlock","src":"7941:224:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7958:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7969:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7951:6:27"},"nodeType":"YulFunctionCall","src":"7951:21:27"},"nodeType":"YulExpressionStatement","src":"7951:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7992:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8003:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7988:3:27"},"nodeType":"YulFunctionCall","src":"7988:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"8008:2:27","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7981:6:27"},"nodeType":"YulFunctionCall","src":"7981:30:27"},"nodeType":"YulExpressionStatement","src":"7981:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8031:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8042:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8027:3:27"},"nodeType":"YulFunctionCall","src":"8027:18:27"},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e","kind":"string","nodeType":"YulLiteral","src":"8047:34:27","type":"","value":"ERC20: burn amount exceeds balan"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8020:6:27"},"nodeType":"YulFunctionCall","src":"8020:62:27"},"nodeType":"YulExpressionStatement","src":"8020:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8102:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8113:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8098:3:27"},"nodeType":"YulFunctionCall","src":"8098:18:27"},{"hexValue":"6365","kind":"string","nodeType":"YulLiteral","src":"8118:4:27","type":"","value":"ce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8091:6:27"},"nodeType":"YulFunctionCall","src":"8091:32:27"},"nodeType":"YulExpressionStatement","src":"8091:32:27"},{"nodeType":"YulAssignment","src":"8132:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8144:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8155:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8140:3:27"},"nodeType":"YulFunctionCall","src":"8140:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8132:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7918:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7932:4:27","type":""}],"src":"7767:398:27"},{"body":{"nodeType":"YulBlock","src":"8219:76:27","statements":[{"body":{"nodeType":"YulBlock","src":"8241:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8243:16:27"},"nodeType":"YulFunctionCall","src":"8243:18:27"},"nodeType":"YulExpressionStatement","src":"8243:18:27"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8235:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"8238:1:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8232:2:27"},"nodeType":"YulFunctionCall","src":"8232:8:27"},"nodeType":"YulIf","src":"8229:34:27"},{"nodeType":"YulAssignment","src":"8272:17:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8284:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"8287:1:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8280:3:27"},"nodeType":"YulFunctionCall","src":"8280:9:27"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"8272:4:27"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8201:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"8204:1:27","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"8210:4:27","type":""}],"src":"8170:125:27"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n}","id":27,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a257806395d89b411161007157806395d89b411461021f578063a457c2d714610227578063a9059cbb1461023a578063dd62ed3e1461024d578063f2fde38b1461026057600080fd5b806370a08231146101c0578063715018a6146101e957806379cc6790146101f15780638da5cb5b1461020457600080fd5b8063313ce567116100de578063313ce56714610176578063395093511461018557806340c10f191461019857806342966c68146101ad57600080fd5b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461015157806323b872dd14610163575b600080fd5b610118610273565b6040516101259190610b2b565b60405180910390f35b61014161013c366004610b9c565b610305565b6040519015158152602001610125565b6002545b604051908152602001610125565b610141610171366004610bc6565b61031d565b60405160128152602001610125565b610141610193366004610b9c565b610341565b6101ab6101a6366004610b9c565b610363565b005b6101ab6101bb366004610c02565b610379565b6101556101ce366004610c1b565b6001600160a01b031660009081526020819052604090205490565b6101ab610386565b6101ab6101ff366004610b9c565b61039a565b6005546040516001600160a01b039091168152602001610125565b6101186103af565b610141610235366004610b9c565b6103be565b610141610248366004610b9c565b61043e565b61015561025b366004610c3d565b61044c565b6101ab61026e366004610c1b565b610477565b60606003805461028290610c70565b80601f01602080910402602001604051908101604052809291908181526020018280546102ae90610c70565b80156102fb5780601f106102d0576101008083540402835291602001916102fb565b820191906000526020600020905b8154815290600101906020018083116102de57829003601f168201915b5050505050905090565b6000336103138185856104ed565b5060019392505050565b60003361032b858285610612565b61033685858561068c565b506001949350505050565b600033610313818585610354838361044c565b61035e9190610cc0565b6104ed565b61036b61085a565b61037582826108b4565b5050565b6103833382610993565b50565b61038e61085a565b6103986000610ad9565b565b6103a5823383610612565b6103758282610993565b60606004805461028290610c70565b600033816103cc828661044c565b9050838110156104315760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61033682868684036104ed565b60003361031381858561068c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61047f61085a565b6001600160a01b0381166104e45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610428565b61038381610ad9565b6001600160a01b03831661054f5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610428565b6001600160a01b0382166105b05760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610428565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061061e848461044c565b9050600019811461068657818110156106795760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610428565b61068684848484036104ed565b50505050565b6001600160a01b0383166106f05760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610428565b6001600160a01b0382166107525760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610428565b6001600160a01b038316600090815260208190526040902054818110156107ca5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610428565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610801908490610cc0565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161084d91815260200190565b60405180910390a3610686565b6005546001600160a01b031633146103985760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610428565b6001600160a01b03821661090a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610428565b806002600082825461091c9190610cc0565b90915550506001600160a01b03821660009081526020819052604081208054839290610949908490610cc0565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0382166109f35760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610428565b6001600160a01b03821660009081526020819052604090205481811015610a675760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610428565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610a96908490610cd8565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610605565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b81811015610b5857858101830151858201604001528201610b3c565b81811115610b6a576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610b9757600080fd5b919050565b60008060408385031215610baf57600080fd5b610bb883610b80565b946020939093013593505050565b600080600060608486031215610bdb57600080fd5b610be484610b80565b9250610bf260208501610b80565b9150604084013590509250925092565b600060208284031215610c1457600080fd5b5035919050565b600060208284031215610c2d57600080fd5b610c3682610b80565b9392505050565b60008060408385031215610c5057600080fd5b610c5983610b80565b9150610c6760208401610b80565b90509250929050565b600181811c90821680610c8457607f821691505b602082108103610ca457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610cd357610cd3610caa565b500190565b600082821015610cea57610cea610caa565b50039056fea2646970667358221220504dfffe438f476d69d4aa96a3f4178de0d5a603b8fde8dcf73bd0e58a6742f264736f6c634300080f0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x163 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x273 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH2 0x13C CALLDATASIZE PUSH1 0x4 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x305 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH2 0x141 PUSH2 0x171 CALLDATASIZE PUSH1 0x4 PUSH2 0xBC6 JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH2 0x141 PUSH2 0x193 CALLDATASIZE PUSH1 0x4 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x341 JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x1A6 CALLDATASIZE PUSH1 0x4 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x363 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AB PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0xC02 JUMP JUMPDEST PUSH2 0x379 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x1CE CALLDATASIZE PUSH1 0x4 PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x386 JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x1FF CALLDATASIZE PUSH1 0x4 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x39A JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x3AF JUMP JUMPDEST PUSH2 0x141 PUSH2 0x235 CALLDATASIZE PUSH1 0x4 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x3BE JUMP JUMPDEST PUSH2 0x141 PUSH2 0x248 CALLDATASIZE PUSH1 0x4 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x43E JUMP JUMPDEST PUSH2 0x155 PUSH2 0x25B CALLDATASIZE PUSH1 0x4 PUSH2 0xC3D JUMP JUMPDEST PUSH2 0x44C JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0xC1B JUMP JUMPDEST PUSH2 0x477 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x282 SWAP1 PUSH2 0xC70 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2AE SWAP1 PUSH2 0xC70 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x313 DUP2 DUP6 DUP6 PUSH2 0x4ED JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x32B DUP6 DUP3 DUP6 PUSH2 0x612 JUMP JUMPDEST PUSH2 0x336 DUP6 DUP6 DUP6 PUSH2 0x68C JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x313 DUP2 DUP6 DUP6 PUSH2 0x354 DUP4 DUP4 PUSH2 0x44C JUMP JUMPDEST PUSH2 0x35E SWAP2 SWAP1 PUSH2 0xCC0 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH2 0x36B PUSH2 0x85A JUMP JUMPDEST PUSH2 0x375 DUP3 DUP3 PUSH2 0x8B4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x383 CALLER DUP3 PUSH2 0x993 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x38E PUSH2 0x85A JUMP JUMPDEST PUSH2 0x398 PUSH1 0x0 PUSH2 0xAD9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3A5 DUP3 CALLER DUP4 PUSH2 0x612 JUMP JUMPDEST PUSH2 0x375 DUP3 DUP3 PUSH2 0x993 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x282 SWAP1 PUSH2 0xC70 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x3CC DUP3 DUP7 PUSH2 0x44C JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x431 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x336 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x4ED JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x313 DUP2 DUP6 DUP6 PUSH2 0x68C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x47F PUSH2 0x85A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x428 JUMP JUMPDEST PUSH2 0x383 DUP2 PUSH2 0xAD9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x428 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x428 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x61E DUP5 DUP5 PUSH2 0x44C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x686 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x679 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x428 JUMP JUMPDEST PUSH2 0x686 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x4ED JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x428 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x752 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x428 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x7CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x428 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x801 SWAP1 DUP5 SWAP1 PUSH2 0xCC0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x84D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x686 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x398 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x428 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x90A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x428 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x91C SWAP2 SWAP1 PUSH2 0xCC0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x949 SWAP1 DUP5 SWAP1 PUSH2 0xCC0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x428 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xA67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x428 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xA96 SWAP1 DUP5 SWAP1 PUSH2 0xCD8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0x605 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB58 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xB3C JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xB6A JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBB8 DUP4 PUSH2 0xB80 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBE4 DUP5 PUSH2 0xB80 JUMP JUMPDEST SWAP3 POP PUSH2 0xBF2 PUSH1 0x20 DUP6 ADD PUSH2 0xB80 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC36 DUP3 PUSH2 0xB80 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC59 DUP4 PUSH2 0xB80 JUMP JUMPDEST SWAP2 POP PUSH2 0xC67 PUSH1 0x20 DUP5 ADD PUSH2 0xB80 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC84 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xCA4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xCD3 JUMPI PUSH2 0xCD3 PUSH2 0xCAA JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xCEA JUMPI PUSH2 0xCEA PUSH2 0xCAA JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 POP 0x4D SELFDESTRUCT INVALID NUMBER DUP16 SELFBALANCE PUSH14 0x69D4AA96A3F4178DE0D5A603B8FD 0xE8 0xDC 0xF7 EXTCODESIZE 0xD0 0xE5 DUP11 PUSH8 0x42F264736F6C6343 STOP ADDMOD 0xF STOP CALLER ","sourceMap":"242:257:25:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:27;;1211:22;1193:41;;1181:2;1166:18;4433:197:5;1053:187:27;3244:106:5;3331:12;;3244:106;;;1391:25:27;;;1379:2;1364:18;3244:106:5;1245:177:27;5192:286:5;;;;;;:::i;:::-;;:::i;3093:91::-;;;3175:2;1902:36:27;;1890:2;1875:18;3093:91:5;1760:184:27;5873:234:5;;;;;;:::i;:::-;;:::i;404:93:25:-;;;;;;:::i;:::-;;:::i;:::-;;578:89:7;;;;;;:::i;:::-;;:::i;3408:125:5:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:5;3482:7;3508:18;;;;;;;;;;;;3408:125;1831:101:4;;;:::i;973:161:7:-;;;;;;:::i;:::-;;:::i;1201:85:4:-;1273:6;;1201:85;;-1:-1:-1;;;;;1273:6:4;;;2471:51:27;;2459:2;2444:18;1201:85:4;2325:203:27;2367:102:5;;;:::i;6594:427::-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;3976:149::-;;;;;;:::i;:::-;;:::i;2081:198:4:-;;;;;;:::i;:::-;;:::i;2156:98:5:-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:12;4570:32:5;719:10:12;4586:7:5;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:5;;4433:197;-1:-1:-1;;;4433:197:5:o;5192:286::-;5319:4;719:10:12;5375:38:5;5391:4;719:10:12;5406:6:5;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:5;;5192:286;-1:-1:-1;;;;5192:286:5:o;5873:234::-;5961:4;719:10:12;6015:64:5;719:10:12;6031:7:5;6068:10;6040:25;719:10:12;6031:7:5;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;404:93:25:-;1094:13:4;:11;:13::i;:::-;473:17:25::1;479:2;483:6;473:5;:17::i;:::-;404:93:::0;;:::o;578:89:7:-;633:27;719:10:12;653:6:7;633:5;:27::i;:::-;578:89;:::o;1831:101:4:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;973:161:7:-;1049:46;1065:7;719:10:12;1088:6:7;1049:15;:46::i;:::-;1105:22;1111:7;1120:6;1105:5;:22::i;2367:102:5:-;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;6687:4;719:10:12;6687:4:5;6768:25;719:10:12;6785:7:5;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:5;;3650:2:27;6803:85:5;;;3632:21:27;3689:2;3669:18;;;3662:30;3728:34;3708:18;;;3701:62;-1:-1:-1;;;3779:18:27;;;3772:35;3824:19;;6803:85:5;;;;;;;;;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;3729:189::-;3808:4;719:10:12;3862:28:5;719:10:12;3879:2:5;3883:6;3862:9;:28::i;3976:149::-;-1:-1:-1;;;;;4091:18:5;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149::o;2081:198:4:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:4;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:4;;4056:2:27;2161:73:4::1;::::0;::::1;4038:21:27::0;4095:2;4075:18;;;4068:30;4134:34;4114:18;;;4107:62;-1:-1:-1;;;4185:18:27;;;4178:36;4231:19;;2161:73:4::1;3854:402:27::0;2161:73:4::1;2244:28;2263:8;2244:18;:28::i;10847:370:5:-:0;-1:-1:-1;;;;;10978:19:5;;10970:68;;;;-1:-1:-1;;;10970:68:5;;4463:2:27;10970:68:5;;;4445:21:27;4502:2;4482:18;;;4475:30;4541:34;4521:18;;;4514:62;-1:-1:-1;;;4592:18:27;;;4585:34;4636:19;;10970:68:5;4261:400:27;10970:68:5;-1:-1:-1;;;;;11056:21:5;;11048:68;;;;-1:-1:-1;;;11048:68:5;;4868:2:27;11048:68:5;;;4850:21:27;4907:2;4887:18;;;4880:30;4946:34;4926:18;;;4919:62;-1:-1:-1;;;4997:18:27;;;4990:32;5039:19;;11048:68:5;4666:398:27;11048:68:5;-1:-1:-1;;;;;11127:18:5;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11178:32;;1391:25:27;;;11178:32:5;;1364:18:27;11178:32:5;;;;;;;;10847:370;;;:::o;11498:441::-;11628:24;11655:25;11665:5;11672:7;11655:9;:25::i;:::-;11628:52;;-1:-1:-1;;11694:16:5;:37;11690:243;;11775:6;11755:16;:26;;11747:68;;;;-1:-1:-1;;;11747:68:5;;5271:2:27;11747:68:5;;;5253:21:27;5310:2;5290:18;;;5283:30;5349:31;5329:18;;;5322:59;5398:18;;11747:68:5;5069:353:27;11747:68:5;11857:51;11866:5;11873:7;11901:6;11882:16;:25;11857:8;:51::i;:::-;11618:321;11498:441;;;:::o;7475:651::-;-1:-1:-1;;;;;7601:18:5;;7593:68;;;;-1:-1:-1;;;7593:68:5;;5629:2:27;7593:68:5;;;5611:21:27;5668:2;5648:18;;;5641:30;5707:34;5687:18;;;5680:62;-1:-1:-1;;;5758:18:27;;;5751:35;5803:19;;7593:68:5;5427:401:27;7593:68:5;-1:-1:-1;;;;;7679:16:5;;7671:64;;;;-1:-1:-1;;;7671:64:5;;6035:2:27;7671:64:5;;;6017:21:27;6074:2;6054:18;;;6047:30;6113:34;6093:18;;;6086:62;-1:-1:-1;;;6164:18:27;;;6157:33;6207:19;;7671:64:5;5833:399:27;7671:64:5;-1:-1:-1;;;;;7817:15:5;;7795:19;7817:15;;;;;;;;;;;7850:21;;;;7842:72;;;;-1:-1:-1;;;7842:72:5;;6439:2:27;7842:72:5;;;6421:21:27;6478:2;6458:18;;;6451:30;6517:34;6497:18;;;6490:62;-1:-1:-1;;;6568:18:27;;;6561:36;6614:19;;7842:72:5;6237:402:27;7842:72:5;-1:-1:-1;;;;;7948:15:5;;;:9;:15;;;;;;;;;;;7966:20;;;7948:38;;8006:13;;;;;;;;:23;;7980:6;;7948:9;8006:23;;7980:6;;8006:23;:::i;:::-;;;;;;;;8060:2;-1:-1:-1;;;;;8045:26:5;8054:4;-1:-1:-1;;;;;8045:26:5;;8064:6;8045:26;;;;1391:25:27;;1379:2;1364:18;;1245:177;8045:26:5;;;;;;;;8082:37;9848:576;1359:130:4;1273:6;;-1:-1:-1;;;;;1273:6:4;719:10:12;1422:23:4;1414:68;;;;-1:-1:-1;;;1414:68:4;;6846:2:27;1414:68:4;;;6828:21:27;;;6865:18;;;6858:30;6924:34;6904:18;;;6897:62;6976:18;;1414:68:4;6644:356:27;9139:389:5;-1:-1:-1;;;;;9222:21:5;;9214:65;;;;-1:-1:-1;;;9214:65:5;;7207:2:27;9214:65:5;;;7189:21:27;7246:2;7226:18;;;7219:30;7285:33;7265:18;;;7258:61;7336:18;;9214:65:5;7005:355:27;9214:65:5;9366:6;9350:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9382:18:5;;:9;:18;;;;;;;;;;:28;;9404:6;;9382:9;:28;;9404:6;;9382:28;:::i;:::-;;;;-1:-1:-1;;9425:37:5;;1391:25:27;;;-1:-1:-1;;;;;9425:37:5;;;9442:1;;9425:37;;1379:2:27;1364:18;9425:37:5;;;;;;;404:93:25;;:::o;9848:576:5:-;-1:-1:-1;;;;;9931:21:5;;9923:67;;;;-1:-1:-1;;;9923:67:5;;7567:2:27;9923:67:5;;;7549:21:27;7606:2;7586:18;;;7579:30;7645:34;7625:18;;;7618:62;-1:-1:-1;;;7696:18:27;;;7689:31;7737:19;;9923:67:5;7365:397:27;9923:67:5;-1:-1:-1;;;;;10086:18:5;;10061:22;10086:18;;;;;;;;;;;10122:24;;;;10114:71;;;;-1:-1:-1;;;10114:71:5;;7969:2:27;10114:71:5;;;7951:21:27;8008:2;7988:18;;;7981:30;8047:34;8027:18;;;8020:62;-1:-1:-1;;;8098:18:27;;;8091:32;8140:19;;10114:71:5;7767:398:27;10114:71:5;-1:-1:-1;;;;;10219:18:5;;:9;:18;;;;;;;;;;10240:23;;;10219:44;;10283:12;:22;;10257:6;;10219:9;10283:22;;10257:6;;10283:22;:::i;:::-;;;;-1:-1:-1;;10321:37:5;;1391:25:27;;;10347:1:5;;-1:-1:-1;;;;;10321:37:5;;;;;1379:2:27;1364:18;10321:37:5;1245:177:27;2433:187:4;2525:6;;;-1:-1:-1;;;;;2541:17:4;;;-1:-1:-1;;;;;;2541:17:4;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;14:597:27:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:27;574:15;-1:-1:-1;;570:29:27;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:27:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:27;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:27:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:180::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;-1:-1:-1;2100:23:27;;1949:180;-1:-1:-1;1949:180:27:o;2134:186::-;2193:6;2246:2;2234:9;2225:7;2221:23;2217:32;2214:52;;;2262:1;2259;2252:12;2214:52;2285:29;2304:9;2285:29;:::i;:::-;2275:39;2134:186;-1:-1:-1;;;2134:186:27:o;2533:260::-;2601:6;2609;2662:2;2650:9;2641:7;2637:23;2633:32;2630:52;;;2678:1;2675;2668:12;2630:52;2701:29;2720:9;2701:29;:::i;:::-;2691:39;;2749:38;2783:2;2772:9;2768:18;2749:38;:::i;:::-;2739:48;;2533:260;;;;;:::o;2798:380::-;2877:1;2873:12;;;;2920;;;2941:61;;2995:4;2987:6;2983:17;2973:27;;2941:61;3048:2;3040:6;3037:14;3017:18;3014:38;3011:161;;3094:10;3089:3;3085:20;3082:1;3075:31;3129:4;3126:1;3119:15;3157:4;3154:1;3147:15;3011:161;;2798:380;;;:::o;3183:127::-;3244:10;3239:3;3235:20;3232:1;3225:31;3275:4;3272:1;3265:15;3299:4;3296:1;3289:15;3315:128;3355:3;3386:1;3382:6;3379:1;3376:13;3373:39;;;3392:18;;:::i;:::-;-1:-1:-1;3428:9:27;;3315:128::o;8170:125::-;8210:4;8238:1;8235;8232:8;8229:34;;;8243:18;;:::i;:::-;-1:-1:-1;8280:9:27;;8170:125::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","mint(address,uint256)":"40c10f19","name()":"06fdde03","owner()":"8da5cb5b","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BLBIO/ERC20Test.sol\":\"ERC20Test\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x35cee07c3e7af2a8519a396e15387ca497061bb84a72200c65b0a12a3126c461\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68f1d6ba548c796f8f31e0a445175f8a8d486891a59010e13b4f9b37cc5d50c2\",\"dweb:/ipfs/QmZRjUcHU8RoarhfrqTUeUMye2yFgpoJSBPDHeNcm9YXtk\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/BLBIO/ERC20Test.sol\":{\"keccak256\":\"0x8ee6cbb9d915a8ce078c11e4443bcc99b7586bbb86412bce6a163475a1a23b6e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f45588d4dfa8001c35ea3eb846f2b087756bad16ea9c4b378ee6ea3a99194a91\",\"dweb:/ipfs/QmdzJ15NAeCbGco7Uh1Mraeh37nVm5M1vrgvP6d9GW8B8t\"]}},\"version\":1}"}},"contracts/StakePool/LPToken.sol":{"LPToken":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burnFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_5244":{"entryPoint":null,"id":5244,"parameterSlots":0,"returnSlots":0},"@_566":{"entryPoint":null,"id":566,"parameterSlots":0,"returnSlots":0},"@_700":{"entryPoint":null,"id":700,"parameterSlots":2,"returnSlots":0},"@_afterTokenTransfer_1311":{"entryPoint":null,"id":1311,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1300":{"entryPoint":508,"id":1300,"parameterSlots":3,"returnSlots":0},"@_mint_1129":{"entryPoint":276,"id":1129,"parameterSlots":2,"returnSlots":0},"@_msgSender_1744":{"entryPoint":190,"id":1744,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_654":{"entryPoint":194,"id":654,"parameterSlots":1,"returnSlots":0},"@decimals_730":{"entryPoint":null,"id":730,"parameterSlots":0,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_dataslot_string_storage":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":1216,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_helper":{"entryPoint":903,"id":null,"parameterSlots":2,"returnSlots":2},"checked_exp_t_uint256_t_uint8":{"entryPoint":1158,"id":null,"parameterSlots":2,"returnSlots":1},"checked_exp_unsigned":{"entryPoint":976,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":1182,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_string_storage":{"entryPoint":595,"id":null,"parameterSlots":3,"returnSlots":0},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":677,"id":null,"parameterSlots":2,"returnSlots":0},"extract_byte_array_length":{"entryPoint":535,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x11":{"entryPoint":881,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":513,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:5095:27","statements":[{"nodeType":"YulBlock","src":"6:3:27","statements":[]},{"body":{"nodeType":"YulBlock","src":"46:95:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"63:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"70:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"75:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"66:3:27"},"nodeType":"YulFunctionCall","src":"66:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"56:6:27"},"nodeType":"YulFunctionCall","src":"56:31:27"},"nodeType":"YulExpressionStatement","src":"56:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"103:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"106:4:27","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"96:6:27"},"nodeType":"YulFunctionCall","src":"96:15:27"},"nodeType":"YulExpressionStatement","src":"96:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"127:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"130:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"120:6:27"},"nodeType":"YulFunctionCall","src":"120:15:27"},"nodeType":"YulExpressionStatement","src":"120:15:27"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"14:127:27"},{"body":{"nodeType":"YulBlock","src":"201:325:27","statements":[{"nodeType":"YulAssignment","src":"211:22:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"225:1:27","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"228:4:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"221:3:27"},"nodeType":"YulFunctionCall","src":"221:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"211:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"242:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"272:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"278:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"268:3:27"},"nodeType":"YulFunctionCall","src":"268:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"246:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"319:31:27","statements":[{"nodeType":"YulAssignment","src":"321:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"335:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"343:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"331:3:27"},"nodeType":"YulFunctionCall","src":"331:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"321:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"299:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"292:6:27"},"nodeType":"YulFunctionCall","src":"292:26:27"},"nodeType":"YulIf","src":"289:61:27"},{"body":{"nodeType":"YulBlock","src":"409:111:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"430:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"437:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"442:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"433:3:27"},"nodeType":"YulFunctionCall","src":"433:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"423:6:27"},"nodeType":"YulFunctionCall","src":"423:31:27"},"nodeType":"YulExpressionStatement","src":"423:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"474:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"477:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"467:6:27"},"nodeType":"YulFunctionCall","src":"467:15:27"},"nodeType":"YulExpressionStatement","src":"467:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"502:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"505:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"495:6:27"},"nodeType":"YulFunctionCall","src":"495:15:27"},"nodeType":"YulExpressionStatement","src":"495:15:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"365:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"388:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"396:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"385:2:27"},"nodeType":"YulFunctionCall","src":"385:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"362:2:27"},"nodeType":"YulFunctionCall","src":"362:38:27"},"nodeType":"YulIf","src":"359:161:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"181:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"190:6:27","type":""}],"src":"146:380:27"},{"body":{"nodeType":"YulBlock","src":"587:65:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"604:1:27","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"607:3:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"597:6:27"},"nodeType":"YulFunctionCall","src":"597:14:27"},"nodeType":"YulExpressionStatement","src":"597:14:27"},{"nodeType":"YulAssignment","src":"620:26:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"638:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"641:4:27","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"628:9:27"},"nodeType":"YulFunctionCall","src":"628:18:27"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"620:4:27"}]}]},"name":"array_dataslot_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"570:3:27","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"578:4:27","type":""}],"src":"531:121:27"},{"body":{"nodeType":"YulBlock","src":"738:464:27","statements":[{"body":{"nodeType":"YulBlock","src":"771:425:27","statements":[{"nodeType":"YulVariableDeclaration","src":"785:11:27","value":{"kind":"number","nodeType":"YulLiteral","src":"795:1:27","type":"","value":"0"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"789:2:27","type":""}]},{"expression":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"816:2:27"},{"name":"array","nodeType":"YulIdentifier","src":"820:5:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"809:6:27"},"nodeType":"YulFunctionCall","src":"809:17:27"},"nodeType":"YulExpressionStatement","src":"809:17:27"},{"nodeType":"YulVariableDeclaration","src":"839:31:27","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"861:2:27"},{"kind":"number","nodeType":"YulLiteral","src":"865:4:27","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"851:9:27"},"nodeType":"YulFunctionCall","src":"851:19:27"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"843:4:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"883:57:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"906:4:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"916:1:27","type":"","value":"5"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"923:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"935:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"919:3:27"},"nodeType":"YulFunctionCall","src":"919:19:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"912:3:27"},"nodeType":"YulFunctionCall","src":"912:27:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"902:3:27"},"nodeType":"YulFunctionCall","src":"902:38:27"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"887:11:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"977:23:27","statements":[{"nodeType":"YulAssignment","src":"979:19:27","value":{"name":"data","nodeType":"YulIdentifier","src":"994:4:27"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"979:11:27"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"959:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"971:4:27","type":"","value":"0x20"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"956:2:27"},"nodeType":"YulFunctionCall","src":"956:20:27"},"nodeType":"YulIf","src":"953:47:27"},{"nodeType":"YulVariableDeclaration","src":"1013:41:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1027:4:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1037:1:27","type":"","value":"5"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"1044:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"1049:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1040:3:27"},"nodeType":"YulFunctionCall","src":"1040:12:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1033:3:27"},"nodeType":"YulFunctionCall","src":"1033:20:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1023:3:27"},"nodeType":"YulFunctionCall","src":"1023:31:27"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"1017:2:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1067:24:27","value":{"name":"deleteStart","nodeType":"YulIdentifier","src":"1080:11:27"},"variables":[{"name":"start","nodeType":"YulTypedName","src":"1071:5:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1165:21:27","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1174:5:27"},{"name":"_1","nodeType":"YulIdentifier","src":"1181:2:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"1167:6:27"},"nodeType":"YulFunctionCall","src":"1167:17:27"},"nodeType":"YulExpressionStatement","src":"1167:17:27"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1115:5:27"},{"name":"_2","nodeType":"YulIdentifier","src":"1122:2:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1112:2:27"},"nodeType":"YulFunctionCall","src":"1112:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1126:26:27","statements":[{"nodeType":"YulAssignment","src":"1128:22:27","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"1141:5:27"},{"kind":"number","nodeType":"YulLiteral","src":"1148:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1137:3:27"},"nodeType":"YulFunctionCall","src":"1137:13:27"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"1128:5:27"}]}]},"pre":{"nodeType":"YulBlock","src":"1108:3:27","statements":[]},"src":"1104:82:27"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"754:3:27"},{"kind":"number","nodeType":"YulLiteral","src":"759:2:27","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"751:2:27"},"nodeType":"YulFunctionCall","src":"751:11:27"},"nodeType":"YulIf","src":"748:448:27"}]},"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"710:5:27","type":""},{"name":"len","nodeType":"YulTypedName","src":"717:3:27","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"722:10:27","type":""}],"src":"657:545:27"},{"body":{"nodeType":"YulBlock","src":"1292:81:27","statements":[{"nodeType":"YulAssignment","src":"1302:65:27","value":{"arguments":[{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"1317:4:27"},{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1335:1:27","type":"","value":"3"},{"name":"len","nodeType":"YulIdentifier","src":"1338:3:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1331:3:27"},"nodeType":"YulFunctionCall","src":"1331:11:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1348:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1344:3:27"},"nodeType":"YulFunctionCall","src":"1344:6:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"1327:3:27"},"nodeType":"YulFunctionCall","src":"1327:24:27"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1323:3:27"},"nodeType":"YulFunctionCall","src":"1323:29:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1313:3:27"},"nodeType":"YulFunctionCall","src":"1313:40:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1359:1:27","type":"","value":"1"},{"name":"len","nodeType":"YulIdentifier","src":"1362:3:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1355:3:27"},"nodeType":"YulFunctionCall","src":"1355:11:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1310:2:27"},"nodeType":"YulFunctionCall","src":"1310:57:27"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"1302:4:27"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"1269:4:27","type":""},{"name":"len","nodeType":"YulTypedName","src":"1275:3:27","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"1283:4:27","type":""}],"src":"1207:166:27"},{"body":{"nodeType":"YulBlock","src":"1474:1256:27","statements":[{"nodeType":"YulVariableDeclaration","src":"1484:24:27","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1504:3:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1498:5:27"},"nodeType":"YulFunctionCall","src":"1498:10:27"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"1488:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"1551:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1553:16:27"},"nodeType":"YulFunctionCall","src":"1553:18:27"},"nodeType":"YulExpressionStatement","src":"1553:18:27"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1523:6:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1539:2:27","type":"","value":"64"},{"kind":"number","nodeType":"YulLiteral","src":"1543:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1535:3:27"},"nodeType":"YulFunctionCall","src":"1535:10:27"},{"kind":"number","nodeType":"YulLiteral","src":"1547:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1531:3:27"},"nodeType":"YulFunctionCall","src":"1531:18:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1520:2:27"},"nodeType":"YulFunctionCall","src":"1520:30:27"},"nodeType":"YulIf","src":"1517:56:27"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1626:4:27"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1664:4:27"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"1658:5:27"},"nodeType":"YulFunctionCall","src":"1658:11:27"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"1632:25:27"},"nodeType":"YulFunctionCall","src":"1632:38:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"1672:6:27"}],"functionName":{"name":"clean_up_bytearray_end_slots_string_storage","nodeType":"YulIdentifier","src":"1582:43:27"},"nodeType":"YulFunctionCall","src":"1582:97:27"},"nodeType":"YulExpressionStatement","src":"1582:97:27"},{"nodeType":"YulVariableDeclaration","src":"1688:18:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1705:1:27","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"1692:9:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1715:23:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1734:4:27","type":"","value":"0x20"},"variables":[{"name":"srcOffset_1","nodeType":"YulTypedName","src":"1719:11:27","type":""}]},{"nodeType":"YulAssignment","src":"1747:24:27","value":{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"1760:11:27"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"1747:9:27"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"1817:656:27","statements":[{"nodeType":"YulVariableDeclaration","src":"1831:35:27","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1850:6:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1862:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"1858:3:27"},"nodeType":"YulFunctionCall","src":"1858:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1846:3:27"},"nodeType":"YulFunctionCall","src":"1846:20:27"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"1835:7:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1879:49:27","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"1923:4:27"}],"functionName":{"name":"array_dataslot_string_storage","nodeType":"YulIdentifier","src":"1893:29:27"},"nodeType":"YulFunctionCall","src":"1893:35:27"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"1883:6:27","type":""}]},{"nodeType":"YulVariableDeclaration","src":"1941:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1950:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1945:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"2028:172:27","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2053:6:27"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2071:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2076:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2067:3:27"},"nodeType":"YulFunctionCall","src":"2067:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2061:5:27"},"nodeType":"YulFunctionCall","src":"2061:26:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2046:6:27"},"nodeType":"YulFunctionCall","src":"2046:42:27"},"nodeType":"YulExpressionStatement","src":"2046:42:27"},{"nodeType":"YulAssignment","src":"2105:24:27","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2119:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2127:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2115:3:27"},"nodeType":"YulFunctionCall","src":"2115:14:27"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2105:6:27"}]},{"nodeType":"YulAssignment","src":"2146:40:27","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2163:9:27"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2174:11:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2159:3:27"},"nodeType":"YulFunctionCall","src":"2159:27:27"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"2146:9:27"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1975:1:27"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"1978:7:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1972:2:27"},"nodeType":"YulFunctionCall","src":"1972:14:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1987:28:27","statements":[{"nodeType":"YulAssignment","src":"1989:24:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1998:1:27"},{"name":"srcOffset_1","nodeType":"YulIdentifier","src":"2001:11:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1994:3:27"},"nodeType":"YulFunctionCall","src":"1994:19:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1989:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"1968:3:27","statements":[]},"src":"1964:236:27"},{"body":{"nodeType":"YulBlock","src":"2248:166:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2266:43:27","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2293:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2298:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2289:3:27"},"nodeType":"YulFunctionCall","src":"2289:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2283:5:27"},"nodeType":"YulFunctionCall","src":"2283:26:27"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"2270:9:27","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"2333:6:27"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"2345:9:27"},{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2372:1:27","type":"","value":"3"},{"name":"newLen","nodeType":"YulIdentifier","src":"2375:6:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2368:3:27"},"nodeType":"YulFunctionCall","src":"2368:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"2384:3:27","type":"","value":"248"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2364:3:27"},"nodeType":"YulFunctionCall","src":"2364:24:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2394:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2390:3:27"},"nodeType":"YulFunctionCall","src":"2390:6:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2360:3:27"},"nodeType":"YulFunctionCall","src":"2360:37:27"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2356:3:27"},"nodeType":"YulFunctionCall","src":"2356:42:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2341:3:27"},"nodeType":"YulFunctionCall","src":"2341:58:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2326:6:27"},"nodeType":"YulFunctionCall","src":"2326:74:27"},"nodeType":"YulExpressionStatement","src":"2326:74:27"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"2219:7:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"2228:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2216:2:27"},"nodeType":"YulFunctionCall","src":"2216:19:27"},"nodeType":"YulIf","src":"2213:201:27"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2434:4:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2448:1:27","type":"","value":"1"},{"name":"newLen","nodeType":"YulIdentifier","src":"2451:6:27"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2444:3:27"},"nodeType":"YulFunctionCall","src":"2444:14:27"},{"kind":"number","nodeType":"YulLiteral","src":"2460:1:27","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2440:3:27"},"nodeType":"YulFunctionCall","src":"2440:22:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2427:6:27"},"nodeType":"YulFunctionCall","src":"2427:36:27"},"nodeType":"YulExpressionStatement","src":"2427:36:27"}]},"nodeType":"YulCase","src":"1810:663:27","value":{"kind":"number","nodeType":"YulLiteral","src":"1815:1:27","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"2490:234:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2504:14:27","value":{"kind":"number","nodeType":"YulLiteral","src":"2517:1:27","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2508:5:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"2553:67:27","statements":[{"nodeType":"YulAssignment","src":"2571:35:27","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2590:3:27"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"2595:9:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2586:3:27"},"nodeType":"YulFunctionCall","src":"2586:19:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2580:5:27"},"nodeType":"YulFunctionCall","src":"2580:26:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2571:5:27"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"2534:6:27"},"nodeType":"YulIf","src":"2531:89:27"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"2640:4:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2699:5:27"},{"name":"newLen","nodeType":"YulIdentifier","src":"2706:6:27"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"2646:52:27"},"nodeType":"YulFunctionCall","src":"2646:67:27"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"2633:6:27"},"nodeType":"YulFunctionCall","src":"2633:81:27"},"nodeType":"YulExpressionStatement","src":"2633:81:27"}]},"nodeType":"YulCase","src":"2482:242:27","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"1790:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1798:2:27","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1787:2:27"},"nodeType":"YulFunctionCall","src":"1787:14:27"},"nodeType":"YulSwitch","src":"1780:944:27"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"1459:4:27","type":""},{"name":"src","nodeType":"YulTypedName","src":"1465:3:27","type":""}],"src":"1378:1352:27"},{"body":{"nodeType":"YulBlock","src":"2767:95:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2784:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2791:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"2796:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2787:3:27"},"nodeType":"YulFunctionCall","src":"2787:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2777:6:27"},"nodeType":"YulFunctionCall","src":"2777:31:27"},"nodeType":"YulExpressionStatement","src":"2777:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2824:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"2827:4:27","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2817:6:27"},"nodeType":"YulFunctionCall","src":"2817:15:27"},"nodeType":"YulExpressionStatement","src":"2817:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2848:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2851:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2841:6:27"},"nodeType":"YulFunctionCall","src":"2841:15:27"},"nodeType":"YulExpressionStatement","src":"2841:15:27"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"2735:127:27"},{"body":{"nodeType":"YulBlock","src":"2931:358:27","statements":[{"nodeType":"YulVariableDeclaration","src":"2941:16:27","value":{"kind":"number","nodeType":"YulLiteral","src":"2956:1:27","type":"","value":"1"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"2945:7:27","type":""}]},{"nodeType":"YulAssignment","src":"2966:16:27","value":{"name":"power_1","nodeType":"YulIdentifier","src":"2975:7:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"2966:5:27"}]},{"nodeType":"YulAssignment","src":"2991:13:27","value":{"name":"_base","nodeType":"YulIdentifier","src":"2999:5:27"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"2991:4:27"}]},{"body":{"nodeType":"YulBlock","src":"3055:228:27","statements":[{"body":{"nodeType":"YulBlock","src":"3100:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3102:16:27"},"nodeType":"YulFunctionCall","src":"3102:18:27"},"nodeType":"YulExpressionStatement","src":"3102:18:27"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"3075:4:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3089:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3085:3:27"},"nodeType":"YulFunctionCall","src":"3085:6:27"},{"name":"base","nodeType":"YulIdentifier","src":"3093:4:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3081:3:27"},"nodeType":"YulFunctionCall","src":"3081:17:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3072:2:27"},"nodeType":"YulFunctionCall","src":"3072:27:27"},"nodeType":"YulIf","src":"3069:53:27"},{"body":{"nodeType":"YulBlock","src":"3161:29:27","statements":[{"nodeType":"YulAssignment","src":"3163:25:27","value":{"arguments":[{"name":"power","nodeType":"YulIdentifier","src":"3176:5:27"},{"name":"base","nodeType":"YulIdentifier","src":"3183:4:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3172:3:27"},"nodeType":"YulFunctionCall","src":"3172:16:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"3163:5:27"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"3142:8:27"},{"name":"power_1","nodeType":"YulIdentifier","src":"3152:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3138:3:27"},"nodeType":"YulFunctionCall","src":"3138:22:27"},"nodeType":"YulIf","src":"3135:55:27"},{"nodeType":"YulAssignment","src":"3203:23:27","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"3215:4:27"},{"name":"base","nodeType":"YulIdentifier","src":"3221:4:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"3211:3:27"},"nodeType":"YulFunctionCall","src":"3211:15:27"},"variableNames":[{"name":"base","nodeType":"YulIdentifier","src":"3203:4:27"}]},{"nodeType":"YulAssignment","src":"3239:34:27","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"3255:7:27"},{"name":"exponent","nodeType":"YulIdentifier","src":"3264:8:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3251:3:27"},"nodeType":"YulFunctionCall","src":"3251:22:27"},"variableNames":[{"name":"exponent","nodeType":"YulIdentifier","src":"3239:8:27"}]}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"3024:8:27"},{"name":"power_1","nodeType":"YulIdentifier","src":"3034:7:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3021:2:27"},"nodeType":"YulFunctionCall","src":"3021:21:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"3043:3:27","statements":[]},"pre":{"nodeType":"YulBlock","src":"3017:3:27","statements":[]},"src":"3013:270:27"}]},"name":"checked_exp_helper","nodeType":"YulFunctionDefinition","parameters":[{"name":"_base","nodeType":"YulTypedName","src":"2895:5:27","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"2902:8:27","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"2915:5:27","type":""},{"name":"base","nodeType":"YulTypedName","src":"2922:4:27","type":""}],"src":"2867:422:27"},{"body":{"nodeType":"YulBlock","src":"3353:747:27","statements":[{"body":{"nodeType":"YulBlock","src":"3391:52:27","statements":[{"nodeType":"YulAssignment","src":"3405:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"3414:1:27","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"3405:5:27"}]},{"nodeType":"YulLeave","src":"3428:5:27"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"3373:8:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3366:6:27"},"nodeType":"YulFunctionCall","src":"3366:16:27"},"nodeType":"YulIf","src":"3363:80:27"},{"body":{"nodeType":"YulBlock","src":"3476:52:27","statements":[{"nodeType":"YulAssignment","src":"3490:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"3499:1:27","type":"","value":"0"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"3490:5:27"}]},{"nodeType":"YulLeave","src":"3513:5:27"}]},"condition":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"3462:4:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3455:6:27"},"nodeType":"YulFunctionCall","src":"3455:12:27"},"nodeType":"YulIf","src":"3452:76:27"},{"cases":[{"body":{"nodeType":"YulBlock","src":"3564:52:27","statements":[{"nodeType":"YulAssignment","src":"3578:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"3587:1:27","type":"","value":"1"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"3578:5:27"}]},{"nodeType":"YulLeave","src":"3601:5:27"}]},"nodeType":"YulCase","src":"3557:59:27","value":{"kind":"number","nodeType":"YulLiteral","src":"3562:1:27","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"3632:123:27","statements":[{"body":{"nodeType":"YulBlock","src":"3667:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3669:16:27"},"nodeType":"YulFunctionCall","src":"3669:18:27"},"nodeType":"YulExpressionStatement","src":"3669:18:27"}]},"condition":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"3652:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"3662:3:27","type":"","value":"255"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3649:2:27"},"nodeType":"YulFunctionCall","src":"3649:17:27"},"nodeType":"YulIf","src":"3646:43:27"},{"nodeType":"YulAssignment","src":"3702:25:27","value":{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"3715:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"3725:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3711:3:27"},"nodeType":"YulFunctionCall","src":"3711:16:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"3702:5:27"}]},{"nodeType":"YulLeave","src":"3740:5:27"}]},"nodeType":"YulCase","src":"3625:130:27","value":{"kind":"number","nodeType":"YulLiteral","src":"3630:1:27","type":"","value":"2"}}],"expression":{"name":"base","nodeType":"YulIdentifier","src":"3544:4:27"},"nodeType":"YulSwitch","src":"3537:218:27"},{"body":{"nodeType":"YulBlock","src":"3853:70:27","statements":[{"nodeType":"YulAssignment","src":"3867:28:27","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"3880:4:27"},{"name":"exponent","nodeType":"YulIdentifier","src":"3886:8:27"}],"functionName":{"name":"exp","nodeType":"YulIdentifier","src":"3876:3:27"},"nodeType":"YulFunctionCall","src":"3876:19:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"3867:5:27"}]},{"nodeType":"YulLeave","src":"3908:5:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"3777:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"3783:2:27","type":"","value":"11"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3774:2:27"},"nodeType":"YulFunctionCall","src":"3774:12:27"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"3791:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"3801:2:27","type":"","value":"78"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3788:2:27"},"nodeType":"YulFunctionCall","src":"3788:16:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3770:3:27"},"nodeType":"YulFunctionCall","src":"3770:35:27"},{"arguments":[{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"3814:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"3820:3:27","type":"","value":"307"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3811:2:27"},"nodeType":"YulFunctionCall","src":"3811:13:27"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"3829:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"3839:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3826:2:27"},"nodeType":"YulFunctionCall","src":"3826:16:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3807:3:27"},"nodeType":"YulFunctionCall","src":"3807:36:27"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3767:2:27"},"nodeType":"YulFunctionCall","src":"3767:77:27"},"nodeType":"YulIf","src":"3764:159:27"},{"nodeType":"YulVariableDeclaration","src":"3932:57:27","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"3974:4:27"},{"name":"exponent","nodeType":"YulIdentifier","src":"3980:8:27"}],"functionName":{"name":"checked_exp_helper","nodeType":"YulIdentifier","src":"3955:18:27"},"nodeType":"YulFunctionCall","src":"3955:34:27"},"variables":[{"name":"power_1","nodeType":"YulTypedName","src":"3936:7:27","type":""},{"name":"base_1","nodeType":"YulTypedName","src":"3945:6:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"4034:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4036:16:27"},"nodeType":"YulFunctionCall","src":"4036:18:27"},"nodeType":"YulExpressionStatement","src":"4036:18:27"}]},"condition":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"4004:7:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4021:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4017:3:27"},"nodeType":"YulFunctionCall","src":"4017:6:27"},{"name":"base_1","nodeType":"YulIdentifier","src":"4025:6:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4013:3:27"},"nodeType":"YulFunctionCall","src":"4013:19:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4001:2:27"},"nodeType":"YulFunctionCall","src":"4001:32:27"},"nodeType":"YulIf","src":"3998:58:27"},{"nodeType":"YulAssignment","src":"4065:29:27","value":{"arguments":[{"name":"power_1","nodeType":"YulIdentifier","src":"4078:7:27"},{"name":"base_1","nodeType":"YulIdentifier","src":"4087:6:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4074:3:27"},"nodeType":"YulFunctionCall","src":"4074:20:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"4065:5:27"}]}]},"name":"checked_exp_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"3324:4:27","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"3330:8:27","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"3343:5:27","type":""}],"src":"3294:806:27"},{"body":{"nodeType":"YulBlock","src":"4173:72:27","statements":[{"nodeType":"YulAssignment","src":"4183:56:27","value":{"arguments":[{"name":"base","nodeType":"YulIdentifier","src":"4213:4:27"},{"arguments":[{"name":"exponent","nodeType":"YulIdentifier","src":"4223:8:27"},{"kind":"number","nodeType":"YulLiteral","src":"4233:4:27","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4219:3:27"},"nodeType":"YulFunctionCall","src":"4219:19:27"}],"functionName":{"name":"checked_exp_unsigned","nodeType":"YulIdentifier","src":"4192:20:27"},"nodeType":"YulFunctionCall","src":"4192:47:27"},"variableNames":[{"name":"power","nodeType":"YulIdentifier","src":"4183:5:27"}]}]},"name":"checked_exp_t_uint256_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"base","nodeType":"YulTypedName","src":"4144:4:27","type":""},{"name":"exponent","nodeType":"YulTypedName","src":"4150:8:27","type":""}],"returnVariables":[{"name":"power","nodeType":"YulTypedName","src":"4163:5:27","type":""}],"src":"4105:140:27"},{"body":{"nodeType":"YulBlock","src":"4302:116:27","statements":[{"body":{"nodeType":"YulBlock","src":"4361:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4363:16:27"},"nodeType":"YulFunctionCall","src":"4363:18:27"},"nodeType":"YulExpressionStatement","src":"4363:18:27"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4333:1:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4326:6:27"},"nodeType":"YulFunctionCall","src":"4326:9:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4319:6:27"},"nodeType":"YulFunctionCall","src":"4319:17:27"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"4341:1:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4352:1:27","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4348:3:27"},"nodeType":"YulFunctionCall","src":"4348:6:27"},{"name":"x","nodeType":"YulIdentifier","src":"4356:1:27"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4344:3:27"},"nodeType":"YulFunctionCall","src":"4344:14:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4338:2:27"},"nodeType":"YulFunctionCall","src":"4338:21:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4315:3:27"},"nodeType":"YulFunctionCall","src":"4315:45:27"},"nodeType":"YulIf","src":"4312:71:27"},{"nodeType":"YulAssignment","src":"4392:20:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4407:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"4410:1:27"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"4403:3:27"},"nodeType":"YulFunctionCall","src":"4403:9:27"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"4392:7:27"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4281:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"4284:1:27","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"4290:7:27","type":""}],"src":"4250:168:27"},{"body":{"nodeType":"YulBlock","src":"4597:181:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4614:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4625:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4607:6:27"},"nodeType":"YulFunctionCall","src":"4607:21:27"},"nodeType":"YulExpressionStatement","src":"4607:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4648:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4659:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4644:3:27"},"nodeType":"YulFunctionCall","src":"4644:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"4664:2:27","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4637:6:27"},"nodeType":"YulFunctionCall","src":"4637:30:27"},"nodeType":"YulExpressionStatement","src":"4637:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4687:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4698:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4683:3:27"},"nodeType":"YulFunctionCall","src":"4683:18:27"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"4703:33:27","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4676:6:27"},"nodeType":"YulFunctionCall","src":"4676:61:27"},"nodeType":"YulExpressionStatement","src":"4676:61:27"},{"nodeType":"YulAssignment","src":"4746:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4758:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4769:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4754:3:27"},"nodeType":"YulFunctionCall","src":"4754:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4746:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4574:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4588:4:27","type":""}],"src":"4423:355:27"},{"body":{"nodeType":"YulBlock","src":"4831:80:27","statements":[{"body":{"nodeType":"YulBlock","src":"4858:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4860:16:27"},"nodeType":"YulFunctionCall","src":"4860:18:27"},"nodeType":"YulExpressionStatement","src":"4860:18:27"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4847:1:27"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"4854:1:27"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"4850:3:27"},"nodeType":"YulFunctionCall","src":"4850:6:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4844:2:27"},"nodeType":"YulFunctionCall","src":"4844:13:27"},"nodeType":"YulIf","src":"4841:39:27"},{"nodeType":"YulAssignment","src":"4889:16:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"4900:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"4903:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4896:3:27"},"nodeType":"YulFunctionCall","src":"4896:9:27"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"4889:3:27"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"4814:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"4817:1:27","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"4823:3:27","type":""}],"src":"4783:128:27"},{"body":{"nodeType":"YulBlock","src":"5017:76:27","statements":[{"nodeType":"YulAssignment","src":"5027:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5039:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5050:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5035:3:27"},"nodeType":"YulFunctionCall","src":"5035:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5027:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5069:9:27"},{"name":"value0","nodeType":"YulIdentifier","src":"5080:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5062:6:27"},"nodeType":"YulFunctionCall","src":"5062:25:27"},"nodeType":"YulExpressionStatement","src":"5062:25:27"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4986:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4997:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5008:4:27","type":""}],"src":"4916:177:27"}]},"contents":"{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, and(exponent, 0xff))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}","id":27,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b506040518060400160405280600d81526020016c2127212fa126212faa37b5b2b760991b8152506040518060400160405280600281526020016104c560f41b8152508160039081620000649190620002a5565b506004620000738282620002a5565b505050620000906200008a620000be60201b60201c565b620000c2565b620000b833620000a36012600a62000486565b620000b290620186a06200049e565b62000114565b620004db565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b0382166200016f5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620001839190620004c0565b90915550506001600160a01b03821660009081526020819052604081208054839290620001b2908490620004c0565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b505050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200022c57607f821691505b6020821081036200024d57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001fc57600081815260208120601f850160051c810160208610156200027c5750805b601f850160051c820191505b818110156200029d5782815560010162000288565b505050505050565b81516001600160401b03811115620002c157620002c162000201565b620002d981620002d2845462000217565b8462000253565b602080601f831160018114620003115760008415620002f85750858301515b600019600386901b1c1916600185901b1785556200029d565b600085815260208120601f198616915b82811015620003425788860151825594840194600190910190840162000321565b5085821015620003615787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052601160045260246000fd5b600181815b80851115620003c8578160001904821115620003ac57620003ac62000371565b80851615620003ba57918102915b93841c93908002906200038c565b509250929050565b600082620003e15750600162000480565b81620003f05750600062000480565b8160018114620004095760028114620004145762000434565b600191505062000480565b60ff84111562000428576200042862000371565b50506001821b62000480565b5060208310610133831016604e8410600b841016171562000459575081810a62000480565b62000465838362000387565b80600019048211156200047c576200047c62000371565b0290505b92915050565b60006200049760ff841683620003d0565b9392505050565b6000816000190483118215151615620004bb57620004bb62000371565b500290565b60008219821115620004d657620004d662000371565b500190565b610d2580620004eb6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a257806395d89b411161007157806395d89b411461021f578063a457c2d714610227578063a9059cbb1461023a578063dd62ed3e1461024d578063f2fde38b1461026057600080fd5b806370a08231146101c0578063715018a6146101e957806379cc6790146101f15780638da5cb5b1461020457600080fd5b8063313ce567116100de578063313ce56714610176578063395093511461018557806340c10f191461019857806342966c68146101ad57600080fd5b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461015157806323b872dd14610163575b600080fd5b610118610273565b6040516101259190610b2b565b60405180910390f35b61014161013c366004610b9c565b610305565b6040519015158152602001610125565b6002545b604051908152602001610125565b610141610171366004610bc6565b61031d565b60405160128152602001610125565b610141610193366004610b9c565b610341565b6101ab6101a6366004610b9c565b610363565b005b6101ab6101bb366004610c02565b610379565b6101556101ce366004610c1b565b6001600160a01b031660009081526020819052604090205490565b6101ab610386565b6101ab6101ff366004610b9c565b61039a565b6005546040516001600160a01b039091168152602001610125565b6101186103af565b610141610235366004610b9c565b6103be565b610141610248366004610b9c565b61043e565b61015561025b366004610c3d565b61044c565b6101ab61026e366004610c1b565b610477565b60606003805461028290610c70565b80601f01602080910402602001604051908101604052809291908181526020018280546102ae90610c70565b80156102fb5780601f106102d0576101008083540402835291602001916102fb565b820191906000526020600020905b8154815290600101906020018083116102de57829003601f168201915b5050505050905090565b6000336103138185856104ed565b5060019392505050565b60003361032b858285610612565b61033685858561068c565b506001949350505050565b600033610313818585610354838361044c565b61035e9190610cc0565b6104ed565b61036b61085a565b61037582826108b4565b5050565b6103833382610993565b50565b61038e61085a565b6103986000610ad9565b565b6103a5823383610612565b6103758282610993565b60606004805461028290610c70565b600033816103cc828661044c565b9050838110156104315760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61033682868684036104ed565b60003361031381858561068c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61047f61085a565b6001600160a01b0381166104e45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610428565b61038381610ad9565b6001600160a01b03831661054f5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610428565b6001600160a01b0382166105b05760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610428565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061061e848461044c565b9050600019811461068657818110156106795760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610428565b61068684848484036104ed565b50505050565b6001600160a01b0383166106f05760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610428565b6001600160a01b0382166107525760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610428565b6001600160a01b038316600090815260208190526040902054818110156107ca5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610428565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610801908490610cc0565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161084d91815260200190565b60405180910390a3610686565b6005546001600160a01b031633146103985760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610428565b6001600160a01b03821661090a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610428565b806002600082825461091c9190610cc0565b90915550506001600160a01b03821660009081526020819052604081208054839290610949908490610cc0565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0382166109f35760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610428565b6001600160a01b03821660009081526020819052604090205481811015610a675760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610428565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610a96908490610cd8565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610605565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b81811015610b5857858101830151858201604001528201610b3c565b81811115610b6a576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610b9757600080fd5b919050565b60008060408385031215610baf57600080fd5b610bb883610b80565b946020939093013593505050565b600080600060608486031215610bdb57600080fd5b610be484610b80565b9250610bf260208501610b80565b9150604084013590509250925092565b600060208284031215610c1457600080fd5b5035919050565b600060208284031215610c2d57600080fd5b610c3682610b80565b9392505050565b60008060408385031215610c5057600080fd5b610c5983610b80565b9150610c6760208401610b80565b90509250929050565b600181811c90821680610c8457607f821691505b602082108103610ca457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610cd357610cd3610caa565b500190565b600082821015610cea57610cea610caa565b50039056fea264697066735822122018a40cebad5c2f8f2258e73184b93a501228fb0a04b5e9b1f9e4a7548dc270ba64736f6c634300080f0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH13 0x2127212FA126212FAA37B5B2B7 PUSH1 0x99 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4C5 PUSH1 0xF4 SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0x64 SWAP2 SWAP1 PUSH3 0x2A5 JUMP JUMPDEST POP PUSH1 0x4 PUSH3 0x73 DUP3 DUP3 PUSH3 0x2A5 JUMP JUMPDEST POP POP POP PUSH3 0x90 PUSH3 0x8A PUSH3 0xBE PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xC2 JUMP JUMPDEST PUSH3 0xB8 CALLER PUSH3 0xA3 PUSH1 0x12 PUSH1 0xA PUSH3 0x486 JUMP JUMPDEST PUSH3 0xB2 SWAP1 PUSH3 0x186A0 PUSH3 0x49E JUMP JUMPDEST PUSH3 0x114 JUMP JUMPDEST PUSH3 0x4DB JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x16F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x183 SWAP2 SWAP1 PUSH3 0x4C0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH3 0x1B2 SWAP1 DUP5 SWAP1 PUSH3 0x4C0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x22C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x24D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x1FC JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x27C JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x29D JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x288 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x2C1 JUMPI PUSH3 0x2C1 PUSH3 0x201 JUMP JUMPDEST PUSH3 0x2D9 DUP2 PUSH3 0x2D2 DUP5 SLOAD PUSH3 0x217 JUMP JUMPDEST DUP5 PUSH3 0x253 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x311 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x2F8 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x29D JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x342 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x321 JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x361 JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH3 0x3C8 JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x3AC JUMPI PUSH3 0x3AC PUSH3 0x371 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH3 0x3BA JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH3 0x38C JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH3 0x3E1 JUMPI POP PUSH1 0x1 PUSH3 0x480 JUMP JUMPDEST DUP2 PUSH3 0x3F0 JUMPI POP PUSH1 0x0 PUSH3 0x480 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH3 0x409 JUMPI PUSH1 0x2 DUP2 EQ PUSH3 0x414 JUMPI PUSH3 0x434 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH3 0x480 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH3 0x428 JUMPI PUSH3 0x428 PUSH3 0x371 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH3 0x480 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH3 0x459 JUMPI POP DUP2 DUP2 EXP PUSH3 0x480 JUMP JUMPDEST PUSH3 0x465 DUP4 DUP4 PUSH3 0x387 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH3 0x47C JUMPI PUSH3 0x47C PUSH3 0x371 JUMP JUMPDEST MUL SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x497 PUSH1 0xFF DUP5 AND DUP4 PUSH3 0x3D0 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH3 0x4BB JUMPI PUSH3 0x4BB PUSH3 0x371 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x4D6 JUMPI PUSH3 0x4D6 PUSH3 0x371 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH2 0xD25 DUP1 PUSH3 0x4EB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x163 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x273 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH2 0x13C CALLDATASIZE PUSH1 0x4 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x305 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH2 0x141 PUSH2 0x171 CALLDATASIZE PUSH1 0x4 PUSH2 0xBC6 JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH2 0x141 PUSH2 0x193 CALLDATASIZE PUSH1 0x4 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x341 JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x1A6 CALLDATASIZE PUSH1 0x4 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x363 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AB PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0xC02 JUMP JUMPDEST PUSH2 0x379 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x1CE CALLDATASIZE PUSH1 0x4 PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x386 JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x1FF CALLDATASIZE PUSH1 0x4 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x39A JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x3AF JUMP JUMPDEST PUSH2 0x141 PUSH2 0x235 CALLDATASIZE PUSH1 0x4 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x3BE JUMP JUMPDEST PUSH2 0x141 PUSH2 0x248 CALLDATASIZE PUSH1 0x4 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x43E JUMP JUMPDEST PUSH2 0x155 PUSH2 0x25B CALLDATASIZE PUSH1 0x4 PUSH2 0xC3D JUMP JUMPDEST PUSH2 0x44C JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0xC1B JUMP JUMPDEST PUSH2 0x477 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x282 SWAP1 PUSH2 0xC70 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2AE SWAP1 PUSH2 0xC70 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x313 DUP2 DUP6 DUP6 PUSH2 0x4ED JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x32B DUP6 DUP3 DUP6 PUSH2 0x612 JUMP JUMPDEST PUSH2 0x336 DUP6 DUP6 DUP6 PUSH2 0x68C JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x313 DUP2 DUP6 DUP6 PUSH2 0x354 DUP4 DUP4 PUSH2 0x44C JUMP JUMPDEST PUSH2 0x35E SWAP2 SWAP1 PUSH2 0xCC0 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH2 0x36B PUSH2 0x85A JUMP JUMPDEST PUSH2 0x375 DUP3 DUP3 PUSH2 0x8B4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x383 CALLER DUP3 PUSH2 0x993 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x38E PUSH2 0x85A JUMP JUMPDEST PUSH2 0x398 PUSH1 0x0 PUSH2 0xAD9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3A5 DUP3 CALLER DUP4 PUSH2 0x612 JUMP JUMPDEST PUSH2 0x375 DUP3 DUP3 PUSH2 0x993 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x282 SWAP1 PUSH2 0xC70 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x3CC DUP3 DUP7 PUSH2 0x44C JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x431 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x336 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x4ED JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x313 DUP2 DUP6 DUP6 PUSH2 0x68C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x47F PUSH2 0x85A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x428 JUMP JUMPDEST PUSH2 0x383 DUP2 PUSH2 0xAD9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x428 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x428 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x61E DUP5 DUP5 PUSH2 0x44C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x686 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x679 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x428 JUMP JUMPDEST PUSH2 0x686 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x4ED JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x428 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x752 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x428 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x7CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x428 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x801 SWAP1 DUP5 SWAP1 PUSH2 0xCC0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x84D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x686 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x398 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x428 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x90A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x428 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x91C SWAP2 SWAP1 PUSH2 0xCC0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x949 SWAP1 DUP5 SWAP1 PUSH2 0xCC0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x428 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xA67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x428 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xA96 SWAP1 DUP5 SWAP1 PUSH2 0xCD8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0x605 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB58 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xB3C JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xB6A JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBB8 DUP4 PUSH2 0xB80 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBE4 DUP5 PUSH2 0xB80 JUMP JUMPDEST SWAP3 POP PUSH2 0xBF2 PUSH1 0x20 DUP6 ADD PUSH2 0xB80 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC36 DUP3 PUSH2 0xB80 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC59 DUP4 PUSH2 0xB80 JUMP JUMPDEST SWAP2 POP PUSH2 0xC67 PUSH1 0x20 DUP5 ADD PUSH2 0xB80 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC84 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xCA4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xCD3 JUMPI PUSH2 0xCD3 PUSH2 0xCAA JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xCEA JUMPI PUSH2 0xCEA PUSH2 0xCAA JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR LOG4 0xC 0xEB 0xAD 0x5C 0x2F DUP16 0x22 PC 0xE7 BALANCE DUP5 0xB9 GASPRICE POP SLT 0x28 0xFB EXP DIV 0xB5 0xE9 0xB1 0xF9 0xE4 0xA7 SLOAD DUP14 0xC2 PUSH17 0xBA64736F6C634300080F00330000000000 ","sourceMap":"242:261:26:-:0;;;298:104;;;;;;;;;;1978:113:5;;;;;;;;;;;;;-1:-1:-1;;;1978:113:5;;;;;;;;;;;;;;;;-1:-1:-1;;;1978:113:5;;;2052:5;2044;:13;;;;;;:::i;:::-;-1:-1:-1;2067:7:5;:17;2077:7;2067;:17;:::i;:::-;;1978:113;;936:32:4;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;351:44:26::1;357:10;378:16;3175:2:5::0;378::26::1;:16;:::i;:::-;369:25;::::0;:6:::1;:25;:::i;:::-;351:5;:44::i;:::-;242:261:::0;;640:96:12;719:10;;640:96::o;2433:187:4:-;2525:6;;;-1:-1:-1;;;;;2541:17:4;;;-1:-1:-1;;;;;;2541:17:4;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;9139:389:5:-;-1:-1:-1;;;;;9222:21:5;;9214:65;;;;-1:-1:-1;;;9214:65:5;;4625:2:27;9214:65:5;;;4607:21:27;4664:2;4644:18;;;4637:30;4703:33;4683:18;;;4676:61;4754:18;;9214:65:5;;;;;;;;9366:6;9350:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9382:18:5;;:9;:18;;;;;;;;;;:28;;9404:6;;9382:9;:28;;9404:6;;9382:28;:::i;:::-;;;;-1:-1:-1;;9425:37:5;;5062:25:27;;;-1:-1:-1;;;;;9425:37:5;;;9442:1;;9425:37;;5050:2:27;5035:18;9425:37:5;;;;;;;9139:389;;:::o;12523:121::-;;;;:::o;14:127:27:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:27;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:27;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:27;;;2580:26;2531:89;-1:-1:-1;;1335:1:27;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:27;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:27;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:27;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:27:o;2735:127::-;2796:10;2791:3;2787:20;2784:1;2777:31;2827:4;2824:1;2817:15;2851:4;2848:1;2841:15;2867:422;2956:1;2999:5;2956:1;3013:270;3034:7;3024:8;3021:21;3013:270;;;3093:4;3089:1;3085:6;3081:17;3075:4;3072:27;3069:53;;;3102:18;;:::i;:::-;3152:7;3142:8;3138:22;3135:55;;;3172:16;;;;3135:55;3251:22;;;;3211:15;;;;3013:270;;;3017:3;2867:422;;;;;:::o;3294:806::-;3343:5;3373:8;3363:80;;-1:-1:-1;3414:1:27;3428:5;;3363:80;3462:4;3452:76;;-1:-1:-1;3499:1:27;3513:5;;3452:76;3544:4;3562:1;3557:59;;;;3630:1;3625:130;;;;3537:218;;3557:59;3587:1;3578:10;;3601:5;;;3625:130;3662:3;3652:8;3649:17;3646:43;;;3669:18;;:::i;:::-;-1:-1:-1;;3725:1:27;3711:16;;3740:5;;3537:218;;3839:2;3829:8;3826:16;3820:3;3814:4;3811:13;3807:36;3801:2;3791:8;3788:16;3783:2;3777:4;3774:12;3770:35;3767:77;3764:159;;;-1:-1:-1;3876:19:27;;;3908:5;;3764:159;3955:34;3980:8;3974:4;3955:34;:::i;:::-;4025:6;4021:1;4017:6;4013:19;4004:7;4001:32;3998:58;;;4036:18;;:::i;:::-;4074:20;;-1:-1:-1;3294:806:27;;;;;:::o;4105:140::-;4163:5;4192:47;4233:4;4223:8;4219:19;4213:4;4192:47;:::i;:::-;4183:56;4105:140;-1:-1:-1;;;4105:140:27:o;4250:168::-;4290:7;4356:1;4352;4348:6;4344:14;4341:1;4338:21;4333:1;4326:9;4319:17;4315:45;4312:71;;;4363:18;;:::i;:::-;-1:-1:-1;4403:9:27;;4250:168::o;4783:128::-;4823:3;4854:1;4850:6;4847:1;4844:13;4841:39;;;4860:18;;:::i;:::-;-1:-1:-1;4896:9:27;;4783:128::o;4916:177::-;242:261:26;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_1311":{"entryPoint":null,"id":1311,"parameterSlots":3,"returnSlots":0},"@_approve_1246":{"entryPoint":1261,"id":1246,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1300":{"entryPoint":null,"id":1300,"parameterSlots":3,"returnSlots":0},"@_burn_1201":{"entryPoint":2451,"id":1201,"parameterSlots":2,"returnSlots":0},"@_checkOwner_597":{"entryPoint":2138,"id":597,"parameterSlots":0,"returnSlots":0},"@_mint_1129":{"entryPoint":2228,"id":1129,"parameterSlots":2,"returnSlots":0},"@_msgSender_1744":{"entryPoint":null,"id":1744,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_1289":{"entryPoint":1554,"id":1289,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_654":{"entryPoint":2777,"id":654,"parameterSlots":1,"returnSlots":0},"@_transfer_1002":{"entryPoint":1676,"id":1002,"parameterSlots":3,"returnSlots":0},"@allowance_797":{"entryPoint":1100,"id":797,"parameterSlots":2,"returnSlots":1},"@approve_822":{"entryPoint":773,"id":822,"parameterSlots":2,"returnSlots":1},"@balanceOf_754":{"entryPoint":null,"id":754,"parameterSlots":1,"returnSlots":1},"@burnFrom_1433":{"entryPoint":922,"id":1433,"parameterSlots":2,"returnSlots":0},"@burn_1412":{"entryPoint":889,"id":1412,"parameterSlots":1,"returnSlots":0},"@decimals_730":{"entryPoint":null,"id":730,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_925":{"entryPoint":958,"id":925,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_884":{"entryPoint":833,"id":884,"parameterSlots":2,"returnSlots":1},"@mint_5259":{"entryPoint":867,"id":5259,"parameterSlots":2,"returnSlots":0},"@name_710":{"entryPoint":627,"id":710,"parameterSlots":0,"returnSlots":1},"@owner_583":{"entryPoint":null,"id":583,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_611":{"entryPoint":902,"id":611,"parameterSlots":0,"returnSlots":0},"@symbol_720":{"entryPoint":943,"id":720,"parameterSlots":0,"returnSlots":1},"@totalSupply_740":{"entryPoint":null,"id":740,"parameterSlots":0,"returnSlots":1},"@transferFrom_855":{"entryPoint":797,"id":855,"parameterSlots":3,"returnSlots":1},"@transferOwnership_634":{"entryPoint":1143,"id":634,"parameterSlots":1,"returnSlots":0},"@transfer_779":{"entryPoint":1086,"id":779,"parameterSlots":2,"returnSlots":1},"abi_decode_address":{"entryPoint":2944,"id":null,"parameterSlots":1,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3099,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3133,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3014,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2972,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":3074,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2859,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3264,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":3288,"id":null,"parameterSlots":2,"returnSlots":1},"extract_byte_array_length":{"entryPoint":3184,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3242,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8297:27","statements":[{"nodeType":"YulBlock","src":"6:3:27","statements":[]},{"body":{"nodeType":"YulBlock","src":"135:476:27","statements":[{"nodeType":"YulVariableDeclaration","src":"145:12:27","value":{"kind":"number","nodeType":"YulLiteral","src":"155:2:27","type":"","value":"32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"149:2:27","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"173:9:27"},{"name":"_1","nodeType":"YulIdentifier","src":"184:2:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"166:6:27"},"nodeType":"YulFunctionCall","src":"166:21:27"},"nodeType":"YulExpressionStatement","src":"166:21:27"},{"nodeType":"YulVariableDeclaration","src":"196:27:27","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"216:6:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"210:5:27"},"nodeType":"YulFunctionCall","src":"210:13:27"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"200:6:27","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"243:9:27"},{"name":"_1","nodeType":"YulIdentifier","src":"254:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"239:3:27"},"nodeType":"YulFunctionCall","src":"239:18:27"},{"name":"length","nodeType":"YulIdentifier","src":"259:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"232:6:27"},"nodeType":"YulFunctionCall","src":"232:34:27"},"nodeType":"YulExpressionStatement","src":"232:34:27"},{"nodeType":"YulVariableDeclaration","src":"275:10:27","value":{"kind":"number","nodeType":"YulLiteral","src":"284:1:27","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"279:1:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"344:90:27","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"373:9:27"},{"name":"i","nodeType":"YulIdentifier","src":"384:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"369:3:27"},"nodeType":"YulFunctionCall","src":"369:17:27"},{"kind":"number","nodeType":"YulLiteral","src":"388:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"365:3:27"},"nodeType":"YulFunctionCall","src":"365:26:27"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"407:6:27"},{"name":"i","nodeType":"YulIdentifier","src":"415:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"403:3:27"},"nodeType":"YulFunctionCall","src":"403:14:27"},{"name":"_1","nodeType":"YulIdentifier","src":"419:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"399:3:27"},"nodeType":"YulFunctionCall","src":"399:23:27"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"393:5:27"},"nodeType":"YulFunctionCall","src":"393:30:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"358:6:27"},"nodeType":"YulFunctionCall","src":"358:66:27"},"nodeType":"YulExpressionStatement","src":"358:66:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"305:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"308:6:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"302:2:27"},"nodeType":"YulFunctionCall","src":"302:13:27"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"316:19:27","statements":[{"nodeType":"YulAssignment","src":"318:15:27","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"327:1:27"},{"name":"_1","nodeType":"YulIdentifier","src":"330:2:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"323:3:27"},"nodeType":"YulFunctionCall","src":"323:10:27"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"318:1:27"}]}]},"pre":{"nodeType":"YulBlock","src":"298:3:27","statements":[]},"src":"294:140:27"},{"body":{"nodeType":"YulBlock","src":"468:66:27","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"497:9:27"},{"name":"length","nodeType":"YulIdentifier","src":"508:6:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"493:3:27"},"nodeType":"YulFunctionCall","src":"493:22:27"},{"kind":"number","nodeType":"YulLiteral","src":"517:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"489:3:27"},"nodeType":"YulFunctionCall","src":"489:31:27"},{"kind":"number","nodeType":"YulLiteral","src":"522:1:27","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"482:6:27"},"nodeType":"YulFunctionCall","src":"482:42:27"},"nodeType":"YulExpressionStatement","src":"482:42:27"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"449:1:27"},{"name":"length","nodeType":"YulIdentifier","src":"452:6:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"446:2:27"},"nodeType":"YulFunctionCall","src":"446:13:27"},"nodeType":"YulIf","src":"443:91:27"},{"nodeType":"YulAssignment","src":"543:62:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"559:9:27"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"578:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"586:2:27","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"574:3:27"},"nodeType":"YulFunctionCall","src":"574:15:27"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"595:2:27","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"591:3:27"},"nodeType":"YulFunctionCall","src":"591:7:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"570:3:27"},"nodeType":"YulFunctionCall","src":"570:29:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"555:3:27"},"nodeType":"YulFunctionCall","src":"555:45:27"},{"kind":"number","nodeType":"YulLiteral","src":"602:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"551:3:27"},"nodeType":"YulFunctionCall","src":"551:54:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"543:4:27"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"104:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"115:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"126:4:27","type":""}],"src":"14:597:27"},{"body":{"nodeType":"YulBlock","src":"665:124:27","statements":[{"nodeType":"YulAssignment","src":"675:29:27","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"697:6:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"684:12:27"},"nodeType":"YulFunctionCall","src":"684:20:27"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"675:5:27"}]},{"body":{"nodeType":"YulBlock","src":"767:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"776:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"779:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"769:6:27"},"nodeType":"YulFunctionCall","src":"769:12:27"},"nodeType":"YulExpressionStatement","src":"769:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"726:5:27"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"737:5:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"752:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"757:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"748:3:27"},"nodeType":"YulFunctionCall","src":"748:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"761:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"744:3:27"},"nodeType":"YulFunctionCall","src":"744:19:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"733:3:27"},"nodeType":"YulFunctionCall","src":"733:31:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"723:2:27"},"nodeType":"YulFunctionCall","src":"723:42:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"716:6:27"},"nodeType":"YulFunctionCall","src":"716:50:27"},"nodeType":"YulIf","src":"713:70:27"}]},"name":"abi_decode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:27","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"655:5:27","type":""}],"src":"616:173:27"},{"body":{"nodeType":"YulBlock","src":"881:167:27","statements":[{"body":{"nodeType":"YulBlock","src":"927:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"936:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"939:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"929:6:27"},"nodeType":"YulFunctionCall","src":"929:12:27"},"nodeType":"YulExpressionStatement","src":"929:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"902:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"911:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"898:3:27"},"nodeType":"YulFunctionCall","src":"898:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"923:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"894:3:27"},"nodeType":"YulFunctionCall","src":"894:32:27"},"nodeType":"YulIf","src":"891:52:27"},{"nodeType":"YulAssignment","src":"952:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"981:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"962:18:27"},"nodeType":"YulFunctionCall","src":"962:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"952:6:27"}]},{"nodeType":"YulAssignment","src":"1000:42:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1027:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1038:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1023:3:27"},"nodeType":"YulFunctionCall","src":"1023:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1010:12:27"},"nodeType":"YulFunctionCall","src":"1010:32:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1000:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"839:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"850:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"862:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"870:6:27","type":""}],"src":"794:254:27"},{"body":{"nodeType":"YulBlock","src":"1148:92:27","statements":[{"nodeType":"YulAssignment","src":"1158:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1170:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1181:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1166:3:27"},"nodeType":"YulFunctionCall","src":"1166:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1158:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1200:9:27"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1225:6:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1218:6:27"},"nodeType":"YulFunctionCall","src":"1218:14:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1211:6:27"},"nodeType":"YulFunctionCall","src":"1211:22:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1193:6:27"},"nodeType":"YulFunctionCall","src":"1193:41:27"},"nodeType":"YulExpressionStatement","src":"1193:41:27"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1117:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1128:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1139:4:27","type":""}],"src":"1053:187:27"},{"body":{"nodeType":"YulBlock","src":"1346:76:27","statements":[{"nodeType":"YulAssignment","src":"1356:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1368:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1379:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1364:3:27"},"nodeType":"YulFunctionCall","src":"1364:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1356:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1398:9:27"},{"name":"value0","nodeType":"YulIdentifier","src":"1409:6:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1391:6:27"},"nodeType":"YulFunctionCall","src":"1391:25:27"},"nodeType":"YulExpressionStatement","src":"1391:25:27"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1315:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1326:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1337:4:27","type":""}],"src":"1245:177:27"},{"body":{"nodeType":"YulBlock","src":"1531:224:27","statements":[{"body":{"nodeType":"YulBlock","src":"1577:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1586:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1589:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1579:6:27"},"nodeType":"YulFunctionCall","src":"1579:12:27"},"nodeType":"YulExpressionStatement","src":"1579:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1552:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"1561:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1548:3:27"},"nodeType":"YulFunctionCall","src":"1548:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"1573:2:27","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1544:3:27"},"nodeType":"YulFunctionCall","src":"1544:32:27"},"nodeType":"YulIf","src":"1541:52:27"},{"nodeType":"YulAssignment","src":"1602:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1631:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1612:18:27"},"nodeType":"YulFunctionCall","src":"1612:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1602:6:27"}]},{"nodeType":"YulAssignment","src":"1650:48:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1683:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1694:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1679:3:27"},"nodeType":"YulFunctionCall","src":"1679:18:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"1660:18:27"},"nodeType":"YulFunctionCall","src":"1660:38:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1650:6:27"}]},{"nodeType":"YulAssignment","src":"1707:42:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1734:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1745:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1730:3:27"},"nodeType":"YulFunctionCall","src":"1730:18:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1717:12:27"},"nodeType":"YulFunctionCall","src":"1717:32:27"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1707:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1481:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1492:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1504:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1512:6:27","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1520:6:27","type":""}],"src":"1427:328:27"},{"body":{"nodeType":"YulBlock","src":"1857:87:27","statements":[{"nodeType":"YulAssignment","src":"1867:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1879:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"1890:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1875:3:27"},"nodeType":"YulFunctionCall","src":"1875:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1867:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1909:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1924:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"1932:4:27","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1920:3:27"},"nodeType":"YulFunctionCall","src":"1920:17:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1902:6:27"},"nodeType":"YulFunctionCall","src":"1902:36:27"},"nodeType":"YulExpressionStatement","src":"1902:36:27"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1826:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1837:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1848:4:27","type":""}],"src":"1760:184:27"},{"body":{"nodeType":"YulBlock","src":"2019:110:27","statements":[{"body":{"nodeType":"YulBlock","src":"2065:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2074:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2077:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2067:6:27"},"nodeType":"YulFunctionCall","src":"2067:12:27"},"nodeType":"YulExpressionStatement","src":"2067:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2040:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2049:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2036:3:27"},"nodeType":"YulFunctionCall","src":"2036:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"2061:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2032:3:27"},"nodeType":"YulFunctionCall","src":"2032:32:27"},"nodeType":"YulIf","src":"2029:52:27"},{"nodeType":"YulAssignment","src":"2090:33:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2113:9:27"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2100:12:27"},"nodeType":"YulFunctionCall","src":"2100:23:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2090:6:27"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1985:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1996:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2008:6:27","type":""}],"src":"1949:180:27"},{"body":{"nodeType":"YulBlock","src":"2204:116:27","statements":[{"body":{"nodeType":"YulBlock","src":"2250:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2259:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2262:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2252:6:27"},"nodeType":"YulFunctionCall","src":"2252:12:27"},"nodeType":"YulExpressionStatement","src":"2252:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2225:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2234:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2221:3:27"},"nodeType":"YulFunctionCall","src":"2221:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"2246:2:27","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2217:3:27"},"nodeType":"YulFunctionCall","src":"2217:32:27"},"nodeType":"YulIf","src":"2214:52:27"},{"nodeType":"YulAssignment","src":"2275:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2304:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2285:18:27"},"nodeType":"YulFunctionCall","src":"2285:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2275:6:27"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2170:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2181:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2193:6:27","type":""}],"src":"2134:186:27"},{"body":{"nodeType":"YulBlock","src":"2426:102:27","statements":[{"nodeType":"YulAssignment","src":"2436:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2448:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2459:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2444:3:27"},"nodeType":"YulFunctionCall","src":"2444:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2436:4:27"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2478:9:27"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2493:6:27"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2509:3:27","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2514:1:27","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2505:3:27"},"nodeType":"YulFunctionCall","src":"2505:11:27"},{"kind":"number","nodeType":"YulLiteral","src":"2518:1:27","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2501:3:27"},"nodeType":"YulFunctionCall","src":"2501:19:27"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2489:3:27"},"nodeType":"YulFunctionCall","src":"2489:32:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2471:6:27"},"nodeType":"YulFunctionCall","src":"2471:51:27"},"nodeType":"YulExpressionStatement","src":"2471:51:27"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2395:9:27","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2406:6:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2417:4:27","type":""}],"src":"2325:203:27"},{"body":{"nodeType":"YulBlock","src":"2620:173:27","statements":[{"body":{"nodeType":"YulBlock","src":"2666:16:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2675:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2678:1:27","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2668:6:27"},"nodeType":"YulFunctionCall","src":"2668:12:27"},"nodeType":"YulExpressionStatement","src":"2668:12:27"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2641:7:27"},{"name":"headStart","nodeType":"YulIdentifier","src":"2650:9:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2637:3:27"},"nodeType":"YulFunctionCall","src":"2637:23:27"},{"kind":"number","nodeType":"YulLiteral","src":"2662:2:27","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2633:3:27"},"nodeType":"YulFunctionCall","src":"2633:32:27"},"nodeType":"YulIf","src":"2630:52:27"},{"nodeType":"YulAssignment","src":"2691:39:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2720:9:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2701:18:27"},"nodeType":"YulFunctionCall","src":"2701:29:27"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2691:6:27"}]},{"nodeType":"YulAssignment","src":"2739:48:27","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2772:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"2783:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2768:3:27"},"nodeType":"YulFunctionCall","src":"2768:18:27"}],"functionName":{"name":"abi_decode_address","nodeType":"YulIdentifier","src":"2749:18:27"},"nodeType":"YulFunctionCall","src":"2749:38:27"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2739:6:27"}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2578:9:27","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2589:7:27","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2601:6:27","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2609:6:27","type":""}],"src":"2533:260:27"},{"body":{"nodeType":"YulBlock","src":"2853:325:27","statements":[{"nodeType":"YulAssignment","src":"2863:22:27","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2877:1:27","type":"","value":"1"},{"name":"data","nodeType":"YulIdentifier","src":"2880:4:27"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"2873:3:27"},"nodeType":"YulFunctionCall","src":"2873:12:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2863:6:27"}]},{"nodeType":"YulVariableDeclaration","src":"2894:38:27","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"2924:4:27"},{"kind":"number","nodeType":"YulLiteral","src":"2930:1:27","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2920:3:27"},"nodeType":"YulFunctionCall","src":"2920:12:27"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"2898:18:27","type":""}]},{"body":{"nodeType":"YulBlock","src":"2971:31:27","statements":[{"nodeType":"YulAssignment","src":"2973:27:27","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2987:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"2995:4:27","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2983:3:27"},"nodeType":"YulFunctionCall","src":"2983:17:27"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2973:6:27"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"2951:18:27"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2944:6:27"},"nodeType":"YulFunctionCall","src":"2944:26:27"},"nodeType":"YulIf","src":"2941:61:27"},{"body":{"nodeType":"YulBlock","src":"3061:111:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3082:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3089:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3094:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3085:3:27"},"nodeType":"YulFunctionCall","src":"3085:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3075:6:27"},"nodeType":"YulFunctionCall","src":"3075:31:27"},"nodeType":"YulExpressionStatement","src":"3075:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3126:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3129:4:27","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3119:6:27"},"nodeType":"YulFunctionCall","src":"3119:15:27"},"nodeType":"YulExpressionStatement","src":"3119:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3154:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3157:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3147:6:27"},"nodeType":"YulFunctionCall","src":"3147:15:27"},"nodeType":"YulExpressionStatement","src":"3147:15:27"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3017:18:27"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3040:6:27"},{"kind":"number","nodeType":"YulLiteral","src":"3048:2:27","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3037:2:27"},"nodeType":"YulFunctionCall","src":"3037:14:27"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3014:2:27"},"nodeType":"YulFunctionCall","src":"3014:38:27"},"nodeType":"YulIf","src":"3011:161:27"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"2833:4:27","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"2842:6:27","type":""}],"src":"2798:380:27"},{"body":{"nodeType":"YulBlock","src":"3215:95:27","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3232:1:27","type":"","value":"0"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3239:3:27","type":"","value":"224"},{"kind":"number","nodeType":"YulLiteral","src":"3244:10:27","type":"","value":"0x4e487b71"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3235:3:27"},"nodeType":"YulFunctionCall","src":"3235:20:27"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3225:6:27"},"nodeType":"YulFunctionCall","src":"3225:31:27"},"nodeType":"YulExpressionStatement","src":"3225:31:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3272:1:27","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3275:4:27","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3265:6:27"},"nodeType":"YulFunctionCall","src":"3265:15:27"},"nodeType":"YulExpressionStatement","src":"3265:15:27"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3296:1:27","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3299:4:27","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3289:6:27"},"nodeType":"YulFunctionCall","src":"3289:15:27"},"nodeType":"YulExpressionStatement","src":"3289:15:27"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"3183:127:27"},{"body":{"nodeType":"YulBlock","src":"3363:80:27","statements":[{"body":{"nodeType":"YulBlock","src":"3390:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"3392:16:27"},"nodeType":"YulFunctionCall","src":"3392:18:27"},"nodeType":"YulExpressionStatement","src":"3392:18:27"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3379:1:27"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"3386:1:27"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3382:3:27"},"nodeType":"YulFunctionCall","src":"3382:6:27"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3376:2:27"},"nodeType":"YulFunctionCall","src":"3376:13:27"},"nodeType":"YulIf","src":"3373:39:27"},{"nodeType":"YulAssignment","src":"3421:16:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3432:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"3435:1:27"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3428:3:27"},"nodeType":"YulFunctionCall","src":"3428:9:27"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"3421:3:27"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"3346:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"3349:1:27","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"3355:3:27","type":""}],"src":"3315:128:27"},{"body":{"nodeType":"YulBlock","src":"3622:227:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3639:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3650:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3632:6:27"},"nodeType":"YulFunctionCall","src":"3632:21:27"},"nodeType":"YulExpressionStatement","src":"3632:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3673:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3684:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3669:3:27"},"nodeType":"YulFunctionCall","src":"3669:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"3689:2:27","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3662:6:27"},"nodeType":"YulFunctionCall","src":"3662:30:27"},"nodeType":"YulExpressionStatement","src":"3662:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3712:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3723:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3708:3:27"},"nodeType":"YulFunctionCall","src":"3708:18:27"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"3728:34:27","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3701:6:27"},"nodeType":"YulFunctionCall","src":"3701:62:27"},"nodeType":"YulExpressionStatement","src":"3701:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3783:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3794:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3779:3:27"},"nodeType":"YulFunctionCall","src":"3779:18:27"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"3799:7:27","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3772:6:27"},"nodeType":"YulFunctionCall","src":"3772:35:27"},"nodeType":"YulExpressionStatement","src":"3772:35:27"},{"nodeType":"YulAssignment","src":"3816:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3828:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"3839:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3824:3:27"},"nodeType":"YulFunctionCall","src":"3824:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3816:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3599:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3613:4:27","type":""}],"src":"3448:401:27"},{"body":{"nodeType":"YulBlock","src":"4028:228:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4045:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4056:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4038:6:27"},"nodeType":"YulFunctionCall","src":"4038:21:27"},"nodeType":"YulExpressionStatement","src":"4038:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4079:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4090:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4075:3:27"},"nodeType":"YulFunctionCall","src":"4075:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"4095:2:27","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4068:6:27"},"nodeType":"YulFunctionCall","src":"4068:30:27"},"nodeType":"YulExpressionStatement","src":"4068:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4118:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4129:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4114:3:27"},"nodeType":"YulFunctionCall","src":"4114:18:27"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"4134:34:27","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4107:6:27"},"nodeType":"YulFunctionCall","src":"4107:62:27"},"nodeType":"YulExpressionStatement","src":"4107:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4189:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4200:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4185:3:27"},"nodeType":"YulFunctionCall","src":"4185:18:27"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"4205:8:27","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4178:6:27"},"nodeType":"YulFunctionCall","src":"4178:36:27"},"nodeType":"YulExpressionStatement","src":"4178:36:27"},{"nodeType":"YulAssignment","src":"4223:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4235:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4246:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4231:3:27"},"nodeType":"YulFunctionCall","src":"4231:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4223:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4005:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4019:4:27","type":""}],"src":"3854:402:27"},{"body":{"nodeType":"YulBlock","src":"4435:226:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4452:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4463:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4445:6:27"},"nodeType":"YulFunctionCall","src":"4445:21:27"},"nodeType":"YulExpressionStatement","src":"4445:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4486:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4497:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4482:3:27"},"nodeType":"YulFunctionCall","src":"4482:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"4502:2:27","type":"","value":"36"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4475:6:27"},"nodeType":"YulFunctionCall","src":"4475:30:27"},"nodeType":"YulExpressionStatement","src":"4475:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4525:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4536:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4521:3:27"},"nodeType":"YulFunctionCall","src":"4521:18:27"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"4541:34:27","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4514:6:27"},"nodeType":"YulFunctionCall","src":"4514:62:27"},"nodeType":"YulExpressionStatement","src":"4514:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4596:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4607:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4592:3:27"},"nodeType":"YulFunctionCall","src":"4592:18:27"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"4612:6:27","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4585:6:27"},"nodeType":"YulFunctionCall","src":"4585:34:27"},"nodeType":"YulExpressionStatement","src":"4585:34:27"},{"nodeType":"YulAssignment","src":"4628:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4640:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4651:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4636:3:27"},"nodeType":"YulFunctionCall","src":"4636:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4628:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4412:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4426:4:27","type":""}],"src":"4261:400:27"},{"body":{"nodeType":"YulBlock","src":"4840:224:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4857:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4868:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4850:6:27"},"nodeType":"YulFunctionCall","src":"4850:21:27"},"nodeType":"YulExpressionStatement","src":"4850:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4891:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4902:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4887:3:27"},"nodeType":"YulFunctionCall","src":"4887:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"4907:2:27","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4880:6:27"},"nodeType":"YulFunctionCall","src":"4880:30:27"},"nodeType":"YulExpressionStatement","src":"4880:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4930:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"4941:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4926:3:27"},"nodeType":"YulFunctionCall","src":"4926:18:27"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"4946:34:27","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4919:6:27"},"nodeType":"YulFunctionCall","src":"4919:62:27"},"nodeType":"YulExpressionStatement","src":"4919:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5001:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5012:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4997:3:27"},"nodeType":"YulFunctionCall","src":"4997:18:27"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"5017:4:27","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4990:6:27"},"nodeType":"YulFunctionCall","src":"4990:32:27"},"nodeType":"YulExpressionStatement","src":"4990:32:27"},{"nodeType":"YulAssignment","src":"5031:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5043:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5054:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5039:3:27"},"nodeType":"YulFunctionCall","src":"5039:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5031:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4817:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4831:4:27","type":""}],"src":"4666:398:27"},{"body":{"nodeType":"YulBlock","src":"5243:179:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5260:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5271:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5253:6:27"},"nodeType":"YulFunctionCall","src":"5253:21:27"},"nodeType":"YulExpressionStatement","src":"5253:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5294:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5305:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5290:3:27"},"nodeType":"YulFunctionCall","src":"5290:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"5310:2:27","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5283:6:27"},"nodeType":"YulFunctionCall","src":"5283:30:27"},"nodeType":"YulExpressionStatement","src":"5283:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5333:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5344:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5329:3:27"},"nodeType":"YulFunctionCall","src":"5329:18:27"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"5349:31:27","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5322:6:27"},"nodeType":"YulFunctionCall","src":"5322:59:27"},"nodeType":"YulExpressionStatement","src":"5322:59:27"},{"nodeType":"YulAssignment","src":"5390:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5402:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5413:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5398:3:27"},"nodeType":"YulFunctionCall","src":"5398:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5390:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5220:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5234:4:27","type":""}],"src":"5069:353:27"},{"body":{"nodeType":"YulBlock","src":"5601:227:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5618:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5629:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5611:6:27"},"nodeType":"YulFunctionCall","src":"5611:21:27"},"nodeType":"YulExpressionStatement","src":"5611:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5652:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5663:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5648:3:27"},"nodeType":"YulFunctionCall","src":"5648:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"5668:2:27","type":"","value":"37"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5641:6:27"},"nodeType":"YulFunctionCall","src":"5641:30:27"},"nodeType":"YulExpressionStatement","src":"5641:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5691:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5702:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5687:3:27"},"nodeType":"YulFunctionCall","src":"5687:18:27"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"5707:34:27","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5680:6:27"},"nodeType":"YulFunctionCall","src":"5680:62:27"},"nodeType":"YulExpressionStatement","src":"5680:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5762:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5773:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5758:3:27"},"nodeType":"YulFunctionCall","src":"5758:18:27"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"5778:7:27","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5751:6:27"},"nodeType":"YulFunctionCall","src":"5751:35:27"},"nodeType":"YulExpressionStatement","src":"5751:35:27"},{"nodeType":"YulAssignment","src":"5795:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5807:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"5818:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5803:3:27"},"nodeType":"YulFunctionCall","src":"5803:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5795:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5578:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5592:4:27","type":""}],"src":"5427:401:27"},{"body":{"nodeType":"YulBlock","src":"6007:225:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6024:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6035:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6017:6:27"},"nodeType":"YulFunctionCall","src":"6017:21:27"},"nodeType":"YulExpressionStatement","src":"6017:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6058:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6069:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6054:3:27"},"nodeType":"YulFunctionCall","src":"6054:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"6074:2:27","type":"","value":"35"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6047:6:27"},"nodeType":"YulFunctionCall","src":"6047:30:27"},"nodeType":"YulExpressionStatement","src":"6047:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6097:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6108:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6093:3:27"},"nodeType":"YulFunctionCall","src":"6093:18:27"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"6113:34:27","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6086:6:27"},"nodeType":"YulFunctionCall","src":"6086:62:27"},"nodeType":"YulExpressionStatement","src":"6086:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6168:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6179:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6164:3:27"},"nodeType":"YulFunctionCall","src":"6164:18:27"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"6184:5:27","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6157:6:27"},"nodeType":"YulFunctionCall","src":"6157:33:27"},"nodeType":"YulExpressionStatement","src":"6157:33:27"},{"nodeType":"YulAssignment","src":"6199:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6211:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6222:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6207:3:27"},"nodeType":"YulFunctionCall","src":"6207:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6199:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5984:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5998:4:27","type":""}],"src":"5833:399:27"},{"body":{"nodeType":"YulBlock","src":"6411:228:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6428:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6439:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6421:6:27"},"nodeType":"YulFunctionCall","src":"6421:21:27"},"nodeType":"YulExpressionStatement","src":"6421:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6462:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6473:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6458:3:27"},"nodeType":"YulFunctionCall","src":"6458:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"6478:2:27","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6451:6:27"},"nodeType":"YulFunctionCall","src":"6451:30:27"},"nodeType":"YulExpressionStatement","src":"6451:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6501:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6512:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6497:3:27"},"nodeType":"YulFunctionCall","src":"6497:18:27"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"6517:34:27","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6490:6:27"},"nodeType":"YulFunctionCall","src":"6490:62:27"},"nodeType":"YulExpressionStatement","src":"6490:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6572:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6583:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6568:3:27"},"nodeType":"YulFunctionCall","src":"6568:18:27"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"6588:8:27","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6561:6:27"},"nodeType":"YulFunctionCall","src":"6561:36:27"},"nodeType":"YulExpressionStatement","src":"6561:36:27"},{"nodeType":"YulAssignment","src":"6606:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6618:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6629:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6614:3:27"},"nodeType":"YulFunctionCall","src":"6614:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6606:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6388:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6402:4:27","type":""}],"src":"6237:402:27"},{"body":{"nodeType":"YulBlock","src":"6818:182:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6835:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6846:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6828:6:27"},"nodeType":"YulFunctionCall","src":"6828:21:27"},"nodeType":"YulExpressionStatement","src":"6828:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6869:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6880:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6865:3:27"},"nodeType":"YulFunctionCall","src":"6865:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"6885:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6858:6:27"},"nodeType":"YulFunctionCall","src":"6858:30:27"},"nodeType":"YulExpressionStatement","src":"6858:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6908:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6919:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6904:3:27"},"nodeType":"YulFunctionCall","src":"6904:18:27"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"6924:34:27","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6897:6:27"},"nodeType":"YulFunctionCall","src":"6897:62:27"},"nodeType":"YulExpressionStatement","src":"6897:62:27"},{"nodeType":"YulAssignment","src":"6968:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6980:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"6991:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6976:3:27"},"nodeType":"YulFunctionCall","src":"6976:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6968:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6795:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6809:4:27","type":""}],"src":"6644:356:27"},{"body":{"nodeType":"YulBlock","src":"7179:181:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7196:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7207:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7189:6:27"},"nodeType":"YulFunctionCall","src":"7189:21:27"},"nodeType":"YulExpressionStatement","src":"7189:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7230:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7241:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7226:3:27"},"nodeType":"YulFunctionCall","src":"7226:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"7246:2:27","type":"","value":"31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7219:6:27"},"nodeType":"YulFunctionCall","src":"7219:30:27"},"nodeType":"YulExpressionStatement","src":"7219:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7269:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7280:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7265:3:27"},"nodeType":"YulFunctionCall","src":"7265:18:27"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"7285:33:27","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7258:6:27"},"nodeType":"YulFunctionCall","src":"7258:61:27"},"nodeType":"YulExpressionStatement","src":"7258:61:27"},{"nodeType":"YulAssignment","src":"7328:26:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7340:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7351:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7336:3:27"},"nodeType":"YulFunctionCall","src":"7336:18:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7328:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7156:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7170:4:27","type":""}],"src":"7005:355:27"},{"body":{"nodeType":"YulBlock","src":"7539:223:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7556:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7567:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7549:6:27"},"nodeType":"YulFunctionCall","src":"7549:21:27"},"nodeType":"YulExpressionStatement","src":"7549:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7590:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7601:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7586:3:27"},"nodeType":"YulFunctionCall","src":"7586:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"7606:2:27","type":"","value":"33"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7579:6:27"},"nodeType":"YulFunctionCall","src":"7579:30:27"},"nodeType":"YulExpressionStatement","src":"7579:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7629:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7640:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7625:3:27"},"nodeType":"YulFunctionCall","src":"7625:18:27"},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f20616464726573","kind":"string","nodeType":"YulLiteral","src":"7645:34:27","type":"","value":"ERC20: burn from the zero addres"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7618:6:27"},"nodeType":"YulFunctionCall","src":"7618:62:27"},"nodeType":"YulExpressionStatement","src":"7618:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7700:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7711:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7696:3:27"},"nodeType":"YulFunctionCall","src":"7696:18:27"},{"hexValue":"73","kind":"string","nodeType":"YulLiteral","src":"7716:3:27","type":"","value":"s"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7689:6:27"},"nodeType":"YulFunctionCall","src":"7689:31:27"},"nodeType":"YulExpressionStatement","src":"7689:31:27"},{"nodeType":"YulAssignment","src":"7729:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7741:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7752:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7737:3:27"},"nodeType":"YulFunctionCall","src":"7737:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7729:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7516:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7530:4:27","type":""}],"src":"7365:397:27"},{"body":{"nodeType":"YulBlock","src":"7941:224:27","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7958:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"7969:2:27","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7951:6:27"},"nodeType":"YulFunctionCall","src":"7951:21:27"},"nodeType":"YulExpressionStatement","src":"7951:21:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7992:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8003:2:27","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7988:3:27"},"nodeType":"YulFunctionCall","src":"7988:18:27"},{"kind":"number","nodeType":"YulLiteral","src":"8008:2:27","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7981:6:27"},"nodeType":"YulFunctionCall","src":"7981:30:27"},"nodeType":"YulExpressionStatement","src":"7981:30:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8031:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8042:2:27","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8027:3:27"},"nodeType":"YulFunctionCall","src":"8027:18:27"},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e","kind":"string","nodeType":"YulLiteral","src":"8047:34:27","type":"","value":"ERC20: burn amount exceeds balan"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8020:6:27"},"nodeType":"YulFunctionCall","src":"8020:62:27"},"nodeType":"YulExpressionStatement","src":"8020:62:27"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8102:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8113:2:27","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8098:3:27"},"nodeType":"YulFunctionCall","src":"8098:18:27"},{"hexValue":"6365","kind":"string","nodeType":"YulLiteral","src":"8118:4:27","type":"","value":"ce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8091:6:27"},"nodeType":"YulFunctionCall","src":"8091:32:27"},"nodeType":"YulExpressionStatement","src":"8091:32:27"},{"nodeType":"YulAssignment","src":"8132:27:27","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8144:9:27"},{"kind":"number","nodeType":"YulLiteral","src":"8155:3:27","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8140:3:27"},"nodeType":"YulFunctionCall","src":"8140:19:27"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8132:4:27"}]}]},"name":"abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7918:9:27","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7932:4:27","type":""}],"src":"7767:398:27"},{"body":{"nodeType":"YulBlock","src":"8219:76:27","statements":[{"body":{"nodeType":"YulBlock","src":"8241:22:27","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"8243:16:27"},"nodeType":"YulFunctionCall","src":"8243:18:27"},"nodeType":"YulExpressionStatement","src":"8243:18:27"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8235:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"8238:1:27"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8232:2:27"},"nodeType":"YulFunctionCall","src":"8232:8:27"},"nodeType":"YulIf","src":"8229:34:27"},{"nodeType":"YulAssignment","src":"8272:17:27","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"8284:1:27"},{"name":"y","nodeType":"YulIdentifier","src":"8287:1:27"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8280:3:27"},"nodeType":"YulFunctionCall","src":"8280:9:27"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"8272:4:27"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"8201:1:27","type":""},{"name":"y","nodeType":"YulTypedName","src":"8204:1:27","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"8210:4:27","type":""}],"src":"8170:125:27"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n}","id":27,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061010b5760003560e01c806370a08231116100a257806395d89b411161007157806395d89b411461021f578063a457c2d714610227578063a9059cbb1461023a578063dd62ed3e1461024d578063f2fde38b1461026057600080fd5b806370a08231146101c0578063715018a6146101e957806379cc6790146101f15780638da5cb5b1461020457600080fd5b8063313ce567116100de578063313ce56714610176578063395093511461018557806340c10f191461019857806342966c68146101ad57600080fd5b806306fdde0314610110578063095ea7b31461012e57806318160ddd1461015157806323b872dd14610163575b600080fd5b610118610273565b6040516101259190610b2b565b60405180910390f35b61014161013c366004610b9c565b610305565b6040519015158152602001610125565b6002545b604051908152602001610125565b610141610171366004610bc6565b61031d565b60405160128152602001610125565b610141610193366004610b9c565b610341565b6101ab6101a6366004610b9c565b610363565b005b6101ab6101bb366004610c02565b610379565b6101556101ce366004610c1b565b6001600160a01b031660009081526020819052604090205490565b6101ab610386565b6101ab6101ff366004610b9c565b61039a565b6005546040516001600160a01b039091168152602001610125565b6101186103af565b610141610235366004610b9c565b6103be565b610141610248366004610b9c565b61043e565b61015561025b366004610c3d565b61044c565b6101ab61026e366004610c1b565b610477565b60606003805461028290610c70565b80601f01602080910402602001604051908101604052809291908181526020018280546102ae90610c70565b80156102fb5780601f106102d0576101008083540402835291602001916102fb565b820191906000526020600020905b8154815290600101906020018083116102de57829003601f168201915b5050505050905090565b6000336103138185856104ed565b5060019392505050565b60003361032b858285610612565b61033685858561068c565b506001949350505050565b600033610313818585610354838361044c565b61035e9190610cc0565b6104ed565b61036b61085a565b61037582826108b4565b5050565b6103833382610993565b50565b61038e61085a565b6103986000610ad9565b565b6103a5823383610612565b6103758282610993565b60606004805461028290610c70565b600033816103cc828661044c565b9050838110156104315760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61033682868684036104ed565b60003361031381858561068c565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61047f61085a565b6001600160a01b0381166104e45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610428565b61038381610ad9565b6001600160a01b03831661054f5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610428565b6001600160a01b0382166105b05760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610428565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061061e848461044c565b9050600019811461068657818110156106795760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610428565b61068684848484036104ed565b50505050565b6001600160a01b0383166106f05760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610428565b6001600160a01b0382166107525760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610428565b6001600160a01b038316600090815260208190526040902054818110156107ca5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610428565b6001600160a01b03808516600090815260208190526040808220858503905591851681529081208054849290610801908490610cc0565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161084d91815260200190565b60405180910390a3610686565b6005546001600160a01b031633146103985760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610428565b6001600160a01b03821661090a5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610428565b806002600082825461091c9190610cc0565b90915550506001600160a01b03821660009081526020819052604081208054839290610949908490610cc0565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0382166109f35760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610428565b6001600160a01b03821660009081526020819052604090205481811015610a675760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610428565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610a96908490610cd8565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001610605565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b81811015610b5857858101830151858201604001528201610b3c565b81811115610b6a576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610b9757600080fd5b919050565b60008060408385031215610baf57600080fd5b610bb883610b80565b946020939093013593505050565b600080600060608486031215610bdb57600080fd5b610be484610b80565b9250610bf260208501610b80565b9150604084013590509250925092565b600060208284031215610c1457600080fd5b5035919050565b600060208284031215610c2d57600080fd5b610c3682610b80565b9392505050565b60008060408385031215610c5057600080fd5b610c5983610b80565b9150610c6760208401610b80565b90509250929050565b600181811c90821680610c8457607f821691505b602082108103610ca457634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610cd357610cd3610caa565b500190565b600082821015610cea57610cea610caa565b50039056fea264697066735822122018a40cebad5c2f8f2258e73184b93a501228fb0a04b5e9b1f9e4a7548dc270ba64736f6c634300080f0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x10B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1C0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x79CC6790 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x204 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xDE JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x110 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x163 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x118 PUSH2 0x273 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x125 SWAP2 SWAP1 PUSH2 0xB2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x141 PUSH2 0x13C CALLDATASIZE PUSH1 0x4 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x305 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH2 0x141 PUSH2 0x171 CALLDATASIZE PUSH1 0x4 PUSH2 0xBC6 JUMP JUMPDEST PUSH2 0x31D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH2 0x141 PUSH2 0x193 CALLDATASIZE PUSH1 0x4 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x341 JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x1A6 CALLDATASIZE PUSH1 0x4 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x363 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1AB PUSH2 0x1BB CALLDATASIZE PUSH1 0x4 PUSH2 0xC02 JUMP JUMPDEST PUSH2 0x379 JUMP JUMPDEST PUSH2 0x155 PUSH2 0x1CE CALLDATASIZE PUSH1 0x4 PUSH2 0xC1B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x386 JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x1FF CALLDATASIZE PUSH1 0x4 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x39A JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x125 JUMP JUMPDEST PUSH2 0x118 PUSH2 0x3AF JUMP JUMPDEST PUSH2 0x141 PUSH2 0x235 CALLDATASIZE PUSH1 0x4 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x3BE JUMP JUMPDEST PUSH2 0x141 PUSH2 0x248 CALLDATASIZE PUSH1 0x4 PUSH2 0xB9C JUMP JUMPDEST PUSH2 0x43E JUMP JUMPDEST PUSH2 0x155 PUSH2 0x25B CALLDATASIZE PUSH1 0x4 PUSH2 0xC3D JUMP JUMPDEST PUSH2 0x44C JUMP JUMPDEST PUSH2 0x1AB PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0xC1B JUMP JUMPDEST PUSH2 0x477 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x282 SWAP1 PUSH2 0xC70 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2AE SWAP1 PUSH2 0xC70 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FB JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D0 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FB JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2DE JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x313 DUP2 DUP6 DUP6 PUSH2 0x4ED JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x32B DUP6 DUP3 DUP6 PUSH2 0x612 JUMP JUMPDEST PUSH2 0x336 DUP6 DUP6 DUP6 PUSH2 0x68C JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x313 DUP2 DUP6 DUP6 PUSH2 0x354 DUP4 DUP4 PUSH2 0x44C JUMP JUMPDEST PUSH2 0x35E SWAP2 SWAP1 PUSH2 0xCC0 JUMP JUMPDEST PUSH2 0x4ED JUMP JUMPDEST PUSH2 0x36B PUSH2 0x85A JUMP JUMPDEST PUSH2 0x375 DUP3 DUP3 PUSH2 0x8B4 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x383 CALLER DUP3 PUSH2 0x993 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x38E PUSH2 0x85A JUMP JUMPDEST PUSH2 0x398 PUSH1 0x0 PUSH2 0xAD9 JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x3A5 DUP3 CALLER DUP4 PUSH2 0x612 JUMP JUMPDEST PUSH2 0x375 DUP3 DUP3 PUSH2 0x993 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x282 SWAP1 PUSH2 0xC70 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x3CC DUP3 DUP7 PUSH2 0x44C JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x431 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x336 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x4ED JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x313 DUP2 DUP6 DUP6 PUSH2 0x68C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x47F PUSH2 0x85A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4E4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x428 JUMP JUMPDEST PUSH2 0x383 DUP2 PUSH2 0xAD9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x54F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x428 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x428 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x61E DUP5 DUP5 PUSH2 0x44C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x686 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x679 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x428 JUMP JUMPDEST PUSH2 0x686 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x4ED JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6F0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x428 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x752 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x428 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x7CA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x428 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x801 SWAP1 DUP5 SWAP1 PUSH2 0xCC0 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x84D SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x686 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x398 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x428 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x90A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x428 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x91C SWAP2 SWAP1 PUSH2 0xCC0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x949 SWAP1 DUP5 SWAP1 PUSH2 0xCC0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x428 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xA67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x428 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xA96 SWAP1 DUP5 SWAP1 PUSH2 0xCD8 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0x605 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xB58 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xB3C JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xB6A JUMPI PUSH1 0x0 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB97 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBB8 DUP4 PUSH2 0xB80 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBDB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xBE4 DUP5 PUSH2 0xB80 JUMP JUMPDEST SWAP3 POP PUSH2 0xBF2 PUSH1 0x20 DUP6 ADD PUSH2 0xB80 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC14 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xC2D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC36 DUP3 PUSH2 0xB80 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xC50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC59 DUP4 PUSH2 0xB80 JUMP JUMPDEST SWAP2 POP PUSH2 0xC67 PUSH1 0x20 DUP5 ADD PUSH2 0xB80 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC84 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0xCA4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xCD3 JUMPI PUSH2 0xCD3 PUSH2 0xCAA JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xCEA JUMPI PUSH2 0xCEA PUSH2 0xCAA JUMP JUMPDEST POP SUB SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 XOR LOG4 0xC 0xEB 0xAD 0x5C 0x2F DUP16 0x22 PC 0xE7 BALANCE DUP5 0xB9 GASPRICE POP SLT 0x28 0xFB EXP DIV 0xB5 0xE9 0xB1 0xF9 0xE4 0xA7 SLOAD DUP14 0xC2 PUSH17 0xBA64736F6C634300080F00330000000000 ","sourceMap":"242:261:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98:5;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4433:197;;;;;;:::i;:::-;;:::i;:::-;;;1218:14:27;;1211:22;1193:41;;1181:2;1166:18;4433:197:5;1053:187:27;3244:106:5;3331:12;;3244:106;;;1391:25:27;;;1379:2;1364:18;3244:106:5;1245:177:27;5192:286:5;;;;;;:::i;:::-;;:::i;3093:91::-;;;3175:2;1902:36:27;;1890:2;1875:18;3093:91:5;1760:184:27;5873:234:5;;;;;;:::i;:::-;;:::i;408:93:26:-;;;;;;:::i;:::-;;:::i;:::-;;578:89:7;;;;;;:::i;:::-;;:::i;3408:125:5:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3508:18:5;3482:7;3508:18;;;;;;;;;;;;3408:125;1831:101:4;;;:::i;973:161:7:-;;;;;;:::i;:::-;;:::i;1201:85:4:-;1273:6;;1201:85;;-1:-1:-1;;;;;1273:6:4;;;2471:51:27;;2459:2;2444:18;1201:85:4;2325:203:27;2367:102:5;;;:::i;6594:427::-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;3976:149::-;;;;;;:::i;:::-;;:::i;2081:198:4:-;;;;;;:::i;:::-;;:::i;2156:98:5:-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:12;4570:32:5;719:10:12;4586:7:5;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:5;;4433:197;-1:-1:-1;;;4433:197:5:o;5192:286::-;5319:4;719:10:12;5375:38:5;5391:4;719:10:12;5406:6:5;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:5;;5192:286;-1:-1:-1;;;;5192:286:5:o;5873:234::-;5961:4;719:10:12;6015:64:5;719:10:12;6031:7:5;6068:10;6040:25;719:10:12;6031:7:5;6040:9;:25::i;:::-;:38;;;;:::i;:::-;6015:8;:64::i;408:93:26:-;1094:13:4;:11;:13::i;:::-;477:17:26::1;483:2;487:6;477:5;:17::i;:::-;408:93:::0;;:::o;578:89:7:-;633:27;719:10:12;653:6:7;633:5;:27::i;:::-;578:89;:::o;1831:101:4:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;973:161:7:-;1049:46;1065:7;719:10:12;1088:6:7;1049:15;:46::i;:::-;1105:22;1111:7;1120:6;1105:5;:22::i;2367:102:5:-;2423:13;2455:7;2448:14;;;;;:::i;6594:427::-;6687:4;719:10:12;6687:4:5;6768:25;719:10:12;6785:7:5;6768:9;:25::i;:::-;6741:52;;6831:15;6811:16;:35;;6803:85;;;;-1:-1:-1;;;6803:85:5;;3650:2:27;6803:85:5;;;3632:21:27;3689:2;3669:18;;;3662:30;3728:34;3708:18;;;3701:62;-1:-1:-1;;;3779:18:27;;;3772:35;3824:19;;6803:85:5;;;;;;;;;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;3729:189::-;3808:4;719:10:12;3862:28:5;719:10:12;3879:2:5;3883:6;3862:9;:28::i;3976:149::-;-1:-1:-1;;;;;4091:18:5;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149::o;2081:198:4:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:4;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:4;;4056:2:27;2161:73:4::1;::::0;::::1;4038:21:27::0;4095:2;4075:18;;;4068:30;4134:34;4114:18;;;4107:62;-1:-1:-1;;;4185:18:27;;;4178:36;4231:19;;2161:73:4::1;3854:402:27::0;2161:73:4::1;2244:28;2263:8;2244:18;:28::i;10847:370:5:-:0;-1:-1:-1;;;;;10978:19:5;;10970:68;;;;-1:-1:-1;;;10970:68:5;;4463:2:27;10970:68:5;;;4445:21:27;4502:2;4482:18;;;4475:30;4541:34;4521:18;;;4514:62;-1:-1:-1;;;4592:18:27;;;4585:34;4636:19;;10970:68:5;4261:400:27;10970:68:5;-1:-1:-1;;;;;11056:21:5;;11048:68;;;;-1:-1:-1;;;11048:68:5;;4868:2:27;11048:68:5;;;4850:21:27;4907:2;4887:18;;;4880:30;4946:34;4926:18;;;4919:62;-1:-1:-1;;;4997:18:27;;;4990:32;5039:19;;11048:68:5;4666:398:27;11048:68:5;-1:-1:-1;;;;;11127:18:5;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;11178:32;;1391:25:27;;;11178:32:5;;1364:18:27;11178:32:5;;;;;;;;10847:370;;;:::o;11498:441::-;11628:24;11655:25;11665:5;11672:7;11655:9;:25::i;:::-;11628:52;;-1:-1:-1;;11694:16:5;:37;11690:243;;11775:6;11755:16;:26;;11747:68;;;;-1:-1:-1;;;11747:68:5;;5271:2:27;11747:68:5;;;5253:21:27;5310:2;5290:18;;;5283:30;5349:31;5329:18;;;5322:59;5398:18;;11747:68:5;5069:353:27;11747:68:5;11857:51;11866:5;11873:7;11901:6;11882:16;:25;11857:8;:51::i;:::-;11618:321;11498:441;;;:::o;7475:651::-;-1:-1:-1;;;;;7601:18:5;;7593:68;;;;-1:-1:-1;;;7593:68:5;;5629:2:27;7593:68:5;;;5611:21:27;5668:2;5648:18;;;5641:30;5707:34;5687:18;;;5680:62;-1:-1:-1;;;5758:18:27;;;5751:35;5803:19;;7593:68:5;5427:401:27;7593:68:5;-1:-1:-1;;;;;7679:16:5;;7671:64;;;;-1:-1:-1;;;7671:64:5;;6035:2:27;7671:64:5;;;6017:21:27;6074:2;6054:18;;;6047:30;6113:34;6093:18;;;6086:62;-1:-1:-1;;;6164:18:27;;;6157:33;6207:19;;7671:64:5;5833:399:27;7671:64:5;-1:-1:-1;;;;;7817:15:5;;7795:19;7817:15;;;;;;;;;;;7850:21;;;;7842:72;;;;-1:-1:-1;;;7842:72:5;;6439:2:27;7842:72:5;;;6421:21:27;6478:2;6458:18;;;6451:30;6517:34;6497:18;;;6490:62;-1:-1:-1;;;6568:18:27;;;6561:36;6614:19;;7842:72:5;6237:402:27;7842:72:5;-1:-1:-1;;;;;7948:15:5;;;:9;:15;;;;;;;;;;;7966:20;;;7948:38;;8006:13;;;;;;;;:23;;7980:6;;7948:9;8006:23;;7980:6;;8006:23;:::i;:::-;;;;;;;;8060:2;-1:-1:-1;;;;;8045:26:5;8054:4;-1:-1:-1;;;;;8045:26:5;;8064:6;8045:26;;;;1391:25:27;;1379:2;1364:18;;1245:177;8045:26:5;;;;;;;;8082:37;9848:576;1359:130:4;1273:6;;-1:-1:-1;;;;;1273:6:4;719:10:12;1422:23:4;1414:68;;;;-1:-1:-1;;;1414:68:4;;6846:2:27;1414:68:4;;;6828:21:27;;;6865:18;;;6858:30;6924:34;6904:18;;;6897:62;6976:18;;1414:68:4;6644:356:27;9139:389:5;-1:-1:-1;;;;;9222:21:5;;9214:65;;;;-1:-1:-1;;;9214:65:5;;7207:2:27;9214:65:5;;;7189:21:27;7246:2;7226:18;;;7219:30;7285:33;7265:18;;;7258:61;7336:18;;9214:65:5;7005:355:27;9214:65:5;9366:6;9350:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;9382:18:5;;:9;:18;;;;;;;;;;:28;;9404:6;;9382:9;:28;;9404:6;;9382:28;:::i;:::-;;;;-1:-1:-1;;9425:37:5;;1391:25:27;;;-1:-1:-1;;;;;9425:37:5;;;9442:1;;9425:37;;1379:2:27;1364:18;9425:37:5;;;;;;;408:93:26;;:::o;9848:576:5:-;-1:-1:-1;;;;;9931:21:5;;9923:67;;;;-1:-1:-1;;;9923:67:5;;7567:2:27;9923:67:5;;;7549:21:27;7606:2;7586:18;;;7579:30;7645:34;7625:18;;;7618:62;-1:-1:-1;;;7696:18:27;;;7689:31;7737:19;;9923:67:5;7365:397:27;9923:67:5;-1:-1:-1;;;;;10086:18:5;;10061:22;10086:18;;;;;;;;;;;10122:24;;;;10114:71;;;;-1:-1:-1;;;10114:71:5;;7969:2:27;10114:71:5;;;7951:21:27;8008:2;7988:18;;;7981:30;8047:34;8027:18;;;8020:62;-1:-1:-1;;;8098:18:27;;;8091:32;8140:19;;10114:71:5;7767:398:27;10114:71:5;-1:-1:-1;;;;;10219:18:5;;:9;:18;;;;;;;;;;10240:23;;;10219:44;;10283:12;:22;;10257:6;;10219:9;10283:22;;10257:6;;10283:22;:::i;:::-;;;;-1:-1:-1;;10321:37:5;;1391:25:27;;;10347:1:5;;-1:-1:-1;;;;;10321:37:5;;;;;1379:2:27;1364:18;10321:37:5;1245:177:27;2433:187:4;2525:6;;;-1:-1:-1;;;;;2541:17:4;;;-1:-1:-1;;;;;;2541:17:4;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;14:597:27:-;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:27;574:15;-1:-1:-1;;570:29:27;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:27:o;616:173::-;684:20;;-1:-1:-1;;;;;733:31:27;;723:42;;713:70;;779:1;776;769:12;713:70;616:173;;;:::o;794:254::-;862:6;870;923:2;911:9;902:7;898:23;894:32;891:52;;;939:1;936;929:12;891:52;962:29;981:9;962:29;:::i;:::-;952:39;1038:2;1023:18;;;;1010:32;;-1:-1:-1;;;794:254:27:o;1427:328::-;1504:6;1512;1520;1573:2;1561:9;1552:7;1548:23;1544:32;1541:52;;;1589:1;1586;1579:12;1541:52;1612:29;1631:9;1612:29;:::i;:::-;1602:39;;1660:38;1694:2;1683:9;1679:18;1660:38;:::i;:::-;1650:48;;1745:2;1734:9;1730:18;1717:32;1707:42;;1427:328;;;;;:::o;1949:180::-;2008:6;2061:2;2049:9;2040:7;2036:23;2032:32;2029:52;;;2077:1;2074;2067:12;2029:52;-1:-1:-1;2100:23:27;;1949:180;-1:-1:-1;1949:180:27:o;2134:186::-;2193:6;2246:2;2234:9;2225:7;2221:23;2217:32;2214:52;;;2262:1;2259;2252:12;2214:52;2285:29;2304:9;2285:29;:::i;:::-;2275:39;2134:186;-1:-1:-1;;;2134:186:27:o;2533:260::-;2601:6;2609;2662:2;2650:9;2641:7;2637:23;2633:32;2630:52;;;2678:1;2675;2668:12;2630:52;2701:29;2720:9;2701:29;:::i;:::-;2691:39;;2749:38;2783:2;2772:9;2768:18;2749:38;:::i;:::-;2739:48;;2533:260;;;;;:::o;2798:380::-;2877:1;2873:12;;;;2920;;;2941:61;;2995:4;2987:6;2983:17;2973:27;;2941:61;3048:2;3040:6;3037:14;3017:18;3014:38;3011:161;;3094:10;3089:3;3085:20;3082:1;3075:31;3129:4;3126:1;3119:15;3157:4;3154:1;3147:15;3011:161;;2798:380;;;:::o;3183:127::-;3244:10;3239:3;3235:20;3232:1;3225:31;3275:4;3272:1;3265:15;3299:4;3296:1;3289:15;3315:128;3355:3;3386:1;3382:6;3379:1;3376:13;3373:39;;;3392:18;;:::i;:::-;-1:-1:-1;3428:9:27;;3315:128::o;8170:125::-;8210:4;8238:1;8235;8232:8;8229:34;;;8243:18;;:::i;:::-;-1:-1:-1;8280:9:27;;8170:125::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","burnFrom(address,uint256)":"79cc6790","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","mint(address,uint256)":"40c10f19","name()":"06fdde03","owner()":"8da5cb5b","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys `amount` tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys `amount` tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `amount`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StakePool/LPToken.sol\":\"LPToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x35cee07c3e7af2a8519a396e15387ca497061bb84a72200c65b0a12a3126c461\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68f1d6ba548c796f8f31e0a445175f8a8d486891a59010e13b4f9b37cc5d50c2\",\"dweb:/ipfs/QmZRjUcHU8RoarhfrqTUeUMye2yFgpoJSBPDHeNcm9YXtk\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/StakePool/LPToken.sol\":{\"keccak256\":\"0xd417421e5c30a7374c056f60be7b26c0718b0204982eb520ca2b89bbd31b082d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a5def4be02c32ed33fa03ebc73fb69021d610a150e76fa6698c277102d87a115\",\"dweb:/ipfs/QmP9xL7o1kxdiA3DjJpPHoVBTyLjjZqLvoedDSABmn6qib\"]}},\"version\":1}"}}}}}